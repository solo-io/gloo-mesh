steps:

  # Can create a dep cache by running 'gcloud builds submit . --config=cloudbuild-cache.yaml'
  # These two steps should populate the cache
  - name: gcr.io/cloud-builders/gsutil
    entrypoint: 'bash'
    args: ['-c', 'mkdir -p ./gopath/pkg/dep && gsutil cat gs://solo-public-cache/supergloo/supergloo-dep.tar.gz | tar -xzf -']
    id: 'download-untar-dep-cache'
    waitFor: ['-']

  # Can create a dep cache by running 'gcloud builds submit . --config=cloudbuild-cache.yaml'
  # These two steps should populate the cache
  - name: gcr.io/cloud-builders/gsutil
    entrypoint: 'bash'
    args: ['-c', 'mkdir -p ./gopath/pkg/dep && gsutil cat gs://solo-public-cache/supergloo/supergloo-gocache.tar.gz | tar -xzf -']
    id: 'download-untar-go-cache'
    waitFor: ['-']

  # Run dep to set up the project so it can be built and tested
  # Dep modifies workspace so that the code is moved into the PROJECT_ROOT
  # All steps after this must set GOPATH
  - name: 'gcr.io/$PROJECT_ID/dep'
    args: ['ensure', '-v']
    env:
      - 'PROJECT_ROOT=github.com/solo-io/supergloo'
      - 'GIT_SSH_CONFIG=FALSE'
    id: 'dep'
    waitFor: ['download-untar-dep-cache']

  # Helm setup
  # 1) Create directory to sync helm data
  - name: gcr.io/cloud-builders/gsutil
    entrypoint: mkdir
    args: ['-p', './_output/helm']
    dir: './gopath/src/github.com/solo-io/supergloo'
    waitFor: ['dep']
    id: 'make-helm-dir'

  - name: gcr.io/cloud-builders/gsutil
    args:
      - rsync
      - -r
      - gs://supergloo-helm/
      - './_output/helm'
    dir: './gopath/src/github.com/solo-io/supergloo'
    waitFor: ['make-helm-dir']
    id: 'setup-helm'

  # run all of the tests
  - name: 'gcr.io/$PROJECT_ID/e2e-ginkgo'
    env:
      - 'PROJECT_ROOT=github.com/solo-io/supergloo'
      - 'GOPATH=/workspace/gopath'
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
      - 'CLOUDSDK_CONTAINER_CLUSTER=test-cluster'
    dir: './gopath/src/github.com/solo-io/supergloo'
    # TODO (ilackarms): add test/e2e when e2e-test pr is merged
    args: ['-r', '-failFast', '-p', 'pkg']
    waitFor: ['setup-helm', 'dep', 'download-untar-go-cache']
    id: 'test'

  # Build everything
  # 1) Compile all docker images
  # 2) Run make targets to push docker images, compile manifests, produce release artifacts, deploy docs
  # 3) Publish helm chart
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args: ['-c', 'docker login --username soloiobot --password $$DOCKER_HUB_PASSWORD']
    secretEnv: ['DOCKER_HUB_PASSWORD']
    id: 'docker-login'
    waitFor: ['test']

  - name: 'gcr.io/$PROJECT_ID/go-make'
    args: ['docker', 'supergloo-cli']
    env:
      - 'PROJECT_ROOT=github.com/solo-io/supergloo'
      - 'GOPATH=/workspace/gopath'
      - 'TAGGED_VERSION=$TAG_NAME'
    dir: './gopath/src/github.com/solo-io/supergloo'
    waitFor: ['docker-login']
    id: 'compile'

  - name: 'gcr.io/$PROJECT_ID/go-make'
    args: ['docker-push', 'manifest', 'upload-github-release-assets', 'push-docs']
    env:
      - 'TAGGED_VERSION=$TAG_NAME'
      - 'PROJECT_ROOT=github.com/solo-io/supergloo'
      - 'GOPATH=/workspace/gopath'
      - 'HELM_HOME=/root/.helm' # tell helm where to find data
    dir: './gopath/src/github.com/solo-io/supergloo'
    secretEnv: ['GITHUB_TOKEN', 'FIREBASE_TOKEN']
    id: 'release'
    waitFor: ['compile']


  # Sync helm chart data back to google storage bucket
  - name: gcr.io/cloud-builders/gsutil
    args:
      - rsync
      - -r
      - './_output/helm'
      - gs://supergloo-helm/
    dir: './gopath/src/github.com/solo-io/supergloo'
    waitFor: ['release']
    id: 'set-helm-chart'

secrets:
  - kmsKeyName: projects/solo-public/locations/global/keyRings/build/cryptoKeys/build-key
    secretEnv:
      GITHUB_TOKEN: CiQABlzmSRpjt9c2jcCGU2lIk68qAkHIzIHUeYS+artlcens/7oSUQCCPGSG407g5usGvAhM+oL98Xir0fHWUiNe3827h9zdhmkCbrZpNqfVFkMhAxQ/ZlhC31+KwzWoHnDSb3RN7CoKj+gves6q7MMf7wNxSmC46A==
      DOCKER_HUB_PASSWORD: CiQABlzmSW0u+qhXDvTCxLnbi09Zm88eCU0wSdvFn1W+6WOpTgQSTgCCPGSGTAlMndrEkYOynPhDzTXrW1q1eAsQYjKOWOwZKodcQZ2WIzdvpOOjv+WrGTssWWg1uPFV4CnajT7DzeNAb7USkla1epatm6OnuQ==
      FIREBASE_TOKEN: CiQABlzmSc0BWpPfrGRtDscrxOfp9ZBkZO9fkO79tjEmA14c8ZESVwCCPGSG8uZtLSmFucmEEJGJ0080ON7Zw5TjLe2YdwuxnSOA5YzZryVwLFAMzRmfb6OBxyThTZKvGZzgfXyv6CeLwYX0exk20u7k2bnrWbFHO0Aa4TiQqw==

timeout: 6600s
