// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/supergloo/api/v1/routing.proto

package v1

import (
	bytes "bytes"
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type RoutingRule struct {
	// Status indicates the validation status of this resource.
	// Status is read-only by clients, and set by supergloo during validation
	Status core.Status `protobuf:"bytes,100,opt,name=status,proto3" json:"status"`
	// Metadata contains the object metadata for this resource
	Metadata core.Metadata `protobuf:"bytes,101,opt,name=metadata,proto3" json:"metadata"`
	// target where we apply this rule. this can be a mesh group or an individual mesh
	TargetMesh           *core.ResourceRef `protobuf:"bytes,1,opt,name=target_mesh,json=targetMesh,proto3" json:"target_mesh,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *RoutingRule) Reset()         { *m = RoutingRule{} }
func (m *RoutingRule) String() string { return proto.CompactTextString(m) }
func (*RoutingRule) ProtoMessage()    {}
func (*RoutingRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_29316bfaa5f4ba1a, []int{0}
}
func (m *RoutingRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoutingRule.Unmarshal(m, b)
}
func (m *RoutingRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoutingRule.Marshal(b, m, deterministic)
}
func (m *RoutingRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoutingRule.Merge(m, src)
}
func (m *RoutingRule) XXX_Size() int {
	return xxx_messageInfo_RoutingRule.Size(m)
}
func (m *RoutingRule) XXX_DiscardUnknown() {
	xxx_messageInfo_RoutingRule.DiscardUnknown(m)
}

var xxx_messageInfo_RoutingRule proto.InternalMessageInfo

func (m *RoutingRule) GetStatus() core.Status {
	if m != nil {
		return m.Status
	}
	return core.Status{}
}

func (m *RoutingRule) GetMetadata() core.Metadata {
	if m != nil {
		return m.Metadata
	}
	return core.Metadata{}
}

func (m *RoutingRule) GetTargetMesh() *core.ResourceRef {
	if m != nil {
		return m.TargetMesh
	}
	return nil
}

func init() {
	proto.RegisterType((*RoutingRule)(nil), "supergloo.solo.io.RoutingRule")
}

func init() {
	proto.RegisterFile("github.com/solo-io/supergloo/api/v1/routing.proto", fileDescriptor_29316bfaa5f4ba1a)
}

var fileDescriptor_29316bfaa5f4ba1a = []byte{
	// 316 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xb1, 0x4e, 0x42, 0x31,
	0x14, 0x86, 0xbd, 0xe6, 0x86, 0x98, 0x62, 0x4c, 0xbc, 0x21, 0x06, 0x19, 0xd0, 0x38, 0x31, 0x68,
	0x1b, 0x70, 0x31, 0x8c, 0xec, 0x2c, 0xd7, 0xcd, 0xc5, 0x14, 0x38, 0x94, 0x86, 0x0b, 0xa7, 0x39,
	0x6d, 0x75, 0xe7, 0x69, 0x7c, 0x14, 0x77, 0x77, 0x07, 0xdf, 0x80, 0x37, 0x30, 0xb7, 0xb7, 0x97,
	0x84, 0x44, 0x0d, 0x4e, 0xed, 0xc9, 0xff, 0x7f, 0xe9, 0xdf, 0x3f, 0x87, 0xf5, 0x95, 0x76, 0x0b,
	0x3f, 0xe1, 0x53, 0x5c, 0x09, 0x8b, 0x05, 0xde, 0x69, 0x14, 0xd6, 0x1b, 0x20, 0x55, 0x20, 0x0a,
	0x69, 0xb4, 0x78, 0xe9, 0x0b, 0x42, 0xef, 0xf4, 0x5a, 0x71, 0x43, 0xe8, 0x30, 0x3b, 0xdf, 0xe9,
	0xbc, 0x24, 0xb8, 0xc6, 0x4e, 0x4b, 0xa1, 0xc2, 0xa0, 0x8a, 0xf2, 0x56, 0x19, 0x3b, 0x5d, 0x85,
	0xa8, 0x0a, 0x10, 0x61, 0x9a, 0xf8, 0xb9, 0x98, 0x79, 0x92, 0x4e, 0xe3, 0xfa, 0x37, 0xfd, 0x95,
	0xa4, 0x31, 0x40, 0x36, 0xea, 0x3f, 0x66, 0x2b, 0xcf, 0xa5, 0x76, 0x75, 0xb4, 0x15, 0x38, 0x39,
	0x93, 0x4e, 0x46, 0x44, 0x1c, 0x80, 0x58, 0x27, 0x9d, 0xaf, 0xdf, 0xb8, 0x3d, 0x00, 0x20, 0x98,
	0xff, 0x23, 0x51, 0x3d, 0x57, 0xc8, 0xcd, 0x47, 0xc2, 0x9a, 0x79, 0xd5, 0x5f, 0xee, 0x0b, 0xc8,
	0x06, 0xac, 0x51, 0x05, 0x68, 0xcf, 0xae, 0x93, 0x5e, 0x73, 0xd0, 0xe2, 0x53, 0x24, 0xa8, 0x9b,
	0xe4, 0x8f, 0x41, 0x1b, 0xa5, 0xef, 0x9f, 0x57, 0x47, 0x79, 0x74, 0x66, 0x0f, 0xec, 0xa4, 0xfe,
	0x67, 0x1b, 0x02, 0x75, 0xb1, 0x4f, 0x8d, 0xa3, 0x1a, 0xb9, 0x9d, 0x3b, 0x1b, 0xb2, 0xa6, 0x93,
	0xa4, 0xc0, 0x3d, 0xaf, 0xc0, 0x2e, 0xda, 0x49, 0x80, 0x2f, 0xf7, 0xe1, 0x1c, 0x2c, 0x7a, 0x9a,
	0x42, 0x0e, 0xf3, 0x9c, 0x55, 0xee, 0x31, 0xd8, 0xc5, 0xb0, 0xb3, 0xd9, 0xa6, 0x29, 0x3b, 0x26,
	0xda, 0x6c, 0xd3, 0xb3, 0xec, 0x34, 0x2e, 0x01, 0xf9, 0x02, 0xec, 0x88, 0xbf, 0x7d, 0x75, 0x93,
	0xa7, 0xde, 0x9f, 0xcb, 0x63, 0x96, 0x6a, 0x10, 0x4b, 0x99, 0x34, 0x42, 0x19, 0xf7, 0xdf, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x92, 0xaa, 0x71, 0x0b, 0x6f, 0x02, 0x00, 0x00,
}

func (this *RoutingRule) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*RoutingRule)
	if !ok {
		that2, ok := that.(RoutingRule)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if !this.Status.Equal(&that1.Status) {
		return false
	}
	if !this.Metadata.Equal(&that1.Metadata) {
		return false
	}
	if !this.TargetMesh.Equal(that1.TargetMesh) {
		return false
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
