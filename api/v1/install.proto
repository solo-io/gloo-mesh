syntax = "proto3";
package supergloo.solo.io;
option go_package = "github.com/solo-io/supergloo/pkg/api/v1";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

import "github.com/solo-io/solo-kit/api/v1/metadata.proto";
import "github.com/solo-io/solo-kit/api/v1/status.proto";

import "encryption.proto";
import "mesh.proto";

/*
@solo-kit:resource.short_name=install
@solo-kit:resource.plural_name=installs
@solo-kit:resource.resource_groups=install.supergloo.solo.io
*/
message Install {
    // Status indicates the validation status of this resource.
    // Status is read-only by clients, and set by gloo during validation
    core.solo.io.Status status = 1 [(gogoproto.nullable) = false, (gogoproto.moretags) = "testdiff:\"ignore\""];

    // Metadata contains the object metadata for this resource
    core.solo.io.Metadata metadata = 2 [(gogoproto.nullable) = false];

    // mesh-specific configuration
    oneof mesh_type {
        Istio istio = 10;
        Linkerd2 linkerd2= 20;
        Consul consul= 30;
    };

    HelmChartLocator chartLocator = 6;

    Encryption encryption = 7;
}

message HelmChartLocator {

    oneof kind {
        // path to a local directory, local tar.gz, or url tar.gz
        HelmChartPath chartPath = 1;
    }
}

message HelmChartPath {
    string path = 1;
}
