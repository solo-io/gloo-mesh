syntax = "proto3";
package supergloo.solo.io;
option go_package = "github.com/solo-io/supergloo/pkg/api/v1";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

import "github.com/solo-io/solo-kit/api/v1/metadata.proto";
import "github.com/solo-io/solo-kit/api/v1/status.proto";

import "routing.proto";
import "observability.proto";
import "encryption.proto";
import "policy.proto";

/*
@solo-kit:resource.short_name=mesh
@solo-kit:resource.plural_name=meshes
@solo-kit:resource.resource_groups=translator.supergloo.solo.io
*/
message Mesh {
    // Status indicates the validation status of this resource.
    // Status is read-only by clients, and set by gloo during validation
    core.solo.io.Status status = 6 [(gogoproto.nullable) = false, (gogoproto.moretags) = "testdiff:\"ignore\""];

    // Metadata contains the object metadata for this resource
    core.solo.io.Metadata metadata = 7 [(gogoproto.nullable) = false];

    TargetMesh target_mesh = 2;

    Routing routing = 1;
    Encryption encryption = 98;
    Observability observability = 99;
    Policy policy = 100;

//    MeshMetadata mesh_metadata = 99;
}

message TargetMesh {
    MeshType mesh_type = 1;
    oneof deployment_location {
        KubeLocation kube_location = 2;
    };
}

message KubeLocation {
    string kubeconfig = 1;
    string master_address = 2;
    string namespace = 3;
}

enum MeshType {
    ISTIO = 0;
    LINKERD1 = 1;
    LINKERD2 = 2;
    CONSUL = 3;
}
