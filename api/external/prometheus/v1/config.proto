syntax = "proto3";
package config.prometheus.io;
option go_package = "github.com/solo-io/supergloo/pkg/api/external/prometheus/v1";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

import "github.com/solo-io/solo-kit/api/v1/metadata.proto";

/*
@solo-kit:resource.short_name=pcf
@solo-kit:resource.plural_name=prometheusconfigs
@solo-kit:resource.resource_groups=observability.config.prometheus.io

Prometheus Config
 */
message Config {
    // jsontag is used to refer to the common kubernetes configmap key
    PrometheusConfig prometheus = 1 [(gogoproto.customprotoname) = "prometheus.yml"];

    // Metadata contains the object metadata for this resource
    core.solo.io.Metadata metadata = 7 [(gogoproto.nullable) = false];
}

message PrometheusConfig {
    Global global = 1;
    repeated ScrapeConfig scrape_configs = 2;
}

message Global {
    string scrape_interval = 1;
}

message KubernetesSdConfig {
    Namespaces namespaces = 1;
    string role = 2;
}

message MetricRelabelConfig {
    string action = 1;
    string regex = 2;
    repeated string source_labels = 3;
}

message Namespaces {
    repeated string names = 1;
}

message RelabelConfig {
    string action = 1;
    string regex = 2;
    repeated string source_labels = 3;
}

message ScrapeConfig {
    string job_name = 1;
    repeated KubernetesSdConfig kubernetes_sd_configs = 2;
    repeated RelabelConfig relabel_configs = 3;
    string scrape_interval = 4;
    repeated MetricRelabelConfig metric_relabel_configs = 5;
    string metrics_path = 6;
    string bearer_token_file = 7;
    string scheme = 8;
    TLSConfig tlsconfig = 9 [(gogoproto.customname) = "TLSConfig"];
}

message TLSConfig {
    string ca_file = 1;
}

