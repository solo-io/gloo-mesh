syntax = "proto3";
package networking.smh.solo.io;
option go_package = "github.com/solo-io/service-mesh-hub/pkg/api/networking.smh.solo.io/v1alpha2";

import "google/protobuf/wrappers.proto";
import "skv2/api/core/v1/core.proto";

import "gogoproto/gogo.proto";
option (gogoproto.equal_all) = true;

/*
    Select TrafficTargets using one or more platform-specific selection objects.
*/
message TrafficTargetSelector {

    // A KubeServiceMatcher matches kubernetes services by their labels, namespaces, and/or clusters.
    KubeServiceMatcher kube_service_matcher = 1;

    // Match individual k8s Services by direct reference.
    KubeServiceRefs kube_service_refs = 2;

    message KubeServiceMatcher {
        /*
            If specified, all labels must exist on k8s Service.
            When used in a networking policy, omission matches any labels.
            When used in a Role, a wildcard `"*"` must be explicitly used to match any label key and/or value.
        */
        map<string, string> labels = 1;

        /*
            If specified, match k8s Services if they exist in one of the specified namespaces.
            When used in a networking policy, omission matches any namespace.
            When used in a Role, a wildcard `"*"` must be explicitly used to match any namespace.
        */
        repeated string namespaces = 2;

        /*
            If specified, match k8s Services if they exist in one of the specified clusters.
            When used in a networking policy, omission matches any cluster.
            When used in a Role, a wildcard `"*"` must be explicitly used to match any cluster.
        */
        repeated string clusters = 3;
    }

    message KubeServiceRefs {
        /*
            Match k8s Services by direct reference.
            When used in a networking policy, omission of any field (name, namespace, or clusterName) allows matching any value for that field.
            When used in a Role, a wildcard `"*"` must be explicitly used to match any value for the given field.
        */
        repeated .core.skv2.solo.io.ClusterObjectRef services = 1;
    }
}

/*
    Select Kubernetes workloads directly using label namespace and/or cluster criteria. See comments on the fields for
    detailed semantics.
*/
message WorkloadSelector {
    /*
        If specified, all labels must exist on k8s workload.
        When used in a networking policy, omission matches any labels.
        When used in a Role, a wildcard `"*"` must be explicitly used to match any label key and/or value.
    */
    map<string, string> labels = 1;

    /*
        If specified, match k8s workloads if they exist in one of the specified namespaces.
        When used in a networking policy, omission matches any namespace.
        When used in a Role, a wildcard `"*"` must be explicitly used to match any namespace.
    */
    repeated string namespaces = 2;

    /*
        If specified, match k8s workloads if they exist in one of the specified clusters.
        When used in a networking policy, omission matches any cluster.
        When used in a Role, a wildcard `"*"` must be explicitly used to match any cluster.
    */
    repeated string clusters = 3;
}

/*
    Selector capable of selecting specific service identities. Useful for binding policy rules.
    Either (namespaces, cluster, service_account_names) or service_accounts can be specified.
    If all fields are omitted, any source identity is permitted.
*/
message IdentitySelector {

    // A KubeIdentityMatcher matches request identities based on the k8s namespace and cluster.
    KubeIdentityMatcher kube_identity_matcher = 1;

    // KubeServiceAccountRefs matches request identities based on the k8s service account of request.
    KubeServiceAccountRefs kube_service_account_refs = 2;

    message KubeIdentityMatcher {

        /*
            If specified, match k8s identity if it exists in one of the specified namespaces.
            When used in a networking policy, omission matches any namespace.
            When used in a Role, a wildcard `"*"` must be explicitly used to match any namespace.
        */
        repeated string namespaces = 1;

        /*
            If specified, match k8s identity if it exists in one of the specified clusters.
            When used in a networking policy, omission matches any cluster.
            When used in a Role, a wildcard `"*"` must be explicitly used to match any cluster.
        */
        repeated string clusters = 2;
    }

    message KubeServiceAccountRefs {
        /*
            Match k8s ServiceAccounts by direct reference.
            When used in a networking policy, omission of any field (name, namespace, or clusterName) allows matching any value for that field.
            When used in a Role, a wildcard `"*"` must be explicitly used to match any value for the given field.
        */
        repeated .core.skv2.solo.io.ClusterObjectRef service_accounts = 1;
    }
}
