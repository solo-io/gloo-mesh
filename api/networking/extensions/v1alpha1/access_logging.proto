syntax = "proto3";
package extensions.networking.mesh.gloo.solo.io;

option go_package = "github.com/solo-io/gloo-mesh/pkg/api/networking.mesh.gloo.solo.io/extensions/v1alpha1";

import "github.com/solo-io/skv2/api/core/v1/core.proto";
import "github.com/solo-io/gloo-mesh/api/networking/v1alpha2/selectors.proto";
import "envoy/data/accesslog/v3/accesslog.proto";

// The logging service provides structured retrieval of event logs captured by Gloo Mesh.
service Logging {
    // Stream Envoy access logs as they are captured.
    rpc WatchAccessLogs (WatchAccessLogsRequest) returns (stream AccessLog) {
    }
}

message WatchAccessLogsRequest {
    // Select the workloads whose access logs should be streamed.
    // Leave empty to stream access logs for all workloads.
    repeated .networking.mesh.gloo.solo.io.WorkloadSelector workload_selectors = 1;
}

message AccessLog {
    // Reference to the workload that emitted this access log.
    .core.skv2.solo.io.ClusterObjectRef workloadRef = 1;

    // An Envoy access log.
    .envoy.data.accesslog.v3.HTTPAccessLogEntry http_access_log = 2;
}
