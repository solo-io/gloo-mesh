syntax = "proto3";
package observability.enterprise.mesh.gloo.solo.io;

option go_package = "github.com/solo-io/gloo-mesh/pkg/api/observability.enterprise.mesh.gloo.solo.io/v1alpha1";

import "github.com/solo-io/gloo-mesh/api/networking/v1alpha2/selectors.proto";
import "github.com/solo-io/gloo-mesh/api/networking/v1alpha2/validation_state.proto";
import "envoy/config/accesslog/v3/accesslog.proto";

message AccessLogCollectionSpec {

    // Select the workloads to be configured to emit access logs.
    // Leave empty to apply to all workloads managed by Gloo Mesh.
    repeated .networking.mesh.gloo.solo.io.WorkloadSelector workload_selectors = 1;

    // Configure the criteria for determining which access logs will be emitted.
    // Leave empty to emit all access logs.
    repeated .envoy.config.accesslog.v3.AccessLogFilter access_log_filters = 2;
}

message AccessLogCollectionStatus {

    // The most recent generation observed in the the AccessLogCollection metadata.
    // If the observedGeneration does not match generation, the controller has not processed the most
    // recent version of this resource.
    int64 observed_generation = 1;

    // The state of the overall resource, will only show accepted if it has been successfully
    // applied to all target meshes.
    .networking.mesh.gloo.solo.io.ApprovalState state = 2;

    // Any errors encountered during processing. Also reported to any Workloads that this object applies to.
    repeated string errors = 3;
}
