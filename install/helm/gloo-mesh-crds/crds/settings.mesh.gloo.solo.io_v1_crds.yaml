# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: gloo-mesh
    app.kubernetes.io/name: gloo-mesh
  name: settings.settings.mesh.gloo.solo.io
spec:
  group: settings.mesh.gloo.solo.io
  names:
    kind: Settings
    listKind: SettingsList
    plural: settings
    singular: settings
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: Configure system-wide settings and defaults. Settings specified
            in networking policies take precedence over those specified here.
          properties:
            dashboard:
              description: Configure the enterprise dashboard.
              properties:
                authConfigs:
                  items:
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - none
                        - required:
                          - oidc
                    - required:
                      - none
                    - required:
                      - oidc
                    properties:
                      name:
                        nullable: true
                        type: string
                      none:
                        type: object
                      oidc:
                        properties:
                          appUrl:
                            description: URL to redirect to after successful auth.
                            type: string
                          authEndpointQueryParams:
                            additionalProperties:
                              type: string
                            description: |-
                              Extra query parameters to apply to the authorization request to the
                              identity provider. For example, using the PKCE flow
                              (https://www.oauth.com/oauth2-servers/pkce/authorization-request/) by
                              setting `code_challenge` and `code_challenge_method`.
                            type: object
                          callbackPath:
                            description: Path to handle the OIDC callback.
                            type: string
                          clientId:
                            description: The client ID from the issuer
                            type: string
                          clientSecret:
                            description: THe client secret from the issuer
                            properties:
                              name:
                                description: name of the resource being referenced
                                type: string
                              namespace:
                                description: namespace of the resource being referenced
                                type: string
                            type: object
                          discoveryOverride:
                            description: |-
                              Ensure that certain values are set regardless of what the OIDC
                              provider returns.
                            properties:
                              authEndpoint:
                                description: URL of the provider authorization endpoint.
                                type: string
                              authMethods:
                                description: |-
                                  List of client authentication methods supported by the provider
                                  token endpoint.
                                items:
                                  type: string
                                type: array
                              claims:
                                description: List of claim types that the provider
                                  supports.
                                items:
                                  type: string
                                type: array
                              idTokenAlgs:
                                description: |-
                                  List of json web signature signing algorithms that the provider
                                  supports for encoding claims in a JWT.
                                items:
                                  type: string
                                type: array
                              jwksUri:
                                description: URL of the provider JSON web key set.
                                type: string
                              responseTypes:
                                description: List of response types that the provider
                                  supports.
                                items:
                                  type: string
                                type: array
                              scopes:
                                description: List of scope values that the provider
                                  supports.
                                items:
                                  type: string
                                type: array
                              subjects:
                                description: List of subject identifier types that
                                  the provider supports.
                                items:
                                  type: string
                                type: array
                              tokenEndpoint:
                                description: URL of the provider token endpoint.
                                type: string
                            type: object
                          discoveryPollInterval:
                            description: How often to poll the OIDC issuer for new
                              configuration.
                            type: string
                          header:
                            description: Additional headers.
                            properties:
                              accessTokenHeader:
                                description: If set, the access token will be sent
                                  upstream with this header.
                                type: string
                              idTokenHeader:
                                description: If set, the ID token will be sent upstream
                                  with this header.
                                type: string
                            type: object
                          issuerUrl:
                            description: |-
                              The url of the issuer. We will look for OIDC information in:
                                {{ issuerURL }}/.well-known/openid-configuration
                            type: string
                          jwksCacheRefreshPolicy:
                            description: |-
                              If a user executes a request with a key that is not found in the
                              JWKS, it could be that the keys have rotated on the remote source,
                              and not yet in the local cache. This policy lets you define the
                              behavior for how to refresh the local cache during a request where an
                              invalid key is provided
                            oneOf:
                            - not:
                                anyOf:
                                - required:
                                  - never
                                - required:
                                  - always
                                - required:
                                  - maxIdpReqPerPollingInterval
                            - required:
                              - never
                            - required:
                              - always
                            - required:
                              - maxIdpReqPerPollingInterval
                            properties:
                              always:
                                description: |-
                                  If a key is not in the cache, fetch the most recent keys from
                                  the IdP and update the cache. NOTE: This should only be done
                                  in trusted environments, since missing keys will each trigger
                                  a request to the IdP. Using this in an environment exposed to
                                  the internet will allow malicious agents to execute a DDoS
                                  attack by spamming protected endpoints with tokens signed by
                                  invalid keys.
                                maxProperties: 0
                                type: object
                              maxIdpReqPerPollingInterval:
                                description: |-
                                  If a key is not in the cache, fetch the most recent keys from
                                  the IdP and update the cache. This value sets the number of
                                  requests to the IdP per polling interval. If that limit is
                                  exceeded, we will stop fetching from the IdP for the
                                  remainder of the polling interval.
                                maximum: 4294967295
                                minimum: 0
                                type: integer
                              never:
                                description: |-
                                  Never refresh the local JWKS cache on demand. If a key is not
                                  in the cache, it is assumed to be malicious. This is the
                                  default policy since we assume that IdPs publish keys before
                                  they rotate them, and frequent polling finds the newest keys.
                                maxProperties: 0
                                type: object
                            type: object
                          logoutPath:
                            description: Path used to logout. If not provided, logout
                              will be disabled.
                            type: string
                          scopes:
                            description: Scopes to request in addition to 'openid'.
                            items:
                              type: string
                            type: array
                          tokenEndpointQueryParams:
                            additionalProperties:
                              type: string
                            description: |-
                              Extra query parameters to apply to the token request to the identity
                              provider. For example, using the PKCE flow
                              (https://www.oauth.com/oauth2-servers/pkce/authorization-request/) by
                              setting `code_challenge` and `code_challenge_method`.
                            type: object
                        type: object
                    type: object
                  type: array
              type: object
            discovery:
              description: Settings for Gloo Mesh discovery.
              properties:
                istio:
                  description: Istio-specific discovery settings
                  properties:
                    ingressGatewayDetectors:
                      additionalProperties:
                        properties:
                          gatewayTlsPortName:
                            description: |-
                              The name of the TLS port used to detect ingress gateways. Kubernetes services must have a port with this name
                              in order to be recognized as an ingress gateway. If not specified, will default to `tls`.
                            type: string
                          gatewayWorkloadLabels:
                            additionalProperties:
                              type: string
                            description: |-
                              Workload labels used to detect ingress gateways for an Istio deployment.
                              If not specified, will default to `{"istio": "ingressgateway"}`.
                            type: object
                        type: object
                      description: |-
                        Configure discovery of ingress gateways per cluster. The key to the map is either a Gloo Mesh cluster name or
                        `*` denoting all clusters. If an entry is found for a given cluster, it will be used. Otherwise, the
                        wildcard entry will be used if it exists. Lastly, we will fall back to a set of default values.
                      type: object
                  type: object
              type: object
            mtls:
              description: Configure default mTLS settings for Destinations.
              properties:
                istio:
                  description: Istio TLS settings.
                  properties:
                    tlsMode:
                      description: TLS connection mode
                      enum:
                      - DISABLE
                      - SIMPLE
                      - ISTIO_MUTUAL
                      type: string
                  type: object
              type: object
            networkingExtensionServers:
              description: |-
                Configure Gloo Mesh networking to communicate with one or more external gRPC NetworkingExtensions servers.
                Updates will be applied by the servers in the order they are listed (servers towards the end of the list take precedence).
                Note: Extension Servers have full write access to the output objects written by Gloo Mesh.
              items:
                properties:
                  address:
                    description: TCP address of the gRPC Server (including port).
                    type: string
                  insecure:
                    description: If true communicate over HTTP rather than HTTPS.
                    type: boolean
                  reconnectOnNetworkFailures:
                    description: If true Gloo Mesh will automatically attempt to reconnect
                      to the server after encountering network failures.
                    type: boolean
                type: object
              type: array
            relay:
              description: Enable and configure use of Relay mode to communicate with
                remote clusters. This is an enterprise-only feature.
              properties:
                enabled:
                  description: |-
                    Enable the use of Relay for cluster management.
                    If relay is enabled, make sure to follow the [relay cluster registration guide]({{< versioned_link_path fromRoot="/guides/setup/register_cluster#relay" >}})
                    for registering your clusters.
                  type: boolean
                server:
                  description: |-
                    Connection info for the Relay Server. Gloo Mesh will fetch discovery resources from this server
                    and push translated outputs to this server.
                    Note: currently this field has no effect as the relay server runs in-process of the networking Pod.
                  properties:
                    address:
                      description: TCP address of the gRPC Server (including port).
                      type: string
                    insecure:
                      description: If true communicate over HTTP rather than HTTPS.
                      type: boolean
                    reconnectOnNetworkFailures:
                      description: If true Gloo Mesh will automatically attempt to
                        reconnect to the server after encountering network failures.
                      type: boolean
                  type: object
              type: object
          type: object
        status:
          properties:
            errors:
              description: Any errors encountered while processing Settings object.
              items:
                type: string
              type: array
            observedGeneration:
              description: |-
                The most recent generation observed in the the Settings metadata.
                If the `observedGeneration` does not match `metadata.generation`, Gloo Mesh has not processed the most
                recent version of this resource.
              format: int64
              type: integer
            state:
              description: |-
                The state of the overall resource.
                It will only show accepted if no processing errors encountered.
              enum:
              - PENDING
              - ACCEPTED
              - INVALID
              - FAILED
              type: string
          type: object
      type: object
  versions:
  - name: v1
    served: true
    storage: true
