# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: gloo-mesh
    app.kubernetes.io/name: gloo-mesh
  name: wasmdeployments.networking.enterprise.mesh.gloo.solo.io
spec:
  group: networking.enterprise.mesh.gloo.solo.io
  names:
    kind: WasmDeployment
    listKind: WasmDeploymentList
    plural: wasmdeployments
    singular: wasmdeployment
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: A WasmDeployment deploys one or more WASM Envoy Filters to selected Sidecars and Gateways in a Mesh.
          properties:
            filters:
              description: Parameters for specifying the WASM filter
              items:
                allOf:
                - oneOf:
                  - not:
                      anyOf:
                      - required:
                        - localPathSource
                      - required:
                        - httpUriSource
                      - required:
                        - wasmImageSource
                  - required:
                    - localPathSource
                  - required:
                    - httpUriSource
                  - required:
                    - wasmImageSource
                - oneOf:
                  - not:
                      anyOf:
                      - required:
                        - staticFilterConfig
                      - required:
                        - dynamicFilterConfig
                  - required:
                    - staticFilterConfig
                  - required:
                    - dynamicFilterConfig
                properties:
                  dynamicFilterConfig:
                    description: |-
                      Provide configuration from a dynamic configuration source.
                      This is used to connect proxies to a user-provided configuration server
                      rather than using the WasmDeployment CR to update filter configuration.
                      NOTE: Not currently implemented. This field serves as a placeholder.
                      passing it to the plugin. `google.protobuf.BytesValue` and
                      `google.protobuf.StringValue` are passed directly without the wrapper.
                      TODO(ilackarms): implement with dynamic filter config source (FCDS) https://github.com/envoyproxy/envoy/issues/7867
                    type: string
                  filterContext:
                    description: |-
                      The specific config generation context to which to attach the filter. Istio
                      generates envoy configuration in the context of a gateway,
                      inbound traffic to sidecar and outbound traffic from sidecar.
                      Uses the Istio default (ANY).
                    enum:
                    - ANY
                    - SIDECAR_INBOUND
                    - SIDECAR_OUTBOUND
                    - GATEWAY
                    type: string
                  httpUriSource:
                    description: |-
                      Select `http_uri_source` to deploy the filter from an HTTP/S URI accessible
                      to the workload proxy. Note that Gloo Mesh cannot verify
                      whether the target workload proxy containers have HTTP accesss the given URI.
                      If filters do not load, please inspect the sidecar proxy logs.
                      TODO(ilackarms): see if we can somehow verify the filter exists in the proxy container and surface that on the WasmDeployment status
                      TODO(ilackarms): we may need to provide options for customizing the Cluster given to envoy along with the HTTP Fetch URI. currently Gloo Mesh will create a simple plaintext HTTP cluster from the Host/Port specified in the URI.
                    properties:
                      sha:
                        description: |-
                          The Sha256 Checksum of the filter binary (will be verified by the proxy).
                          Required.
                        type: string
                      uri:
                        description: The HTTP URI from which to fetch the filter
                        type: string
                    type: object
                  insertBeforeFilter:
                    description: |-
                      The filter in the Envoy HTTP Filter Chain immediately before which the WASM filter will be
                      inserted.
                      Defaults to `envoy.router`.
                    type: string
                  localPathSource:
                    description: |-
                      Select `local_path_source` to deploy the filter from a file accessible
                      to the workload proxy. Note that Gloo Mesh cannot verify
                      whether the target workload proxy containers contain the given path.
                      If filters do not load, please inspect the sidecar proxy logs.
                      TODO(ilackarms): see if we can somehow verify the filter exists in the proxy container and surface that on the WasmDeployment status
                    type: string
                  rootId:
                    description: |-
                      the root id must match the root id
                      defined inside the filter.
                      if the user does not provide this field,
                      Gloo Mesh will attempt to pull the image
                      and set it from the filter_conf contained in the image config.
                      note that if the filter_source is not set to wasm_image_source,
                      this field is required
                    type: string
                  staticFilterConfig:
                    description: |-
                      Provide configuration as a static
                      `google.protobuf.Struct` is serialized as JSON before
                      passing it to the plugin. `google.protobuf.BytesValue` and
                      `google.protobuf.StringValue` are passed directly without the wrapper.
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  vmId:
                    description: |-
                      An ID which will be used along with a hash of the wasm code
                      (or the name of the registered Null VM plugin) to determine which VM will be used to load the WASM filter.
                      All filters on the same proxy which use the same vm_id and code within will use the same VM.
                      May be left blank. Sharing a VM between plugins can reduce memory utilization and make sharing of data easier which may have security implications.
                    type: string
                  wasmImageSource:
                    description: |-
                      fetch the image from a [WASM OCI Registry](https://webassemblyhub.io/)
                      Images can be built and pushed to registries using `meshctl` and `wasme`.
                    properties:
                      wasmImageTag:
                        description: the full tag of the wasm image. should include the registry address at the beginning, e.g. webassemblyhub.io/ilackarms/helloworld:v0.1
                        type: string
                    type: object
                type: object
              type: array
            weight:
              description: |-
                weight is used to determine the order of WASM Filters when applying
                multiple WasmDeployments to a single workload.
                Deployed WASM filters will be sorted in order of
                highest to lowest weight. WasmDeployments with equal weights will be
                sorted non-deterministically.
                Note that all WASM Filters are currently inserted just before the Envoy router filter
                in the HTTP Connection Manager's HTTP Filter Chain.
              maximum: 4294967295
              minimum: 0
              type: integer
            workloadSelector:
              description: |-
                Sidecars/Gateways whose Workloads match these selectors will attach the specified WASM Filters.
                       Leave empty to have all workloads in the mesh apply receive the WASM Filter.
              items:
                properties:
                  clusters:
                    description: |-
                      If specified, match k8s workloads if they exist in one of the specified clusters.
                             When used in a networking policy, omission matches any cluster.
                             When used in a Role, a wildcard `"*"` must be explicitly used to match any cluster.
                    items:
                      type: string
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      If specified, all labels must exist on k8s workload.
                             When used in a networking policy, omission matches any labels.
                             When used in a Role, a wildcard `"*"` must be explicitly used to match any label key and/or value.
                    type: object
                  namespaces:
                    description: |-
                      If specified, match k8s workloads if they exist in one of the specified namespaces.
                             When used in a networking policy, omission matches any namespace.
                             When used in a Role, a wildcard `"*"` must be explicitly used to match any namespace.
                    items:
                      type: string
                    type: array
                type: object
              type: array
          type: object
        status:
          properties:
            error:
              description: |-
                Any errors encountered while processing this generation of the resource.
                This can include failures to pull a WASM image as well as missing or invalid
                fields in the spec.
              type: string
            observedGeneration:
              description: |-
                The most recent generation observed in the the WasmDeployment metadata.
                if the observedGeneration does not match generation, the controller has not received the most
                recent version of this resource.
              format: int64
              type: integer
            workloadStates:
              additionalProperties:
                enum:
                - DEPLOYMENT_PENDING
                - FILTERS_DEPLOYED
                - DEPLOYMENT_FAILED
                type: string
              description: the state of the WasmDeployment as it has been applied to each individual workload.
              type: object
          type: object
      type: object
  versions:
  - name: v1alpha1
    served: true
    storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: gloo-mesh
    app.kubernetes.io/name: gloo-mesh
  name: virtualdestinations.networking.enterprise.mesh.gloo.solo.io
spec:
  group: networking.enterprise.mesh.gloo.solo.io
  names:
    kind: VirtualDestination
    listKind: VirtualDestinationList
    plural: virtualdestinations
    singular: virtualdestination
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          allOf:
          - oneOf:
            - not:
                anyOf:
                - required:
                  - virtualMesh
                - required:
                  - meshList
            - required:
              - virtualMesh
            - required:
              - meshList
          - oneOf:
            - not:
                anyOf:
                - required:
                  - static
                - required:
                  - localized
            - required:
              - static
            - required:
              - localized
          description: |-
            A VirtualDestination creates a new hostname to which client workloads can send requests.
               Requests will be routed based on either a list of backing traffic targets ordered by
               explicit priority, or a list of locality directives. Each TrafficTarget backing the
               VirtualDestination must be configured with outlier detection through a TrafficPolicy.

               Currently this feature only supports TrafficTargets backed by Istio.
          properties:
            hostname:
              description: The DNS name of the VirtualDestination. Must be unique within the service mesh instance.
              type: string
            localized:
              description: Failover priority is determined by the localities of the traffic source and destination.
              properties:
                failoverDirectives:
                  description: Directives describing the locality failover behavior.
                  items:
                    properties:
                      from:
                        description: The locality of a client workload.
                        properties:
                          region:
                            description: The locality's region.
                            type: string
                          subZone:
                            description: The locality's sub-zone. Currently this value is not used.
                            type: string
                          zone:
                            description: The locality's zone. Currently this value is not used.
                            type: string
                        type: object
                      to:
                        description: |-
                          The list of traffic target localities that can be routed to if the instance local to the client workload
                          is not available.
                        items:
                          properties:
                            region:
                              description: The locality's region.
                              type: string
                            subZone:
                              description: The locality's sub-zone. Currently this value is not used.
                              type: string
                            zone:
                              description: The locality's zone. Currently this value is not used.
                              type: string
                          type: object
                        type: array
                    type: object
                  type: array
                outlierDetection:
                  description: Outlier detection to determine the health of the selected services.
                  properties:
                    baseEjectionTime:
                      description: 'Minimum ejection duration. Format: 1h/1m/1s/1ms. MUST BE >=1ms. Defaults to 30s.'
                      type: string
                    consecutiveErrors:
                      description: Number of errors before a host is ejected from the connection pool. Defaults to 5.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                    interval:
                      description: 'Time interval between ejection sweep analysis. Format: 1h/1m/1s/1ms. MUST BE >=1ms. Defaults to 10s.'
                      type: string
                    maxEjectionPercent:
                      description: |-
                        Maximum % of hosts in the load balancing pool for the upstream service that can be ejected,
                        but will eject at least one host regardless of the value. MUST BE >= 0 and <= 100.
                        Defaults to 100%, allowing all hosts to be ejected from the pool.
                      maximum: 4294967295
                      minimum: 0
                      type: integer
                  type: object
                serviceSelectors:
                  description: |-
                    Selectors for the services backing the VirtualDestination.
                    All services must be either in the same mesh or in meshes that are grouped under a common VirtualMesh.
                    Currently only one service per cluster can be selected, more than one per cluster will be considered invalid.
                  items:
                    properties:
                      kubeServiceMatcher:
                        description: A KubeServiceMatcher matches kubernetes services by their labels, namespaces, and/or clusters.
                        properties:
                          clusters:
                            description: |-
                              If specified, match k8s Services if they exist in one of the specified clusters.
                                         When used in a networking policy, omission matches any cluster.
                                         When used in a Role, a wildcard `"*"` must be explicitly used to match any cluster.
                            items:
                              type: string
                            type: array
                          labels:
                            additionalProperties:
                              type: string
                            description: |-
                              If specified, all labels must exist on k8s Service.
                                         When used in a networking policy, omission matches any labels.
                                         When used in a Role, a wildcard `"*"` must be explicitly used to match any label key and/or value.
                            type: object
                          namespaces:
                            description: |-
                              If specified, match k8s Services if they exist in one of the specified namespaces.
                                         When used in a networking policy, omission matches any namespace.
                                         When used in a Role, a wildcard `"*"` must be explicitly used to match any namespace.
                            items:
                              type: string
                            type: array
                        type: object
                      kubeServiceRefs:
                        description: Match individual k8s Services by direct reference.
                        properties:
                          services:
                            description: |-
                              Match k8s Services by direct reference.
                                         When used in a networking policy, omission of any field (name, namespace, or clusterName) allows matching any value for that field.
                                         When used in a Role, a wildcard `"*"` must be explicitly used to match any value for the given field.
                            items:
                              properties:
                                clusterName:
                                  description: name of the cluster in which the resource exists
                                  type: string
                                name:
                                  description: name of the resource being referenced
                                  type: string
                                namespace:
                                  description: namespace of the resource being referenced
                                  type: string
                              type: object
                            type: array
                        type: object
                    type: object
                  type: array
              type: object
            meshList:
              description: |-
                The meshes that this VirtualDestination will be visible to. If multiple meshes are specified, they must
                all belong to the same VirtualMesh.
              properties:
                meshes:
                  items:
                    properties:
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                  type: array
              type: object
            port:
              description: The port on which the VirtualDestination listens.
              properties:
                number:
                  description: Port number.
                  maximum: 4294967295
                  minimum: 0
                  type: integer
                protocol:
                  description: Protocol of the requests sent to the VirtualDestination. Must be one of HTTP, HTTPS, GRPC, HTTP2, MONGO, TCP, TLS.
                  type: string
              type: object
            static:
              description: Failover priority is determined by an explicitly provided static ordering of TrafficTargets.
              properties:
                services:
                  description: |-
                    The list of services backing the VirtualDestination, ordered by decreasing priority.
                    All services must be either in the same mesh or in meshes that are grouped under a common VirtualMesh.
                  items:
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - kubeService
                    - required:
                      - kubeService
                    properties:
                      kubeService:
                        description: Name/namespace/cluster of a kubernetes service.
                        properties:
                          clusterName:
                            description: name of the cluster in which the resource exists
                            type: string
                          name:
                            description: name of the resource being referenced
                            type: string
                          namespace:
                            description: namespace of the resource being referenced
                            type: string
                        type: object
                    type: object
                  type: array
              type: object
            virtualMesh:
              description: The VirtualMesh that this VirtualDestination will be visible to.
              properties:
                name:
                  description: name of the resource being referenced
                  type: string
                namespace:
                  description: namespace of the resource being referenced
                  type: string
              type: object
          type: object
        status:
          properties:
            errors:
              description: Any errors found while processing this generation of the resource.
              items:
                type: string
              type: array
            meshes:
              additionalProperties:
                properties:
                  acceptanceOrder:
                    description: |-
                      AcceptanceOrder represents the order in which the Policy
                      was accepted and applied to a discovery resource. The first accepted policy
                      will have an acceptance_order of 0, the second 1, etc.
                      When conflicts are detected in the system,
                      the Policy with the lowest acceptance_order
                      will be chosen (and all other conflicting policies will be rejected).
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  errors:
                    description: Any errors observed which prevented the resource from being Accepted.
                    items:
                      type: string
                    type: array
                  state:
                    description: |-
                      The result of attempting to apply the policy to the discovery resource,
                      reported by the Policy controller (mesh-networking).
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - FAILED
                    type: string
                type: object
              description: The status of the VirtualDestination for each Mesh to which it has been applied.
              type: object
            observedGeneration:
              description: |-
                The most recent generation observed in the the VirtualDestination metadata.
                If the observedGeneration does not match generation, the controller has not received the most
                recent version of this resource.
              format: int64
              type: integer
            selectedTrafficTargets:
              description: The traffic targets that comprise this Global Service.
              items:
                properties:
                  ref:
                    description: Reference to the traffic target.
                    properties:
                      clusterName:
                        description: name of the cluster in which the resource exists
                        type: string
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                  service:
                    description: The service that the traffic target represents.
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - kubeService
                    - required:
                      - kubeService
                    properties:
                      kubeService:
                        description: Name/namespace/cluster of a kubernetes service.
                        properties:
                          clusterName:
                            description: name of the cluster in which the resource exists
                            type: string
                          name:
                            description: name of the resource being referenced
                            type: string
                          namespace:
                            description: namespace of the resource being referenced
                            type: string
                        type: object
                    type: object
                type: object
              type: array
            state:
              description: |-
                The state of the overall resource, will only show accepted if it has been successfully
                applied to all target meshes.
              enum:
              - PENDING
              - ACCEPTED
              - INVALID
              - FAILED
              type: string
          type: object
      type: object
  versions:
  - name: v1alpha1
    served: true
    storage: true
