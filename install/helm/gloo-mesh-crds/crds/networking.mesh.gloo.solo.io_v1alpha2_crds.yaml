# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: gloo-mesh
    app.kubernetes.io/name: gloo-mesh
  name: trafficpolicies.networking.mesh.gloo.solo.io
spec:
  group: networking.mesh.gloo.solo.io
  names:
    kind: TrafficPolicy
    listKind: TrafficPolicyList
    plural: trafficpolicies
    singular: trafficpolicy
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: |-
            A Traffic Policy applies some L7 routing features to an existing mesh.
               Traffic Policies specify the following for all requests:
               - originating from from **source workload**
               - sent to **destination targets**
               - matching one or more **request matcher**
          properties:
            corsPolicy:
              description: |-
                Set a Cross-Origin Resource Sharing policy (CORS) for requests. Refer to
                       https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS
                       for further details about cross origin resource sharing.
              properties:
                allowCredentials:
                  description: |-
                    Indicates whether the caller is allowed to send the actual request
                               (not the preflight) using credentials. Translates to
                               `Access-Control-Allow-Credentials` header.
                  nullable: true
                  type: boolean
                allowHeaders:
                  description: |-
                    List of HTTP headers that can be used when requesting the
                               resource. Serialized to Access-Control-Allow-Headers header.
                  items:
                    type: string
                  type: array
                allowMethods:
                  description: |-
                    List of HTTP methods allowed to access the resource. The content will
                               be serialized into the Access-Control-Allow-Methods header.
                  items:
                    type: string
                  type: array
                allowOrigins:
                  description: |-
                    String patterns that match allowed origins.
                               An origin is allowed if any of the string matchers match.
                               If a match is found, then the outgoing Access-Control-Allow-Origin would be set to the origin as provided by the client.
                  items:
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - exact
                        - required:
                          - prefix
                        - required:
                          - regex
                    - required:
                      - exact
                    - required:
                      - prefix
                    - required:
                      - regex
                    properties:
                      exact:
                        description: Exact string match.
                        type: string
                      prefix:
                        description: Prefix-based match.
                        type: string
                      regex:
                        description: ECMAscript style regex-based match.
                        type: string
                    type: object
                  type: array
                exposeHeaders:
                  description: |-
                    A white list of HTTP headers that the browsers are allowed to
                               access. Serialized into Access-Control-Expose-Headers header.
                  items:
                    type: string
                  type: array
                maxAge:
                  description: |-
                    Specifies how long the results of a preflight request can be
                               cached. Translates to the `Access-Control-Max-Age` header.
                  type: string
              type: object
            destinationSelector:
              description: |-
                Requests destined for these k8s services will have the rule applied.
                       Leave empty to apply to all destination k8s services in the mesh.
              items:
                properties:
                  kubeServiceMatcher:
                    description: A KubeServiceMatcher matches kubernetes services by their labels, namespaces, and/or clusters.
                    properties:
                      clusters:
                        description: |-
                          If specified, match k8s Services if they exist in one of the specified clusters.
                                     When used in a networking policy, omission matches any cluster.
                                     When used in a Role, a wildcard `"*"` must be explicitly used to match any cluster.
                        items:
                          type: string
                        type: array
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          If specified, all labels must exist on k8s Service.
                                     When used in a networking policy, omission matches any labels.
                                     When used in a Role, a wildcard `"*"` must be explicitly used to match any label key and/or value.
                        type: object
                      namespaces:
                        description: |-
                          If specified, match k8s Services if they exist in one of the specified namespaces.
                                     When used in a networking policy, omission matches any namespace.
                                     When used in a Role, a wildcard `"*"` must be explicitly used to match any namespace.
                        items:
                          type: string
                        type: array
                    type: object
                  kubeServiceRefs:
                    description: Match individual k8s Services by direct reference.
                    properties:
                      services:
                        description: |-
                          Match k8s Services by direct reference.
                                     When used in a networking policy, omission of any field (name, namespace, or clusterName) allows matching any value for that field.
                                     When used in a Role, a wildcard `"*"` must be explicitly used to match any value for the given field.
                        items:
                          properties:
                            clusterName:
                              description: name of the cluster in which the resource exists
                              type: string
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              type: array
            faultInjection:
              description: Enable fault injection on requests.
              oneOf:
              - not:
                  anyOf:
                  - required:
                    - fixedDelay
                  - required:
                    - exponentialDelay
                  - required:
                    - abort
              - required:
                - fixedDelay
              - required:
                - exponentialDelay
              - required:
                - abort
              properties:
                abort:
                  description: |-
                    Abort Http request attempts and return error codes back to downstream
                                   service, giving the impression that the upstream service is faulty.
                  properties:
                    httpStatus:
                      description: REQUIRED. HTTP status code to use to abort the Http request.
                      format: int32
                      type: integer
                  type: object
                exponentialDelay:
                  description: $hide_from_docs
                  type: string
                fixedDelay:
                  description: |-
                    Add a fixed delay before forwarding the request. Format:
                                       1h/1m/1s/1ms. MUST be >=1ms.
                  type: string
                percentage:
                  description: Percentage of requests to be faulted with the error code provided. Values range between 0 and 100
                  format: double
                  type: number
              type: object
            headerManipulation:
              description: Manipulate request and response headers.
              properties:
                appendRequestHeaders:
                  additionalProperties:
                    type: string
                  description: Additional HTTP headers to add before forwarding a request to the destination service.
                  type: object
                appendResponseHeaders:
                  additionalProperties:
                    type: string
                  description: Additional HTTP headers to add before returning a response to the caller.
                  type: object
                removeRequestHeaders:
                  description: HTTP headers to remove before forwarding a request to the destination service.
                  items:
                    type: string
                  type: array
                removeResponseHeaders:
                  description: HTTP headers to remove before returning a response to the caller.
                  items:
                    type: string
                  type: array
              type: object
            httpRequestMatchers:
              description: |-
                If specified, this rule will only apply to http requests matching these conditions.
                       Within a single matcher, all conditions must be satisfied for a match to occur.
                       Between matchers, at least one matcher must be satisfied for the TrafficPolicy to apply.
                       NB: Linkerd only supports matching on Request Path and Method.
              items:
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - prefix
                    - required:
                      - exact
                    - required:
                      - regex
                - required:
                  - prefix
                - required:
                  - exact
                - required:
                  - regex
                properties:
                  exact:
                    description: |-
                      If specified, the route is an exact path rule meaning that the path must
                                     exactly match the *:path* header once the query string is removed.
                    type: string
                  headers:
                    description: Specifies a set of headers which requests must match in entirety (all headers must match).
                    items:
                      properties:
                        invertMatch:
                          description: |-
                            If set to true, the result of the match will be inverted. Defaults to false.

                                   Examples:
                                   * name=foo, invert_match=true: matches if no header named `foo` is present
                                   * name=foo, value=bar, invert_match=true: matches if no header named `foo` with value `bar` is present
                                   * name=foo, value=``\d{3}``, regex=true, invert_match=true: matches if no header named `foo` with a value consisting of three integers is present
                          type: boolean
                        name:
                          description: Specifies the name of the header in the request.
                          type: string
                        regex:
                          description: Specifies whether the header value should be treated as regex or not.
                          type: boolean
                        value:
                          description: |-
                            Specifies the value of the header. If the value is absent a request that
                                   has the name header will match, regardless of the header’s value.
                          type: string
                      type: object
                    type: array
                  method:
                    description: HTTP Method/Verb to match on. If none specified, the matcher will ignore the HTTP Method
                    properties:
                      method:
                        enum:
                        - GET
                        - POST
                        - PUT
                        - DELETE
                        - HEAD
                        - CONNECT
                        - OPTIONS
                        - TRACE
                        - PATCH
                        type: string
                    type: object
                  prefix:
                    description: |-
                      If specified, the route is a prefix rule meaning that the prefix must
                                     match the beginning of the *:path* header.
                    type: string
                  queryParameters:
                    description: |-
                      Specifies a set of URL query parameters which requests must match in entirety (all query params must match).
                                 The router will check the query string from the *path* header against all the specified query parameters
                    items:
                      properties:
                        name:
                          description: |-
                            Specifies the name of a key that must be present in the requested
                                       *path*'s query string.
                          type: string
                        regex:
                          description: |-
                            Specifies whether the query parameter value is a regular expression.
                                       Defaults to false. The entire query parameter value (i.e., the part to
                                       the right of the equals sign in "key=value") must match the regex.
                                       E.g., the regex "\d+$" will match "123" but not "a123" or "123a".
                          type: boolean
                        value:
                          description: |-
                            Specifies the value of the key. If the value is absent, a request
                                       that contains the key in its query string will match, whether the
                                       key appears with a value (e.g., "?debug=true") or not (e.g., "?debug")
                          type: string
                      type: object
                    type: array
                  regex:
                    description: |-
                      If specified, the route is a regular expression rule meaning that the
                                     regex must match the *:path* header once the query string is removed. The entire path
                                     (without the query string) must match the regex. The rule will not match if only a
                                     sub-sequence of the *:path* header matches the regex. The regex grammar is defined `here
                                     <http://en.cppreference.com/w/cpp/regex/ecmascript>`_.
                    type: string
                type: object
              type: array
            mirror:
              description: Mirror HTTP traffic to a another destination. Traffic will still be sent to its original destination as normal.
              oneOf:
              - not:
                  anyOf:
                  - required:
                    - kubeService
              - required:
                - kubeService
              properties:
                kubeService:
                  description: Name/namespace/cluster of a kubernetes service.
                  properties:
                    clusterName:
                      description: name of the cluster in which the resource exists
                      type: string
                    name:
                      description: name of the resource being referenced
                      type: string
                    namespace:
                      description: namespace of the resource being referenced
                      type: string
                  type: object
                percentage:
                  description: |-
                    Percentage of traffic to mirror. If absent, 100% will be mirrored.
                               Values range between 0 and 100
                  format: double
                  type: number
                port:
                  description: |-
                    Port on the destination k8s service to receive traffic. If multiple are found, and none are specified,
                    then the configuration will be considered invalid.
                  maximum: 4294967295
                  minimum: 0
                  type: integer
              type: object
            mtls:
              description: Configure mTLS settings. If specified will override global default defined in Settings.
              properties:
                istio:
                  description: Istio TLS settings
                  properties:
                    tlsMode:
                      description: TLS connection mode
                      enum:
                      - DISABLE
                      - SIMPLE
                      - ISTIO_MUTUAL
                      type: string
                  type: object
              type: object
            outlierDetection:
              description: |-
                Configure outlier detection on the targeted services.
                       Setting this field requires an empty source_selector because it must apply to all traffic.
              properties:
                baseEjectionTime:
                  description: 'Minimum ejection duration. Format: 1h/1m/1s/1ms. MUST BE >=1ms. Defaults to 30s.'
                  type: string
                consecutiveErrors:
                  description: Number of errors before a host is ejected from the connection pool. Defaults to 5.
                  maximum: 4294967295
                  minimum: 0
                  type: integer
                interval:
                  description: 'Time interval between ejection sweep analysis. Format: 1h/1m/1s/1ms. MUST BE >=1ms. Defaults to 10s.'
                  type: string
                maxEjectionPercent:
                  description: |-
                    Maximum % of hosts in the load balancing pool for the upstream service that can be ejected,
                    but will eject at least one host regardless of the value. MUST BE >= 0 and <= 100.
                    Defaults to 100%, allowing all hosts to be ejected from the pool.
                  maximum: 4294967295
                  minimum: 0
                  type: integer
              type: object
            requestTimeout:
              description: Set a timeout on requests.
              type: string
            retries:
              description: Set a retry policy on requests.
              properties:
                attempts:
                  description: Number of retries for a given request
                  format: int32
                  type: integer
                perTryTimeout:
                  description: 'Timeout per retry attempt for a given request. format: 1h/1m/1s/1ms. MUST BE >=1ms.'
                  type: string
              type: object
            sourceSelector:
              description: |-
                Requests originating from these workloads will have the rule applied.
                       Leave empty to have all workloads in the mesh apply these rules.

                       Note: Source Selectors are ignored when TrafficPolicies are
                       applied to pods in a Linkerd mesh. TrafficPolicies will apply to
                       all selected destinations in Linkerd, regardless of the source.

                       Note: If using the TrafficTargetSelector.Matcher, specifying clusters is currently not supported in Istio.
              items:
                properties:
                  clusters:
                    description: |-
                      If specified, match k8s workloads if they exist in one of the specified clusters.
                             When used in a networking policy, omission matches any cluster.
                             When used in a Role, a wildcard `"*"` must be explicitly used to match any cluster.
                    items:
                      type: string
                    type: array
                  labels:
                    additionalProperties:
                      type: string
                    description: |-
                      If specified, all labels must exist on k8s workload.
                             When used in a networking policy, omission matches any labels.
                             When used in a Role, a wildcard `"*"` must be explicitly used to match any label key and/or value.
                    type: object
                  namespaces:
                    description: |-
                      If specified, match k8s workloads if they exist in one of the specified namespaces.
                             When used in a networking policy, omission matches any namespace.
                             When used in a Role, a wildcard `"*"` must be explicitly used to match any namespace.
                    items:
                      type: string
                    type: array
                type: object
              type: array
            trafficShift:
              description: |-
                Enables traffic shifting, i.e. to reroute requests to a different service,
                       to a subset of pods based on their label, and/or split traffic between multiple services.
              properties:
                destinations:
                  description: A traffic shift destination.
                  items:
                    oneOf:
                    - not:
                        anyOf:
                        - required:
                          - kubeService
                        - required:
                          - failoverService
                        - required:
                          - virtualDestination
                    - required:
                      - kubeService
                    - required:
                      - failoverService
                    - required:
                      - virtualDestination
                    properties:
                      failoverService:
                        description: A traffic shift destination targeting a FailoverService.
                        properties:
                          name:
                            description: The name of the FailoverService.
                            type: string
                          namespace:
                            description: The namespace of the FailoverService.
                            type: string
                          subset:
                            additionalProperties:
                              type: string
                            description: Subset routing is currently only supported for Istio backing services.
                            type: object
                        type: object
                      kubeService:
                        description: The use kubeService to shift traffic a Kubernetes Service/subset.
                        properties:
                          clusterName:
                            description: The cluster of the destination k8s service (as it is registered with Gloo Mesh).
                            type: string
                          name:
                            description: The name of the destination service.
                            type: string
                          namespace:
                            description: The namespace of the destination service.
                            type: string
                          port:
                            description: Port on the destination k8s service to receive traffic. Required if the service exposes more than one port.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          subset:
                            additionalProperties:
                              type: string
                            description: Subset routing is currently only supported on Istio.
                            type: object
                        type: object
                      virtualDestination:
                        description: A traffic shift destination targeting a VirtualDestination.
                        properties:
                          name:
                            description: The name of the VirtualDestination.
                            type: string
                          namespace:
                            description: The namespace of the VirtualDestination.
                            type: string
                          subset:
                            additionalProperties:
                              type: string
                            description: Subset routing is currently only supported for Istio backing services.
                            type: object
                        type: object
                      weight:
                        description: Weights across all of the destinations must sum to 100. Each is interpreted as a percent from 0-100.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                    type: object
                  type: array
              type: object
          type: object
        status:
          properties:
            errors:
              description: Any errors found while processing this generation of the resource.
              items:
                type: string
              type: array
            observedGeneration:
              description: |-
                The most recent generation observed in the the TrafficPolicy metadata.
                if the observedGeneration does not match generation, the controller has not received the most
                recent version of this resource.
              format: int64
              type: integer
            state:
              description: |-
                The state of the overall resource.
                It will only show accepted if it has been successfully
                applied to all target meshes.
              enum:
              - PENDING
              - ACCEPTED
              - INVALID
              - FAILED
              type: string
            trafficTargets:
              additionalProperties:
                properties:
                  acceptanceOrder:
                    description: |-
                      AcceptanceOrder represents the order in which the Policy
                      was accepted and applied to a discovery resource. The first accepted policy
                      will have an acceptance_order of 0, the second 1, etc.
                      When conflicts are detected in the system,
                      the Policy with the lowest acceptance_order
                      will be chosen (and all other conflicting policies will be rejected).
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  errors:
                    description: Any errors observed which prevented the resource from being Accepted.
                    items:
                      type: string
                    type: array
                  state:
                    description: |-
                      The result of attempting to apply the policy to the discovery resource,
                      reported by the Policy controller (mesh-networking).
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - FAILED
                    type: string
                type: object
              description: |-
                The status of the TrafficPolicy for each TrafficTarget to which it has been applied.
                A TrafficPolicy may be Accepted for some TrafficTargets and rejected for others.
              type: object
            workloads:
              description: The list of Workloads to which this policy has been applied.
              items:
                type: string
              type: array
          type: object
      type: object
  versions:
  - name: v1alpha2
    served: true
    storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: gloo-mesh
    app.kubernetes.io/name: gloo-mesh
  name: accesspolicies.networking.mesh.gloo.solo.io
spec:
  group: networking.mesh.gloo.solo.io
  names:
    kind: AccessPolicy
    listKind: AccessPolicyList
    plural: accesspolicies
    singular: accesspolicy
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: |-
            Access control policies apply ALLOW policies to communication in a mesh.
               Access control policies specify the following:
               ALLOW those requests that: originate from from **source workload**, target the **destination target**,
               and match the indicated request criteria (allowed_paths, allowed_methods, allowed_ports).
               Enforcement of access control is determined by the
               [VirtualMesh's GlobalAccessPolicy]({{% versioned_link_path fromRoot="/reference/api/virtual_mesh/#networking.mesh.gloo.solo.io.VirtualMeshSpec.GlobalAccessPolicy" %}})
          properties:
            allowedMethods:
              description: |-
                Optional. A list of HTTP methods to allow (e.g., "GET", "POST").
                       It is ignored in gRPC case because the value is always "POST".
                       If not specified, allows any method.
              items:
                enum:
                - GET
                - POST
                - PUT
                - DELETE
                - HEAD
                - CONNECT
                - OPTIONS
                - TRACE
                - PATCH
                type: string
              type: array
            allowedPaths:
              description: |-
                Optional. A list of HTTP paths or gRPC methods to allow.
                       gRPC methods must be presented as fully-qualified name in the form of
                       "/packageName.serviceName/methodName" and are case sensitive.
                       Exact match, prefix match, and suffix match are supported for paths.
                       For example, the path "/books/review" matches
                       "/books/review" (exact match), "*books/" (suffix match), or "/books*" (prefix match).

                       If not specified, allow any path.
              items:
                type: string
              type: array
            allowedPorts:
              description: |-
                Optional. A list of ports which to allow.
                       If not set any port is allowed.
              items:
                maximum: 4294967295
                minimum: 0
                type: integer
              type: array
            destinationSelector:
              description: |-
                Requests destined for these pods will have the rule applied.
                       Leave empty to apply to all destination pods in the mesh.
              items:
                properties:
                  kubeServiceMatcher:
                    description: A KubeServiceMatcher matches kubernetes services by their labels, namespaces, and/or clusters.
                    properties:
                      clusters:
                        description: |-
                          If specified, match k8s Services if they exist in one of the specified clusters.
                                     When used in a networking policy, omission matches any cluster.
                                     When used in a Role, a wildcard `"*"` must be explicitly used to match any cluster.
                        items:
                          type: string
                        type: array
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          If specified, all labels must exist on k8s Service.
                                     When used in a networking policy, omission matches any labels.
                                     When used in a Role, a wildcard `"*"` must be explicitly used to match any label key and/or value.
                        type: object
                      namespaces:
                        description: |-
                          If specified, match k8s Services if they exist in one of the specified namespaces.
                                     When used in a networking policy, omission matches any namespace.
                                     When used in a Role, a wildcard `"*"` must be explicitly used to match any namespace.
                        items:
                          type: string
                        type: array
                    type: object
                  kubeServiceRefs:
                    description: Match individual k8s Services by direct reference.
                    properties:
                      services:
                        description: |-
                          Match k8s Services by direct reference.
                                     When used in a networking policy, omission of any field (name, namespace, or clusterName) allows matching any value for that field.
                                     When used in a Role, a wildcard `"*"` must be explicitly used to match any value for the given field.
                        items:
                          properties:
                            clusterName:
                              description: name of the cluster in which the resource exists
                              type: string
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              type: array
            sourceSelector:
              description: |-
                Requests originating from these pods will have the rule applied.
                       Leave empty to have all pods in the mesh apply these policies.

                       Note that access control policies are mapped to source pods by their
                       service account. If other pods share the same service account,
                       this access control rule will apply to those pods as well.

                       For fine-grained access control policies, ensure that your
                       service accounts properly reflect the desired
                       boundary for your access control policies.
              items:
                properties:
                  kubeIdentityMatcher:
                    description: A KubeIdentityMatcher matches request identities based on the k8s namespace and cluster.
                    properties:
                      clusters:
                        description: |-
                          If specified, match k8s identity if it exists in one of the specified clusters.
                                     When used in a networking policy, omission matches any cluster.
                                     When used in a Role, a wildcard `"*"` must be explicitly used to match any cluster.
                        items:
                          type: string
                        type: array
                      namespaces:
                        description: |-
                          If specified, match k8s identity if it exists in one of the specified namespaces.
                                     When used in a networking policy, omission matches any namespace.
                                     When used in a Role, a wildcard `"*"` must be explicitly used to match any namespace.
                        items:
                          type: string
                        type: array
                    type: object
                  kubeServiceAccountRefs:
                    description: KubeServiceAccountRefs matches request identities based on the k8s service account of request.
                    properties:
                      serviceAccounts:
                        description: |-
                          Match k8s ServiceAccounts by direct reference.
                                     When used in a networking policy, omission of any field (name, namespace, or clusterName) allows matching any value for that field.
                                     When used in a Role, a wildcard `"*"` must be explicitly used to match any value for the given field.
                        items:
                          properties:
                            clusterName:
                              description: name of the cluster in which the resource exists
                              type: string
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              type: array
          type: object
        status:
          properties:
            errors:
              description: Any errors found while processing this generation of the resource.
              items:
                type: string
              type: array
            observedGeneration:
              description: |-
                The most recent generation observed in the the AccessPolicy metadata.
                If the observedGeneration does not match generation, the controller has not received the most
                recent version of this resource.
              format: int64
              type: integer
            state:
              description: |-
                The state of the overall resource.
                It will only show accepted if it has been successfully
                applied to all target meshes.
              enum:
              - PENDING
              - ACCEPTED
              - INVALID
              - FAILED
              type: string
            trafficTargets:
              additionalProperties:
                properties:
                  acceptanceOrder:
                    description: |-
                      AcceptanceOrder represents the order in which the Policy
                      was accepted and applied to a discovery resource. The first accepted policy
                      will have an acceptance_order of 0, the second 1, etc.
                      When conflicts are detected in the system,
                      the Policy with the lowest acceptance_order
                      will be chosen (and all other conflicting policies will be rejected).
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  errors:
                    description: Any errors observed which prevented the resource from being Accepted.
                    items:
                      type: string
                    type: array
                  state:
                    description: |-
                      The result of attempting to apply the policy to the discovery resource,
                      reported by the Policy controller (mesh-networking).
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - FAILED
                    type: string
                type: object
              description: |-
                The status of the AccessPolicy for each TrafficTarget to which it has been applied.
                An AccessPolicy may be Accepted for some TrafficTargets and rejected for others.
              type: object
            workloads:
              description: The list of Workloads to which this policy has been applied.
              items:
                type: string
              type: array
          type: object
      type: object
  versions:
  - name: v1alpha2
    served: true
    storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: gloo-mesh
    app.kubernetes.io/name: gloo-mesh
  name: virtualmeshes.networking.mesh.gloo.solo.io
spec:
  group: networking.mesh.gloo.solo.io
  names:
    kind: VirtualMesh
    listKind: VirtualMeshList
    plural: virtualmeshes
    singular: virtualmesh
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: |-
            A VirtualMesh represents a logical grouping of meshes for
               shared configuration and cross-mesh interoperability.

               VirtualMeshes are used to configure things like shared trust roots (for mTLS)
               and federation of traffic targets (for cross-cluster networking).

               Currently, VirtualMeshes can only be constructed from Istio meshes.
          properties:
            federation:
              description: Determine how to expose traffic targets to cross-mesh traffic using Service Federation.
              oneOf:
              - not:
                  anyOf:
                  - required:
                    - permissive
              - required:
                - permissive
              properties:
                flatNetwork:
                  description: |-
                    If true, all multicluster traffic will be routed directly to the service endpoints of the traffic targets,
                    rather than through an ingress gateway.
                    NOTE: This feature will not work if the clusters are not pre-configured to live on the same network.
                  type: boolean
                hostnameSuffix:
                  description: |-
                    Configure the suffix for hostnames of traffic targets federated within this virtual mesh.
                    Currently this is only supported for Istio with smart DNS proxying enabled.
                    If any meshes do not have smart DNS proxying enabled, setting this field results in an error.
                    If omitted, the hostname suffix defaults to "global".
                  type: string
                permissive:
                  description: |-
                    Select permissive mode to expose all traffic targets in a
                    VirtualMesh to cross-cluster traffic from all workloads
                    in that Virtual Mesh.
                  maxProperties: 0
                  type: object
              type: object
            globalAccessPolicy:
              description: Sets an Access Policy for the whole mesh.
              enum:
              - MESH_DEFAULT
              - ENABLED
              - DISABLED
              type: string
            meshes:
              description: The meshes contained in this virtual mesh.
              items:
                properties:
                  name:
                    description: name of the resource being referenced
                    type: string
                  namespace:
                    description: namespace of the resource being referenced
                    type: string
                type: object
              type: array
            mtlsConfig:
              description: |-
                Configuration options for managing Mutual-TLS mTLS in a virtual mesh.Sets
                a shared Certificate Authority across the defined meshes.
              oneOf:
              - not:
                  anyOf:
                  - required:
                    - shared
                  - required:
                    - limited
              - required:
                - shared
              - required:
                - limited
              properties:
                autoRestartPods:
                  description: |-
                    Allow Gloo Mesh to restart mesh pods when certificates are rotated.
                    If this option is not explicitly enabled,
                    users must restart the pods manually for the new certificates to be picked up.
                    `meshctl` provides the command `meshctl mesh restart` to simplify this process.
                  type: boolean
                limited:
                  description: Limited trust (selectively allow communication between workloads and traffic targets in the grouped Meshes).
                  type: object
                shared:
                  description: Shared trust (allow communication between any workloads and traffic targets in the grouped Meshes).
                  properties:
                    rootCertificateAuthority:
                      description: |-
                        Configure a Root Certificate Authority which will be shared by the
                        members of the virtual mesh.
                        If this is not provided, a self-signed certificate will be used
                        by Gloo Mesh to establish shared trust for the purposes of failover and federation.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - generated
                          - required:
                            - secret
                      - required:
                        - generated
                      - required:
                        - secret
                      properties:
                        generated:
                          description: Generate a self-signed root certificate with the given options.
                          properties:
                            orgName:
                              description: Root cert organization name. Defaults to "gloo-mesh".
                              type: string
                            rsaKeySizeBytes:
                              description: Size in bytes of the root cert's private key. Defaults to 4096.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                            ttlDays:
                              description: Number of days before root cert expires. Defaults to 365.
                              maximum: 4294967295
                              minimum: 0
                              type: integer
                          type: object
                        secret:
                          description: |-
                            Use a root certificate provided in a Kubernetes Secret.
                            [Secrets provided in this way must follow a specified format, documented here.]({{% versioned_link_path fromRoot="/guides/federate_identity/" %}})
                          properties:
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                      type: object
                  type: object
              type: object
          type: object
        status:
          properties:
            errors:
              description: Any errors found while processing this generation of the resource.
              items:
                type: string
              type: array
            meshes:
              additionalProperties:
                properties:
                  acceptanceOrder:
                    description: |-
                      AcceptanceOrder represents the order in which the Policy
                      was accepted and applied to a discovery resource. The first accepted policy
                      will have an acceptance_order of 0, the second 1, etc.
                      When conflicts are detected in the system,
                      the Policy with the lowest acceptance_order
                      will be chosen (and all other conflicting policies will be rejected).
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  errors:
                    description: Any errors observed which prevented the resource from being Accepted.
                    items:
                      type: string
                    type: array
                  state:
                    description: |-
                      The result of attempting to apply the policy to the discovery resource,
                      reported by the Policy controller (mesh-networking).
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - FAILED
                    type: string
                type: object
              description: |-
                The status of the VirtualMesh for each Mesh to which it has been applied.
                A VirtualMesh may be Accepted for some Meshes and rejected for others.
              type: object
            observedGeneration:
              description: |-
                The most recent generation observed in the the VirtualMesh metadata.
                If the observedGeneration does not match generation, the controller has not received the most
                recent version of this resource.
              format: int64
              type: integer
            state:
              description: |-
                The state of the overall resource. It will only show accepted if it has been successfully
                applied to all target meshes.
              enum:
              - PENDING
              - ACCEPTED
              - INVALID
              - FAILED
              type: string
          type: object
      type: object
  versions:
  - name: v1alpha2
    served: true
    storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: gloo-mesh
    app.kubernetes.io/name: gloo-mesh
  name: failoverservices.networking.mesh.gloo.solo.io
spec:
  group: networking.mesh.gloo.solo.io
  names:
    kind: FailoverService
    listKind: FailoverServiceList
    plural: failoverservices
    singular: failoverservice
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: |-
            A FailoverService creates a new hostname to which services can send requests.
               Requests will be routed based on a list of backing traffic targets ordered by
               decreasing priority. When outlier detection detects that a traffic target in the list is
               in an unhealthy state, requests sent to the FailoverService will be routed
               to the next healthy traffic target in the list. For each traffic target referenced in the
               FailoverService's BackingServices list, outlier detection must be configured using a TrafficPolicy.

               Currently this feature only supports Services backed by Istio.
          properties:
            backingServices:
              description: |-
                The list of services backing the FailoverService, ordered by decreasing priority.
                       All services must be backed by either the same service mesh instance or
                       backed by service meshes that are grouped under a common VirtualMesh.
              items:
                oneOf:
                - not:
                    anyOf:
                    - required:
                      - kubeService
                - required:
                  - kubeService
                properties:
                  kubeService:
                    description: Name/namespace/cluster of a kubernetes service.
                    properties:
                      clusterName:
                        description: name of the cluster in which the resource exists
                        type: string
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                type: object
              type: array
            hostname:
              description: |-
                The DNS name of the FailoverService. Must be unique within the service mesh instance
                       since it is used as the hostname with which clients communicate.
              type: string
            meshes:
              description: The meshes that this FailoverService will be visible to.
              items:
                properties:
                  name:
                    description: name of the resource being referenced
                    type: string
                  namespace:
                    description: namespace of the resource being referenced
                    type: string
                type: object
              type: array
            port:
              description: The port on which the FailoverService listens.
              properties:
                number:
                  description: Port number.
                  maximum: 4294967295
                  minimum: 0
                  type: integer
                protocol:
                  description: Protocol of the requests sent to the FailoverService, must be one of HTTP, HTTPS, GRPC, HTTP2, MONGO, TCP, TLS.
                  type: string
              type: object
          type: object
        status:
          properties:
            errors:
              description: Any errors found while processing this generation of the resource.
              items:
                type: string
              type: array
            meshes:
              additionalProperties:
                properties:
                  acceptanceOrder:
                    description: |-
                      AcceptanceOrder represents the order in which the Policy
                      was accepted and applied to a discovery resource. The first accepted policy
                      will have an acceptance_order of 0, the second 1, etc.
                      When conflicts are detected in the system,
                      the Policy with the lowest acceptance_order
                      will be chosen (and all other conflicting policies will be rejected).
                    maximum: 4294967295
                    minimum: 0
                    type: integer
                  errors:
                    description: Any errors observed which prevented the resource from being Accepted.
                    items:
                      type: string
                    type: array
                  state:
                    description: |-
                      The result of attempting to apply the policy to the discovery resource,
                      reported by the Policy controller (mesh-networking).
                    enum:
                    - PENDING
                    - ACCEPTED
                    - INVALID
                    - FAILED
                    type: string
                type: object
              description: The status of the FailoverService for each Mesh to which it has been applied.
              type: object
            observedGeneration:
              description: |-
                The most recent generation observed in the the FailoverService metadata.
                       If the observedGeneration does not match generation, the controller has not received the most
                       recent version of this resource.
              format: int64
              type: integer
            state:
              description: |-
                The state of the overall resource, will only show accepted if it has been successfully
                       applied to all target meshes.
              enum:
              - PENDING
              - ACCEPTED
              - INVALID
              - FAILED
              type: string
          type: object
      type: object
  versions:
  - name: v1alpha2
    served: true
    storage: true
