# Code generated by skv2. DO NOT EDIT.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: service-mesh-hub
    app.kubernetes.io/name: service-mesh-hub
  name: traffictargets.discovery.smh.solo.io
spec:
  group: discovery.smh.solo.io
  names:
    kind: TrafficTarget
    listKind: TrafficTargetList
    plural: traffictargets
    singular: traffictarget
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: |-
            The TrafficTarget is an abstraction for a traffic target which we have discovered to be part of a
               given mesh.
          oneOf:
          - not:
              anyOf:
              - required:
                - kubeService
          - required:
            - kubeService
          properties:
            kubeService:
              description: Metadata about the kube-native traffic target backing this TrafficTarget.
              properties:
                labels:
                  additionalProperties:
                    type: string
                  description: Labels on the underlying k8s Service itself.
                  type: object
                ports:
                  description: The ports exposed by the underlying service.
                  items:
                    properties:
                      name:
                        type: string
                      port:
                        description: External-facing port for this k8s service (NOT the service's target port on the backing pods).
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      protocol:
                        type: string
                    type: object
                  type: array
                ref:
                  description: A reference to the kube-native traffic target that this TrafficTarget represents.
                  properties:
                    clusterName:
                      description: name of the cluster in which the resource exists
                      type: string
                    name:
                      description: name of the resource being referenced
                      type: string
                    namespace:
                      description: namespace of the resource being referenced
                      type: string
                  type: object
                subsets:
                  additionalProperties:
                    properties:
                      values:
                        items:
                          type: string
                        type: array
                    type: object
                  description: Subsets for routing, based on labels.
                  type: object
                workloadSelectorLabels:
                  additionalProperties:
                    type: string
                  description: Selectors for the set of pods targeted by the k8s Service.
                  type: object
              type: object
            mesh:
              description: The mesh with which this traffic target is associated.
              properties:
                name:
                  description: name of the resource being referenced
                  type: string
                namespace:
                  description: namespace of the resource being referenced
                  type: string
              type: object
          type: object
        status:
          properties:
            appliedAccessPolicies:
              description: The set of Access Policies that have been applied to this TrafficTarget
              items:
                properties:
                  observedGeneration:
                    description: the observed generation of the accepted access policy
                    format: int64
                    type: integer
                  ref:
                    description: reference to the access policy
                    properties:
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                  spec:
                    description: the last known valid spec of the access policy
                    properties:
                      allowedMethods:
                        description: |-
                          Optional. A list of HTTP methods to allow (e.g., "GET", "POST").
                                 It is ignored in gRPC case because the value is always "POST".
                                 If not specified, allows any method.
                        items:
                          enum:
                          - GET
                          - POST
                          - PUT
                          - DELETE
                          - HEAD
                          - CONNECT
                          - OPTIONS
                          - TRACE
                          - PATCH
                          type: string
                        type: array
                      allowedPaths:
                        description: |-
                          Optional. A list of HTTP paths or gRPC methods to allow.
                                 gRPC methods must be presented as fully-qualified name in the form of
                                 "/packageName.serviceName/methodName" and are case sensitive.
                                 Exact match, prefix match, and suffix match are supported for paths.
                                 For example, the path "/books/review" matches
                                 "/books/review" (exact match), "*books/" (suffix match), or "/books*" (prefix match).

                                 If not specified, allow any path.
                        items:
                          type: string
                        type: array
                      allowedPorts:
                        description: |-
                          Optional. A list of ports which to allow.
                                 If not set any port is allowed.
                        items:
                          maximum: 4294967295
                          minimum: 0
                          type: integer
                        type: array
                      destinationSelector:
                        description: |-
                          Requests destined for these pods will have the rule applied.
                                 Leave empty to apply to all destination pods in the mesh.
                        items:
                          properties:
                            kubeServiceMatcher:
                              description: |-
                                A KubeServiceMatcher matches kubernetes services by the namespaces and clusters they belong to, as well
                                as the provided labels.
                              properties:
                                clusters:
                                  description: If specified, match k8s Services if they exist in one of the specified clusters. If not specified, match on any cluster.
                                  items:
                                    type: string
                                  type: array
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: If specified, all labels must exist on k8s Service, else match on any labels.
                                  type: object
                                namespaces:
                                  description: If specified, match k8s Services if they exist in one of the specified namespaces. If not specified, match on any namespace.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            kubeServiceRefs:
                              description: Match individual k8s Services by direct reference.
                              properties:
                                services:
                                  description: Match k8s Services by direct reference.
                                  items:
                                    properties:
                                      clusterName:
                                        description: name of the cluster in which the resource exists
                                        type: string
                                      name:
                                        description: name of the resource being referenced
                                        type: string
                                      namespace:
                                        description: namespace of the resource being referenced
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        type: array
                      sourceSelector:
                        description: |-
                          Requests originating from these pods will have the rule applied.
                                 Leave empty to have all pods in the mesh apply these policies.

                                 Note that access control policies are mapped to source pods by their
                                 service account. If other pods share the same service account,
                                 this access control rule will apply to those pods as well.

                                 For fine-grained access control policies, ensure that your
                                 service accounts properly reflect the desired
                                 boundary for your access control policies.
                        items:
                          properties:
                            kubeIdentityMatcher:
                              description: A KubeIdentityMatcher matches request identities based on the k8s namespace and cluster.
                              properties:
                                clusters:
                                  description: Cluster to allow. If not set, any cluster is allowed.
                                  items:
                                    type: string
                                  type: array
                                namespaces:
                                  description: Namespaces to allow. If not set, any namespace is allowed.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            kubeServiceAccountRefs:
                              description: KubeServiceAccountRefs matches request identities based on the k8s service account of request.
                              properties:
                                serviceAccounts:
                                  description: List of ServiceAccounts to allow. If not set, any ServiceAccount is allowed.
                                  items:
                                    properties:
                                      clusterName:
                                        description: name of the cluster in which the resource exists
                                        type: string
                                      name:
                                        description: name of the resource being referenced
                                        type: string
                                      namespace:
                                        description: namespace of the resource being referenced
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        type: array
                    type: object
                type: object
              type: array
            appliedTrafficPolicies:
              description: The set of Traffic Policies that have been applied to this TrafficTarget
              items:
                properties:
                  observedGeneration:
                    description: the observed generation of the accepted traffic policy
                    format: int64
                    type: integer
                  ref:
                    description: reference to the traffic policy
                    properties:
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                  spec:
                    description: the last known valid spec of the traffic policy
                    properties:
                      corsPolicy:
                        description: |-
                          Set a Cross-Origin Resource Sharing policy (CORS) for requests. Refer to
                                 https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS
                                 for further details about cross origin resource sharing.
                        properties:
                          allowCredentials:
                            description: |-
                              Indicates whether the caller is allowed to send the actual request
                                         (not the preflight) using credentials. Translates to
                                         `Access-Control-Allow-Credentials` header.
                            nullable: true
                            type: boolean
                          allowHeaders:
                            description: |-
                              List of HTTP headers that can be used when requesting the
                                         resource. Serialized to Access-Control-Allow-Headers header.
                            items:
                              type: string
                            type: array
                          allowMethods:
                            description: |-
                              List of HTTP methods allowed to access the resource. The content will
                                         be serialized into the Access-Control-Allow-Methods header.
                            items:
                              type: string
                            type: array
                          allowOrigins:
                            description: |-
                              String patterns that match allowed origins.
                                         An origin is allowed if any of the string matchers match.
                                         If a match is found, then the outgoing Access-Control-Allow-Origin would be set to the origin as provided by the client.
                            items:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - exact
                                  - required:
                                    - prefix
                                  - required:
                                    - regex
                              - required:
                                - exact
                              - required:
                                - prefix
                              - required:
                                - regex
                              properties:
                                exact:
                                  description: Exact string match.
                                  type: string
                                prefix:
                                  description: Prefix-based match.
                                  type: string
                                regex:
                                  description: ECMAscript style regex-based match.
                                  type: string
                              type: object
                            type: array
                          exposeHeaders:
                            description: |-
                              A white list of HTTP headers that the browsers are allowed to
                                         access. Serialized into Access-Control-Expose-Headers header.
                            items:
                              type: string
                            type: array
                          maxAge:
                            description: |-
                              Specifies how long the results of a preflight request can be
                                         cached. Translates to the `Access-Control-Max-Age` header.
                            type: string
                        type: object
                      destinationSelector:
                        description: |-
                          Requests destined for these k8s services will have the rule applied.
                                 Leave empty to apply to all destination k8s services in the mesh.
                        items:
                          properties:
                            kubeServiceMatcher:
                              description: |-
                                A KubeServiceMatcher matches kubernetes services by the namespaces and clusters they belong to, as well
                                as the provided labels.
                              properties:
                                clusters:
                                  description: If specified, match k8s Services if they exist in one of the specified clusters. If not specified, match on any cluster.
                                  items:
                                    type: string
                                  type: array
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: If specified, all labels must exist on k8s Service, else match on any labels.
                                  type: object
                                namespaces:
                                  description: If specified, match k8s Services if they exist in one of the specified namespaces. If not specified, match on any namespace.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            kubeServiceRefs:
                              description: Match individual k8s Services by direct reference.
                              properties:
                                services:
                                  description: Match k8s Services by direct reference.
                                  items:
                                    properties:
                                      clusterName:
                                        description: name of the cluster in which the resource exists
                                        type: string
                                      name:
                                        description: name of the resource being referenced
                                        type: string
                                      namespace:
                                        description: namespace of the resource being referenced
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        type: array
                      faultInjection:
                        description: Enable fault injection on requests.
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - fixedDelay
                            - required:
                              - exponentialDelay
                            - required:
                              - abort
                        - required:
                          - fixedDelay
                        - required:
                          - exponentialDelay
                        - required:
                          - abort
                        properties:
                          abort:
                            description: |-
                              Abort Http request attempts and return error codes back to downstream
                                             service, giving the impression that the upstream service is faulty.
                            properties:
                              httpStatus:
                                description: REQUIRED. HTTP status code to use to abort the Http request.
                                format: int32
                                type: integer
                            type: object
                          exponentialDelay:
                            description: $hide_from_docs
                            type: string
                          fixedDelay:
                            description: |-
                              Add a fixed delay before forwarding the request. Format:
                                                 1h/1m/1s/1ms. MUST be >=1ms.
                            type: string
                          percentage:
                            description: Percentage of requests to be faulted with the error code provided. Values range between 0 and 100
                            format: double
                            type: number
                        type: object
                      headerManipulation:
                        description: Manipulate request and response headers.
                        properties:
                          appendRequestHeaders:
                            additionalProperties:
                              type: string
                            description: Additional HTTP headers to add before forwarding a request to the destination service.
                            type: object
                          appendResponseHeaders:
                            additionalProperties:
                              type: string
                            description: Additional HTTP headers to add before returning a response to the caller.
                            type: object
                          removeRequestHeaders:
                            description: HTTP headers to remove before forwarding a request to the destination service.
                            items:
                              type: string
                            type: array
                          removeResponseHeaders:
                            description: HTTP headers to remove before returning a response to the caller.
                            items:
                              type: string
                            type: array
                        type: object
                      httpRequestMatchers:
                        description: |-
                          If specified, this rule will only apply to http requests matching these conditions.
                                 Within a single matcher, all conditions must be satisfied for a match to occur.
                                 Between matchers, at least one matcher must be satisfied for the TrafficPolicy to apply.
                                 NB: Linkerd only supports matching on Request Path and Method.
                        items:
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - prefix
                              - required:
                                - exact
                              - required:
                                - regex
                          - required:
                            - prefix
                          - required:
                            - exact
                          - required:
                            - regex
                          properties:
                            exact:
                              description: |-
                                If specified, the route is an exact path rule meaning that the path must
                                               exactly match the *:path* header once the query string is removed.
                              type: string
                            headers:
                              description: Specifies a set of headers which requests must match in entirety (all headers must match).
                              items:
                                properties:
                                  invertMatch:
                                    description: |-
                                      If set to true, the result of the match will be inverted. Defaults to false.

                                                 Examples:
                                                 * name=foo, invert_match=true: matches if no header named `foo` is present
                                                 * name=foo, value=bar, invert_match=true: matches if no header named `foo` with value `bar` is present
                                                 * name=foo, value=``\d{3}``, regex=true, invert_match=true: matches if no header named `foo` with a value consisting of three integers is present
                                    type: boolean
                                  name:
                                    description: Specifies the name of the header in the request.
                                    type: string
                                  regex:
                                    description: Specifies whether the header value should be treated as regex or not.
                                    type: boolean
                                  value:
                                    description: |-
                                      Specifies the value of the header. If the value is absent a request that
                                                 has the name header will match, regardless of the header’s value.
                                    type: string
                                type: object
                              type: array
                            method:
                              description: HTTP Method/Verb to match on. If none specified, the matcher will ignore the HTTP Method
                              properties:
                                method:
                                  enum:
                                  - GET
                                  - POST
                                  - PUT
                                  - DELETE
                                  - HEAD
                                  - CONNECT
                                  - OPTIONS
                                  - TRACE
                                  - PATCH
                                  type: string
                              type: object
                            prefix:
                              description: |-
                                If specified, the route is a prefix rule meaning that the prefix must
                                               match the beginning of the *:path* header.
                              type: string
                            queryParameters:
                              description: |-
                                Specifies a set of URL query parameters which requests must match in entirety (all query params must match).
                                           The router will check the query string from the *path* header against all the specified query parameters
                              items:
                                properties:
                                  name:
                                    description: |-
                                      Specifies the name of a key that must be present in the requested
                                                 *path*'s query string.
                                    type: string
                                  regex:
                                    description: |-
                                      Specifies whether the query parameter value is a regular expression.
                                                 Defaults to false. The entire query parameter value (i.e., the part to
                                                 the right of the equals sign in "key=value") must match the regex.
                                                 E.g., the regex "\d+$" will match "123" but not "a123" or "123a".
                                    type: boolean
                                  value:
                                    description: |-
                                      Specifies the value of the key. If the value is absent, a request
                                                 that contains the key in its query string will match, whether the
                                                 key appears with a value (e.g., "?debug=true") or not (e.g., "?debug")
                                    type: string
                                type: object
                              type: array
                            regex:
                              description: |-
                                If specified, the route is a regular expression rule meaning that the
                                               regex must match the *:path* header once the query string is removed. The entire path
                                               (without the query string) must match the regex. The rule will not match if only a
                                               sub-sequence of the *:path* header matches the regex. The regex grammar is defined `here
                                               <http://en.cppreference.com/w/cpp/regex/ecmascript>`_.
                              type: string
                          type: object
                        type: array
                      mirror:
                        description: Mirror HTTP traffic to a another destination. Traffic will still be sent to its original destination as normal.
                        oneOf:
                        - not:
                            anyOf:
                            - required:
                              - kubeService
                        - required:
                          - kubeService
                        properties:
                          kubeService:
                            description: Name/namespace/cluster of a kubernetes service.
                            properties:
                              clusterName:
                                description: name of the cluster in which the resource exists
                                type: string
                              name:
                                description: name of the resource being referenced
                                type: string
                              namespace:
                                description: namespace of the resource being referenced
                                type: string
                            type: object
                          percentage:
                            description: |-
                              Percentage of traffic to mirror. If absent, 100% will be mirrored.
                                         Values range between 0 and 100
                            format: double
                            type: number
                          port:
                            description: |-
                              Port on the destination k8s service to receive traffic. If multiple are found, and none are specified,
                              then the configuration will be considered invalid.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                        type: object
                      mtls:
                        description: Configure mTLS settings. If specified will override global default defined in Settings.
                        properties:
                          istio:
                            description: Istio TLS settings
                            properties:
                              tlsMode:
                                description: TLS connection mode
                                enum:
                                - DISABLE
                                - SIMPLE
                                - ISTIO_MUTUAL
                                type: string
                            type: object
                        type: object
                      outlierDetection:
                        description: |-
                          Configure outlier detection on the targeted services.
                                 Setting this field requires an empty source_selector because it must apply to all traffic.
                        properties:
                          baseEjectionTime:
                            description: 'Minimum ejection duration. Format: 1h/1m/1s/1ms. MUST BE >=1ms. Defaults to 30s.'
                            type: string
                          consecutiveErrors:
                            description: Number of errors before a host is ejected from the connection pool. Defaults to 5.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          interval:
                            description: 'Time interval between ejection sweep analysis. Format: 1h/1m/1s/1ms. MUST BE >=1ms. Defaults to 10s.'
                            type: string
                          maxEjectionPercent:
                            description: |-
                              Maximum % of hosts in the load balancing pool for the upstream service that can be ejected,
                              but will eject at least one host regardless of the value. MUST BE >= 0 and <= 100.
                              Defaults to 100%, allowing all hosts to be ejected from the pool.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                        type: object
                      requestTimeout:
                        description: Set a timeout on requests.
                        type: string
                      retries:
                        description: Set a retry policy on requests.
                        properties:
                          attempts:
                            description: Number of retries for a given request
                            format: int32
                            type: integer
                          perTryTimeout:
                            description: 'Timeout per retry attempt for a given request. format: 1h/1m/1s/1ms. MUST BE >=1ms.'
                            type: string
                        type: object
                      sourceSelector:
                        description: |-
                          Requests originating from these workloads will have the rule applied.
                                 Leave empty to have all workloads in the mesh apply these rules.

                                 Note: Source Selectors are ignored when TrafficPolicies are
                                 applied to pods in a Linkerd mesh. TrafficPolicies will apply to
                                 all selected destinations in Linkerd, regardless of the source.

                                 Note: If using the TrafficTargetSelector.Matcher, specifying clusters is currently not supported in Istio.
                        items:
                          properties:
                            labels:
                              additionalProperties:
                                type: string
                              description: If specified, all labels must exist on workloads, else match on any labels.
                              type: object
                            namespaces:
                              description: If specified, match workloads if they exist in one of the specified namespaces. If not specified, match on any namespace.
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      trafficShift:
                        description: |-
                          Enables traffic shifting, i.e. to reroute requests to a different service,
                                 to a subset of pods based on their label, and/or split traffic between multiple services.
                        properties:
                          destinations:
                            description: A traffic shift destination.
                            items:
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - kubeService
                                  - required:
                                    - failoverService
                              - required:
                                - kubeService
                              - required:
                                - failoverService
                              properties:
                                failoverService:
                                  description: A traffic shift destination targeting a FailoverService.
                                  properties:
                                    name:
                                      description: The name of the FailoverService.
                                      type: string
                                    namespace:
                                      description: The namespace of the FailoverService.
                                      type: string
                                    subset:
                                      additionalProperties:
                                        type: string
                                      description: Subset routing is currently only supported for Istio backing services.
                                      type: object
                                  type: object
                                kubeService:
                                  description: The use kubeService to shift traffic a Kubernetes Service/subset.
                                  properties:
                                    clusterName:
                                      description: The cluster of the destination k8s service (as it is registered with Service Mesh Hub).
                                      type: string
                                    name:
                                      description: The name of the destination service.
                                      type: string
                                    namespace:
                                      description: The namespace of the destination service.
                                      type: string
                                    port:
                                      description: Port on the destination k8s service to receive traffic. Required if the service exposes more than one port.
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    subset:
                                      additionalProperties:
                                        type: string
                                      description: Subset routing is currently only supported on Istio.
                                      type: object
                                  type: object
                                weight:
                                  description: Weights across all of the destinations must sum to 100. Each is interpreted as a percent from 0-100.
                                  maximum: 4294967295
                                  minimum: 0
                                  type: integer
                              type: object
                            type: array
                        type: object
                    type: object
                type: object
              type: array
            observedGeneration:
              description: |-
                The most recent generation observed in the the TrafficPolicy metadata.
                if the observedGeneration does not match generation, the controller has not received the most
                recent version of this resource.
              format: int64
              type: integer
          type: object
      type: object
  versions:
  - name: v1alpha2
    served: true
    storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: service-mesh-hub
    app.kubernetes.io/name: service-mesh-hub
  name: workloads.discovery.smh.solo.io
spec:
  group: discovery.smh.solo.io
  names:
    kind: Workload
    listKind: WorkloadList
    plural: workloads
    singular: workload
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: |-
            The Workload is an abstraction for a workload/client which mesh-discovery has discovered to be part of a
               given mesh (i.e. its traffic is managed by an in-mesh sidecar).
          oneOf:
          - not:
              anyOf:
              - required:
                - kubernetes
          - required:
            - kubernetes
          properties:
            appMesh:
              description: Appmesh specific metadata.
              properties:
                ports:
                  description: Needed for declaring Appmesh VirtualNode listeners.
                  items:
                    properties:
                      port:
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      protocol:
                        type: string
                    type: object
                  type: array
                virtualNodeName:
                  description: The value of the env var APPMESH_VIRTUAL_NODE_NAME on the Appmesh envoy proxy container.
                  type: string
              type: object
            kubernetes:
              description: Information describing workloads backed by Kubernetes Pods.
              properties:
                controller:
                  description: |-
                    Resource ref to the underlying kubernetes controller which is managing the pods associated with the workloads.
                              It has the generic name controller as it can represent a deployment, daemonset, or statefulset.
                  properties:
                    clusterName:
                      description: name of the cluster in which the resource exists
                      type: string
                    name:
                      description: name of the resource being referenced
                      type: string
                    namespace:
                      description: namespace of the resource being referenced
                      type: string
                  type: object
                podLabels:
                  additionalProperties:
                    type: string
                  description: |-
                    These are the labels directly from the pods that this controller owns.
                               NB: these labels are read directly from the pod template metadata.labels
                               defined in the workload spec.
                               We need these to determine which services are backed by this workload.
                  type: object
                serviceAccountName:
                  description: Service account attached to the pods owned by this controller.
                  type: string
              type: object
            mesh:
              description: The mesh with which this workload is associated.
              properties:
                name:
                  description: name of the resource being referenced
                  type: string
                namespace:
                  description: namespace of the resource being referenced
                  type: string
              type: object
          type: object
        status:
          properties:
            observedGeneration:
              description: |-
                The observed generation of the Workload.
                When this matches the Workload's metadata.generation it indicates that mesh-networking
                has reconciled the latest version of the Workload.
              format: int64
              type: integer
          type: object
      type: object
  versions:
  - name: v1alpha2
    served: true
    storage: true

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: service-mesh-hub
    app.kubernetes.io/name: service-mesh-hub
  name: meshes.discovery.smh.solo.io
spec:
  group: discovery.smh.solo.io
  names:
    kind: Mesh
    listKind: MeshList
    plural: meshes
    singular: mesh
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: Meshes represent a currently registered service mesh.
          oneOf:
          - not:
              anyOf:
              - required:
                - istio
              - required:
                - awsAppMesh
              - required:
                - linkerd
              - required:
                - consulConnect
              - required:
                - osm
          - required:
            - istio
          - required:
            - awsAppMesh
          - required:
            - linkerd
          - required:
            - consulConnect
          - required:
            - osm
          properties:
            agentInfo:
              description: Information about the SMH certificate agent if it has been installed to the remote cluster.
              properties:
                agentNamespace:
                  description: the namespace in which the agent is installed
                  type: string
              type: object
            awsAppMesh:
              properties:
                arn:
                  description: The unique AWS ARN associated with the Mesh.
                  type: string
                awsAccountId:
                  description: The AWS Account ID associated with the Mesh. Populated at REST API registration time.
                  type: string
                awsName:
                  description: AWS name for the AppMesh instance, must be unique across the AWS account.
                  type: string
                clusters:
                  description: The k8s clusters on which sidecars for this AppMesh instance have been discovered.
                  items:
                    type: string
                  type: array
                region:
                  description: The AWS region the AWS App Mesh control plane resources exist in.
                  type: string
              type: object
            consulConnect:
              properties:
                installation:
                  properties:
                    cluster:
                      description: Cluster in which the control plane has been installed.
                      type: string
                    namespace:
                      description: Namespace in which the control plane has been installed.
                      type: string
                    podLabels:
                      additionalProperties:
                        type: string
                      description: the labels on the control plane pods (read from the deployment)
                      type: object
                    version:
                      description: |-
                        Version of the Mesh that has been installed.
                        Determined using the image tag on the
                        Mesh's primary control plane image (e.g. the istio-pilot image tag).
                      type: string
                  type: object
              type: object
            istio:
              properties:
                citadelInfo:
                  description: Configuration metadata for Istio Citadel (Istio's security component).
                  properties:
                    citadelServiceAccount:
                      description: |-
                        istio-citadel service account, used to determine identity for the Istio CA cert.
                                       If empty will default to "istio-citadel".
                      type: string
                    trustDomain:
                      description: |-
                        Istio trust domain used for https/spiffe identity.
                                       https://spiffe.io/spiffe/concepts/#trust-domain
                                       https://istio.io/docs/reference/glossary/#identity

                                       If empty will default to "cluster.local".
                      type: string
                  type: object
                ingressGateways:
                  description: Configuration metadata for Istio IngressGateway (the Istio Ingress).
                  items:
                    properties:
                      externalAddress:
                        description: |-
                          The externally-reachable address on which the gateway is listening for TLS connections.
                          This will be the address used for cross-cluster connectivity.
                          Defaults to the LoadBalancer Address (or NodeIP) of the Kubernetes Service (depending on its type).
                        type: string
                      externalTlsPort:
                        description: |-
                          The externally-reachable port on which the gateway is listening for TLS connections.
                          This will be the port used for cross-cluster connectivity.
                          List of common ports: https://istio.io/latest/docs/ops/deployment/requirements/#ports-used-by-istio.
                          Defaults to 15443 (or the NodePort) of the Kubernetes Service (depending on its type).
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      tlsContainerPort:
                        description: |-
                          Container port on which the gateway is listening for TLS connections.
                          Defaults to 15443.
                        maximum: 4294967295
                        minimum: 0
                        type: integer
                      workloadLabels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels matching the workload which backs the gateway,
                          defaults to `{"istio": "ingressgateway"}`.
                        type: object
                    type: object
                  type: array
                installation:
                  description: Configuration metadata about the istio control plane installation.
                  properties:
                    cluster:
                      description: Cluster in which the control plane has been installed.
                      type: string
                    namespace:
                      description: Namespace in which the control plane has been installed.
                      type: string
                    podLabels:
                      additionalProperties:
                        type: string
                      description: the labels on the control plane pods (read from the deployment)
                      type: object
                    version:
                      description: |-
                        Version of the Mesh that has been installed.
                        Determined using the image tag on the
                        Mesh's primary control plane image (e.g. the istio-pilot image tag).
                      type: string
                  type: object
              type: object
            linkerd:
              properties:
                clusterDomain:
                  description: |-
                    The cluster domain suffix this Linkerd mesh is configured with.
                    See https://linkerd.io/2/tasks/using-custom-domain/ for info.
                  type: string
                installation:
                  properties:
                    cluster:
                      description: Cluster in which the control plane has been installed.
                      type: string
                    namespace:
                      description: Namespace in which the control plane has been installed.
                      type: string
                    podLabels:
                      additionalProperties:
                        type: string
                      description: the labels on the control plane pods (read from the deployment)
                      type: object
                    version:
                      description: |-
                        Version of the Mesh that has been installed.
                        Determined using the image tag on the
                        Mesh's primary control plane image (e.g. the istio-pilot image tag).
                      type: string
                  type: object
              type: object
            osm:
              properties:
                installation:
                  description: Information about where OSM is installed in a managed Kubernetes Cluster.
                  properties:
                    cluster:
                      description: Cluster in which the control plane has been installed.
                      type: string
                    namespace:
                      description: Namespace in which the control plane has been installed.
                      type: string
                    podLabels:
                      additionalProperties:
                        type: string
                      description: the labels on the control plane pods (read from the deployment)
                      type: object
                    version:
                      description: |-
                        Version of the Mesh that has been installed.
                        Determined using the image tag on the
                        Mesh's primary control plane image (e.g. the istio-pilot image tag).
                      type: string
                  type: object
              type: object
          type: object
        status:
          properties:
            appliedFailoverServices:
              description: The FailoverServices, if any, which applies to this mesh.
              items:
                properties:
                  observedGeneration:
                    description: The observed generation of the accepted FailoverService.
                    format: int64
                    type: integer
                  ref:
                    description: Reference to the FailoverService.
                    properties:
                      name:
                        description: name of the resource being referenced
                        type: string
                      namespace:
                        description: namespace of the resource being referenced
                        type: string
                    type: object
                  spec:
                    description: The last known valid spec of the FailoverService.
                    properties:
                      backingServices:
                        description: |-
                          The list of services backing the FailoverService, ordered by decreasing priority.
                                 All services must be backed by either the same service mesh instance or
                                 backed by service meshes that are grouped under a common VirtualMesh.
                        items:
                          oneOf:
                          - not:
                              anyOf:
                              - required:
                                - kubeService
                          - required:
                            - kubeService
                          properties:
                            kubeService:
                              description: Name/namespace/cluster of a kubernetes service.
                              properties:
                                clusterName:
                                  description: name of the cluster in which the resource exists
                                  type: string
                                name:
                                  description: name of the resource being referenced
                                  type: string
                                namespace:
                                  description: namespace of the resource being referenced
                                  type: string
                              type: object
                          type: object
                        type: array
                      hostname:
                        description: |-
                          The DNS name of the FailoverService. Must be unique within the service mesh instance
                                 since it is used as the hostname with which clients communicate.
                        type: string
                      meshes:
                        description: The meshes that this FailoverService will be visible to.
                        items:
                          properties:
                            name:
                              description: name of the resource being referenced
                              type: string
                            namespace:
                              description: namespace of the resource being referenced
                              type: string
                          type: object
                        type: array
                      port:
                        description: The port on which the FailoverService listens.
                        properties:
                          number:
                            description: Port number.
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          protocol:
                            description: Protocol of the requests sent to the FailoverService, must be one of HTTP, HTTPS, GRPC, HTTP2, MONGO, TCP, TLS.
                            type: string
                        type: object
                    type: object
                type: object
              type: array
            appliedVirtualMesh:
              description: The VirtualMesh, if any, which contains this mesh.
              properties:
                observedGeneration:
                  description: The observed generation of the accepted VirtualMesh.
                  format: int64
                  type: integer
                ref:
                  description: Reference to the VirtualMesh.
                  properties:
                    name:
                      description: name of the resource being referenced
                      type: string
                    namespace:
                      description: namespace of the resource being referenced
                      type: string
                  type: object
                spec:
                  description: The last known valid spec of the VirtualMesh.
                  properties:
                    federation:
                      description: Determine how to expose traffic targets to cross-mesh traffic using Service Federation.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - permissive
                      - required:
                        - permissive
                      properties:
                        permissive:
                          description: |-
                            Select permissive mode to expose all traffic targets in a
                            VirtualMesh to cross-cluster traffic from all workloads
                            in that Virtual Mesh.
                          maxProperties: 0
                          type: object
                      type: object
                    globalAccessPolicy:
                      description: Sets an Access Policy for the whole mesh.
                      enum:
                      - MESH_DEFAULT
                      - ENABLED
                      - DISABLED
                      type: string
                    meshes:
                      description: The meshes contained in this virtual mesh.
                      items:
                        properties:
                          name:
                            description: name of the resource being referenced
                            type: string
                          namespace:
                            description: namespace of the resource being referenced
                            type: string
                        type: object
                      type: array
                    mtlsConfig:
                      description: |-
                        Configuration options for managing Mutual-TLS mTLS in a virtual mesh.Sets
                        a shared Certificate Authority across the defined meshes.
                      oneOf:
                      - not:
                          anyOf:
                          - required:
                            - shared
                          - required:
                            - limited
                      - required:
                        - shared
                      - required:
                        - limited
                      properties:
                        autoRestartPods:
                          description: |-
                            Allow Service Mesh Hub to restart mesh pods when certificates are rotated.
                            If this option is not explicitly enabled,
                            users must restart the pods manually for the new certificates to be picked up.
                            `meshctl` provides the command `meshctl mesh restart` to simplify this process.
                          type: boolean
                        limited:
                          description: Limited trust (selectively allow communication between workloads and traffic targets in the grouped Meshes).
                          type: object
                        shared:
                          description: Shared trust (allow communication between any workloads and traffic targets in the grouped Meshes).
                          properties:
                            rootCertificateAuthority:
                              description: |-
                                Configure a Root Certificate Authority which will be shared by the
                                members of the virtual mesh.
                                If this is not provided, a self-signed certificate will be used
                                by Service Mesh Hub to establish shared trust for the purposes of failover and federation.
                              oneOf:
                              - not:
                                  anyOf:
                                  - required:
                                    - generated
                                  - required:
                                    - secret
                              - required:
                                - generated
                              - required:
                                - secret
                              properties:
                                generated:
                                  description: Generate a self-signed root certificate with the given options.
                                  properties:
                                    orgName:
                                      description: Root cert organization name. Defaults to "service-mesh-hub".
                                      type: string
                                    rsaKeySizeBytes:
                                      description: Size in bytes of the root cert's private key. Defaults to 4096.
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                    ttlDays:
                                      description: Number of days before root cert expires. Defaults to 365.
                                      maximum: 4294967295
                                      minimum: 0
                                      type: integer
                                  type: object
                                secret:
                                  description: |-
                                    Use a root certificate provided in a Kubernetes Secret.
                                    [Secrets provided in this way must follow a specified format, documented here.]({{% versioned_link_path fromRoot="/guides/federate_identity/" %}})
                                  properties:
                                    name:
                                      description: name of the resource being referenced
                                      type: string
                                    namespace:
                                      description: namespace of the resource being referenced
                                      type: string
                                  type: object
                              type: object
                          type: object
                      type: object
                  type: object
              type: object
            observedGeneration:
              description: |-
                The observed generation of the Mesh.
                When this matches the Mesh's metadata.generation, it indicates that mesh-networking
                has reconciled the latest version of the Mesh.
              format: int64
              type: integer
          type: object
      type: object
  versions:
  - name: v1alpha2
    served: true
    storage: true
