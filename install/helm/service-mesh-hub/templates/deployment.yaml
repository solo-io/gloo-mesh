# Code generated by skv2. DO NOT EDIT.

---

# Deployment manifest for discovery
{{- $discovery := $.Values.discovery}}
{{- $discoveryImage := $discovery.image }}

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: discovery
  name: discovery
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: discovery
  template:
    metadata:
      labels:
        app: discovery
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: discovery
      containers:
      - image: {{ $discoveryImage.registry }}/{{ $discoveryImage.repository }}:{{ $discoveryImage.tag }}
        args:
        - discovery
        - --metrics-port={{ $.Values.networking.ports.metrics }}
        - --verbose
{{- if $discovery.env }}
        env:
{{ toYaml $discovery.env | indent 10 }}
{{- end }}
        imagePullPolicy: {{ $discoveryImage.pullPolicy }}
        name: discovery
{{- if $discovery.resources }}
        resources:
{{ toYaml $discovery.resources | indent 10}}
{{- else}}
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
{{- end}}
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      {{- if $discoveryImage.pullSecret }}
      imagePullSecrets:
        - name: {{ $discoveryImage.pullSecret }}
      {{- end}}


---

# Service account for discovery

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: discovery
  name: discovery
  namespace: {{ $.Release.Namespace }}



---
# Service for discovery

apiVersion: v1
kind: Service
metadata:
  labels:
    app: discovery
  name: discovery
  namespace: {{ $.Release.Namespace }}
spec:
  selector:
    app: discovery
  type: ClusterIP
  ports:
  - name: metrics
    port: {{ $discovery.ports.metrics }}


---

# Deployment manifest for networking
{{- $networking := $.Values.networking}}
{{- $networkingImage := $networking.image }}

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: networking
  name: networking
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: networking
  template:
    metadata:
      labels:
        app: networking
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: networking
      containers:
      - image: {{ $networkingImage.registry }}/{{ $networkingImage.repository }}:{{ $networkingImage.tag }}
        args:
        - networking
        - --metrics-port={{ $.Values.networking.ports.metrics }}
        - --verbose
{{- if $networking.env }}
        env:
{{ toYaml $networking.env | indent 10 }}
{{- end }}
        imagePullPolicy: {{ $networkingImage.pullPolicy }}
        name: networking
{{- if $networking.resources }}
        resources:
{{ toYaml $networking.resources | indent 10}}
{{- else}}
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
{{- end}}
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      {{- if $networkingImage.pullSecret }}
      imagePullSecrets:
        - name: {{ $networkingImage.pullSecret }}
      {{- end}}


---

# Service account for networking

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: networking
  name: networking
  namespace: {{ $.Release.Namespace }}



---
# Service for networking

apiVersion: v1
kind: Service
metadata:
  labels:
    app: networking
  name: networking
  namespace: {{ $.Release.Namespace }}
spec:
  selector:
    app: networking
  type: ClusterIP
  ports:
  - name: metrics
    port: {{ $networking.ports.metrics }}



