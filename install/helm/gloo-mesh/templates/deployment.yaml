# Code generated by skv2. DO NOT EDIT.



{{- $discovery := $.Values.discovery}}
---

{{- define "discovery.deploymentSpec"}}

{{/* Define variables in function scope */}}
{{- $discovery := $.Values.discovery}}
{{- $discoveryImage := $discovery.image }}
{{- $discoveryExtraPodLabels := $discovery.extraPodLabels }}
{{- $discoveryExtraPodAnnotations := $discovery.extraPodAnnotations }}
{{- $discoveryExtraDeploymentLabels := $discovery.extraDeploymentLabels }}
{{- $discoveryExtraDeploymentAnnotations := $discovery.extraDeploymentAnnotations }}

# Deployment manifest for discovery

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: discovery
    {{- range $key, $value := $discoveryExtraDeploymentLabels }}
    {{ $key }}: {{ $value }}
    {{- end }}
  annotations:
    app.kubernetes.io/name: discovery
    {{- range $key, $value := $discoveryExtraDeploymentAnnotations }}
    {{ $key }}: {{ $value }}
    {{- end }}
  name: discovery
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: discovery
      {{- range $key, $value := $discoveryExtraPodLabels }}
      {{ $key }}: {{ $value }}
      {{- end }}
  template:
    metadata:
      labels:
        app: discovery
        {{- range $key, $value := $discoveryExtraPodLabels }}
        {{ $key }}: {{ $value }}
        {{- end }}
      annotations:
        app.kubernetes.io/name: discovery
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
        {{- range $key, $value := $discoveryExtraPodAnnotations }}
        {{ $key }}: {{ $value }}
        {{- end }}
    spec:
      serviceAccountName: discovery
      containers:
      - image: {{ $discoveryImage.registry }}/{{ $discoveryImage.repository }}:{{ $discoveryImage.tag }}
        args:
        - discovery
        - --metrics-port={{ $.Values.discovery.ports.metrics | default $.Values.defaultMetricsPort }}
        - --settings-name={{ $.Values.glooMeshOperatorArgs.settingsRef.name }}
        - --settings-namespace={{ $.Values.glooMeshOperatorArgs.settingsRef.namespace }}
        - --verbose={{ $.Values.verbose }}
{{- if $discovery.env }}
        env:
{{ toYaml $discovery.env | indent 10 }}
{{- end }}
        imagePullPolicy: {{ $discoveryImage.pullPolicy }}
        name: discovery
{{- if $discovery.resources }}
        resources:
{{ toYaml $discovery.resources | indent 10}}
{{- else}}
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
{{- end}}
{{- if $discovery.securityContext }}
        securityContext:
{{ toYaml $discovery.securityContext | indent 10 }}
{{- else }}
        securityContext:
          runAsNonRoot: true
          runAsUser: 10101
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
{{- end }}
      {{- if $discoveryImage.pullSecret }}
      imagePullSecrets:
        - name: {{ $discoveryImage.pullSecret }}
      {{- end}}

{{- end }} {{/* define "discovery.deploymentSpec" */}}

{{/* Render discovery deployment template with overrides from values*/}}
{{- $discoveryDeploymentOverrides := dict }}
{{- if $discovery.deploymentOverrides }}
{{- $discoveryDeploymentOverrides = $discovery.deploymentOverrides  }}
{{- end }}
{{- include "skv2.utils.merge" (list . $discoveryDeploymentOverrides "discovery.deploymentSpec") }}

---

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: discovery
  name: discovery
  namespace: {{ $.Release.Namespace }}


{{- define "discovery.serviceSpec"}}


# Service for discovery
---
# Service for discovery
{{/* Define variables in function scope */}}
{{- $discovery := $.Values.discovery}}
{{- $discoveryExtraServiceLabels := $discovery.extraServiceLabels }}
{{- $discoveryExtraServiceAnnotations := $discovery.extraServiceAnnotations }}

apiVersion: v1
kind: Service
metadata:
  labels:
    app: discovery
    {{- range $key, $value := $discoveryExtraServiceLabels }}
    {{ $key }}: {{ $value }}
    {{- end }}
  annotations:
    app.kubernetes.io/name: discovery
    {{- range $key, $value := $discoveryExtraServiceAnnotations }}
    {{ $key }}: {{ $value }}
    {{- end }}
  name: discovery
  namespace: {{ $.Release.Namespace }}
spec:
  selector:
    app: discovery
  type: {{ $discovery.serviceType }}
  ports:
  - name: metrics
    port: {{ $discovery.ports.metrics }}


{{- end }} {{/* define "discovery.serviceSpec" */}}

{{/* Render discovery service template with overrides from values*/}}
{{- $discoveryServiceOverrides := dict }}
{{- if $discovery.serviceOverrides }}
{{- $discoveryServiceOverrides = $discovery.serviceOverrides  }}
{{- end }}
{{- include "skv2.utils.merge" (list . $discoveryServiceOverrides "discovery.serviceSpec") }}



{{- $networking := $.Values.networking}}
---

{{- define "networking.deploymentSpec"}}

{{/* Define variables in function scope */}}
{{- $networking := $.Values.networking}}
{{- $networkingImage := $networking.image }}
{{- $networkingExtraPodLabels := $networking.extraPodLabels }}
{{- $networkingExtraPodAnnotations := $networking.extraPodAnnotations }}
{{- $networkingExtraDeploymentLabels := $networking.extraDeploymentLabels }}
{{- $networkingExtraDeploymentAnnotations := $networking.extraDeploymentAnnotations }}

# Deployment manifest for networking

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: networking
    {{- range $key, $value := $networkingExtraDeploymentLabels }}
    {{ $key }}: {{ $value }}
    {{- end }}
  annotations:
    app.kubernetes.io/name: networking
    {{- range $key, $value := $networkingExtraDeploymentAnnotations }}
    {{ $key }}: {{ $value }}
    {{- end }}
  name: networking
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: networking
      {{- range $key, $value := $networkingExtraPodLabels }}
      {{ $key }}: {{ $value }}
      {{- end }}
  template:
    metadata:
      labels:
        app: networking
        {{- range $key, $value := $networkingExtraPodLabels }}
        {{ $key }}: {{ $value }}
        {{- end }}
      annotations:
        app.kubernetes.io/name: networking
        prometheus.io/path: /metrics
        prometheus.io/port: "9091"
        prometheus.io/scrape: "true"
        sidecar.istio.io/inject: "false"
        {{- range $key, $value := $networkingExtraPodAnnotations }}
        {{ $key }}: {{ $value }}
        {{- end }}
    spec:
      serviceAccountName: networking
      containers:
      - image: {{ $networkingImage.registry }}/{{ $networkingImage.repository }}:{{ $networkingImage.tag }}
        args:
        - networking
        - --metrics-port={{ $.Values.defaultMetricsPort }}
        - --settings-name={{ $.Values.glooMeshOperatorArgs.settingsRef.name }}
        - --settings-namespace={{ $.Values.glooMeshOperatorArgs.settingsRef.namespace }}
        - --verbose={{ $.Values.verbose }}
        - --disallow-intersecting-config={{ $.Values.disallowIntersectingConfig }}
        - --watch-output-types={{ $.Values.watchOutputTypes }}
{{- if $networking.env }}
        env:
{{ toYaml $networking.env | indent 10 }}
{{- end }}
        imagePullPolicy: {{ $networkingImage.pullPolicy }}
        name: networking
{{- if $networking.resources }}
        resources:
{{ toYaml $networking.resources | indent 10}}
{{- else}}
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
{{- end}}
{{- if $networking.securityContext }}
        securityContext:
{{ toYaml $networking.securityContext | indent 10 }}
{{- else }}
        securityContext:
          runAsNonRoot: true
          runAsUser: 10101
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
{{- end }}
      {{- if $networkingImage.pullSecret }}
      imagePullSecrets:
        - name: {{ $networkingImage.pullSecret }}
      {{- end}}

{{- end }} {{/* define "networking.deploymentSpec" */}}

{{/* Render networking deployment template with overrides from values*/}}
{{- $networkingDeploymentOverrides := dict }}
{{- if $networking.deploymentOverrides }}
{{- $networkingDeploymentOverrides = $networking.deploymentOverrides  }}
{{- end }}
{{- include "skv2.utils.merge" (list . $networkingDeploymentOverrides "networking.deploymentSpec") }}

---

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: networking
  name: networking
  namespace: {{ $.Release.Namespace }}


{{- define "networking.serviceSpec"}}



{{- end }} {{/* define "networking.serviceSpec" */}}

{{/* Render networking service template with overrides from values*/}}
{{- $networkingServiceOverrides := dict }}
{{- if $networking.serviceOverrides }}
{{- $networkingServiceOverrides = $networking.serviceOverrides  }}
{{- end }}
{{- include "skv2.utils.merge" (list . $networkingServiceOverrides "networking.serviceSpec") }}


