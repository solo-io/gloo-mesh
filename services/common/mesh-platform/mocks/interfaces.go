// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package mock_mesh_platform is a generated GoMock package.
package mock_mesh_platform

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/core/v1"
)

// MockMeshPlatformCredentialsHandler is a mock of MeshPlatformCredentialsHandler interface.
type MockMeshPlatformCredentialsHandler struct {
	ctrl     *gomock.Controller
	recorder *MockMeshPlatformCredentialsHandlerMockRecorder
}

// MockMeshPlatformCredentialsHandlerMockRecorder is the mock recorder for MockMeshPlatformCredentialsHandler.
type MockMeshPlatformCredentialsHandlerMockRecorder struct {
	mock *MockMeshPlatformCredentialsHandler
}

// NewMockMeshPlatformCredentialsHandler creates a new mock instance.
func NewMockMeshPlatformCredentialsHandler(ctrl *gomock.Controller) *MockMeshPlatformCredentialsHandler {
	mock := &MockMeshPlatformCredentialsHandler{ctrl: ctrl}
	mock.recorder = &MockMeshPlatformCredentialsHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMeshPlatformCredentialsHandler) EXPECT() *MockMeshPlatformCredentialsHandlerMockRecorder {
	return m.recorder
}

// MeshPlatformAdded mocks base method.
func (m *MockMeshPlatformCredentialsHandler) MeshPlatformAdded(ctx context.Context, secret *v1.Secret) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MeshPlatformAdded", ctx, secret)
	ret0, _ := ret[0].(error)
	return ret0
}

// MeshPlatformAdded indicates an expected call of MeshPlatformAdded.
func (mr *MockMeshPlatformCredentialsHandlerMockRecorder) MeshPlatformAdded(ctx, secret interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MeshPlatformAdded", reflect.TypeOf((*MockMeshPlatformCredentialsHandler)(nil).MeshPlatformAdded), ctx, secret)
}

// MeshPlatformRemoved mocks base method.
func (m *MockMeshPlatformCredentialsHandler) MeshPlatformRemoved(ctx context.Context, secret *v1.Secret) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MeshPlatformRemoved", ctx, secret)
	ret0, _ := ret[0].(error)
	return ret0
}

// MeshPlatformRemoved indicates an expected call of MeshPlatformRemoved.
func (mr *MockMeshPlatformCredentialsHandlerMockRecorder) MeshPlatformRemoved(ctx, secret interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MeshPlatformRemoved", reflect.TypeOf((*MockMeshPlatformCredentialsHandler)(nil).MeshPlatformRemoved), ctx, secret)
}
