// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package mock_appmesh is a generated GoMock package.
package mock_appmesh

import (
	reflect "reflect"

	appmeshiface "github.com/aws/aws-sdk-go/service/appmesh/appmeshiface"
	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/core/v1"
)

// MockAppMeshClientFactory is a mock of AppMeshClientFactory interface.
type MockAppMeshClientFactory struct {
	ctrl     *gomock.Controller
	recorder *MockAppMeshClientFactoryMockRecorder
}

// MockAppMeshClientFactoryMockRecorder is the mock recorder for MockAppMeshClientFactory.
type MockAppMeshClientFactoryMockRecorder struct {
	mock *MockAppMeshClientFactory
}

// NewMockAppMeshClientFactory creates a new mock instance.
func NewMockAppMeshClientFactory(ctrl *gomock.Controller) *MockAppMeshClientFactory {
	mock := &MockAppMeshClientFactory{ctrl: ctrl}
	mock.recorder = &MockAppMeshClientFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAppMeshClientFactory) EXPECT() *MockAppMeshClientFactoryMockRecorder {
	return m.recorder
}

// Build mocks base method.
func (m *MockAppMeshClientFactory) Build(secret *v1.Secret, region string) (appmeshiface.AppMeshAPI, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Build", secret, region)
	ret0, _ := ret[0].(appmeshiface.AppMeshAPI)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Build indicates an expected call of Build.
func (mr *MockAppMeshClientFactoryMockRecorder) Build(secret, region interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Build", reflect.TypeOf((*MockAppMeshClientFactory)(nil).Build), secret, region)
}
