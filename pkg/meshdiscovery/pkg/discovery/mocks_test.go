// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package discovery is a generated GoMock package.
package discovery

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "github.com/solo-io/supergloo/pkg/api/v1"
)

// MockMeshDiscovery is a mock of MeshDiscovery interface
type MockMeshDiscovery struct {
	ctrl     *gomock.Controller
	recorder *MockMeshDiscoveryMockRecorder
}

// MockMeshDiscoveryMockRecorder is the mock recorder for MockMeshDiscovery
type MockMeshDiscoveryMockRecorder struct {
	mock *MockMeshDiscovery
}

// NewMockMeshDiscovery creates a new mock instance
func NewMockMeshDiscovery(ctrl *gomock.Controller) *MockMeshDiscovery {
	mock := &MockMeshDiscovery{ctrl: ctrl}
	mock.recorder = &MockMeshDiscoveryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMeshDiscovery) EXPECT() *MockMeshDiscoveryMockRecorder {
	return m.recorder
}

// DiscoverMeshes mocks base method
func (m *MockMeshDiscovery) DiscoverMeshes(ctx context.Context, snapshot *v1.DiscoverySnapshot) (v1.MeshList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DiscoverMeshes", ctx, snapshot)
	ret0, _ := ret[0].(v1.MeshList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DiscoverMeshes indicates an expected call of DiscoverMeshes
func (mr *MockMeshDiscoveryMockRecorder) DiscoverMeshes(ctx, snapshot interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DiscoverMeshes", reflect.TypeOf((*MockMeshDiscovery)(nil).DiscoverMeshes), ctx, snapshot)
}
