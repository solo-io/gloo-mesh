// Code generated by MockGen. DO NOT EDIT.
// Source: ./interfaces.go

// Package mock_cloud is a generated GoMock package.
package mock_cloud

import (
	reflect "reflect"

	credentials "github.com/aws/aws-sdk-go/aws/credentials"
	gomock "github.com/golang/mock/gomock"
	cloud "github.com/solo-io/service-mesh-hub/pkg/common/aws/cloud"
)

// MockAwsCloudStore is a mock of AwsCloudStore interface.
type MockAwsCloudStore struct {
	ctrl     *gomock.Controller
	recorder *MockAwsCloudStoreMockRecorder
}

// MockAwsCloudStoreMockRecorder is the mock recorder for MockAwsCloudStore.
type MockAwsCloudStoreMockRecorder struct {
	mock *MockAwsCloudStore
}

// NewMockAwsCloudStore creates a new mock instance.
func NewMockAwsCloudStore(ctrl *gomock.Controller) *MockAwsCloudStore {
	mock := &MockAwsCloudStore{ctrl: ctrl}
	mock.recorder = &MockAwsCloudStoreMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAwsCloudStore) EXPECT() *MockAwsCloudStoreMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockAwsCloudStore) Add(accountId string, creds *credentials.Credentials) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Add", accountId, creds)
}

// Add indicates an expected call of Add.
func (mr *MockAwsCloudStoreMockRecorder) Add(accountId, creds interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockAwsCloudStore)(nil).Add), accountId, creds)
}

// Get mocks base method.
func (m *MockAwsCloudStore) Get(accountId, region string) (*cloud.AwsCloud, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", accountId, region)
	ret0, _ := ret[0].(*cloud.AwsCloud)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockAwsCloudStoreMockRecorder) Get(accountId, region interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockAwsCloudStore)(nil).Get), accountId, region)
}

// Remove mocks base method.
func (m *MockAwsCloudStore) Remove(accountId string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Remove", accountId)
}

// Remove indicates an expected call of Remove.
func (mr *MockAwsCloudStoreMockRecorder) Remove(accountId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Remove", reflect.TypeOf((*MockAwsCloudStore)(nil).Remove), accountId)
}
