// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: github.com/solo-io/gloo-mesh/api/common/matchers/v1alpha1/request_matchers.proto

package v1alpha1

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Describes a matcher against HTTP request headers.
type HeaderMatcher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specifies the name of the header in the request.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	//
	//Specifies the value of the header. If the value is absent a request that
	//has the name header will match, regardless of the headerâ€™s value.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Specifies whether the header value should be treated as regex or not.
	Regex bool `protobuf:"varint,3,opt,name=regex,proto3" json:"regex,omitempty"`
	//
	//If set to true, the result of the match will be inverted. Defaults to false.
	//
	//Examples:
	// name=foo, invert_match=true: matches if no header named `foo` is present
	// name=foo, value=bar, invert_match=true: matches if no header named `foo` with value `bar` is present
	// name=foo, value=``\d{3}``, regex=true, invert_match=true: matches if no header named `foo` with a value consisting of three integers is present
	InvertMatch bool `protobuf:"varint,4,opt,name=invert_match,json=invertMatch,proto3" json:"invert_match,omitempty"`
}

func (x *HeaderMatcher) Reset() {
	*x = HeaderMatcher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeaderMatcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderMatcher) ProtoMessage() {}

func (x *HeaderMatcher) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderMatcher.ProtoReflect.Descriptor instead.
func (*HeaderMatcher) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_rawDescGZIP(), []int{0}
}

func (x *HeaderMatcher) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HeaderMatcher) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *HeaderMatcher) GetRegex() bool {
	if x != nil {
		return x.Regex
	}
	return false
}

func (x *HeaderMatcher) GetInvertMatch() bool {
	if x != nil {
		return x.InvertMatch
	}
	return false
}

// Describes a matchers against HTTP response status codes.
type StatusCodeMatcher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to MatchType:
	//	*StatusCodeMatcher_Exact
	//	*StatusCodeMatcher_Range_
	MatchType isStatusCodeMatcher_MatchType `protobuf_oneof:"match_type"`
}

func (x *StatusCodeMatcher) Reset() {
	*x = StatusCodeMatcher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusCodeMatcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusCodeMatcher) ProtoMessage() {}

func (x *StatusCodeMatcher) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusCodeMatcher.ProtoReflect.Descriptor instead.
func (*StatusCodeMatcher) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_rawDescGZIP(), []int{1}
}

func (m *StatusCodeMatcher) GetMatchType() isStatusCodeMatcher_MatchType {
	if m != nil {
		return m.MatchType
	}
	return nil
}

func (x *StatusCodeMatcher) GetExact() uint32 {
	if x, ok := x.GetMatchType().(*StatusCodeMatcher_Exact); ok {
		return x.Exact
	}
	return 0
}

func (x *StatusCodeMatcher) GetRange() *StatusCodeMatcher_Range {
	if x, ok := x.GetMatchType().(*StatusCodeMatcher_Range_); ok {
		return x.Range
	}
	return nil
}

type isStatusCodeMatcher_MatchType interface {
	isStatusCodeMatcher_MatchType()
}

type StatusCodeMatcher_Exact struct {
	// Matches the status code exactly.
	Exact uint32 `protobuf:"varint,1,opt,name=exact,proto3,oneof"`
}

type StatusCodeMatcher_Range_ struct {
	Range *StatusCodeMatcher_Range `protobuf:"bytes,2,opt,name=range,proto3,oneof"`
}

func (*StatusCodeMatcher_Exact) isStatusCodeMatcher_MatchType() {}

func (*StatusCodeMatcher_Range_) isStatusCodeMatcher_MatchType() {}

// Describes a range matcher against HTTP response status codes. Boundaries are inclusive.
type StatusCodeMatcher_Range struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The inclusive boundary value.
	Value uint32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	// If true, treat the value as an inclusive upper bound. Otherwise, as an inclusive lower bound.
	IsLte bool `protobuf:"varint,2,opt,name=is_lte,json=isLte,proto3" json:"is_lte,omitempty"`
}

func (x *StatusCodeMatcher_Range) Reset() {
	*x = StatusCodeMatcher_Range{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusCodeMatcher_Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusCodeMatcher_Range) ProtoMessage() {}

func (x *StatusCodeMatcher_Range) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusCodeMatcher_Range.ProtoReflect.Descriptor instead.
func (*StatusCodeMatcher_Range) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_rawDescGZIP(), []int{1, 0}
}

func (x *StatusCodeMatcher_Range) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *StatusCodeMatcher_Range) GetIsLte() bool {
	if x != nil {
		return x.IsLte
	}
	return false
}

var File_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto protoreflect.FileDescriptor

var file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_rawDesc = []byte{
	0x0a, 0x50, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65,
	0x72, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x21, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x72, 0x73, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x22, 0x72, 0x0a, 0x0d, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x72, 0x65, 0x67, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x74,
	0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e,
	0x76, 0x65, 0x72, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x22, 0xc3, 0x01, 0x0a, 0x11, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12,
	0x16, 0x0a, 0x05, 0x65, 0x78, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x78, 0x61, 0x63, 0x74, 0x12, 0x52, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x73, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x1a, 0x34, 0x0a, 0x05, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73,
	0x5f, 0x6c, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x4c, 0x74,
	0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x42,
	0x51, 0x5a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f,
	0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x68, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x73, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f,
	0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_rawDescOnce sync.Once
	file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_rawDescData = file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_rawDesc
)

func file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_rawDescData)
	})
	return file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_rawDescData
}

var file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_goTypes = []interface{}{
	(*HeaderMatcher)(nil),           // 0: common.matchers.mesh.gloo.solo.io.HeaderMatcher
	(*StatusCodeMatcher)(nil),       // 1: common.matchers.mesh.gloo.solo.io.StatusCodeMatcher
	(*StatusCodeMatcher_Range)(nil), // 2: common.matchers.mesh.gloo.solo.io.StatusCodeMatcher.Range
}
var file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_depIdxs = []int32{
	2, // 0: common.matchers.mesh.gloo.solo.io.StatusCodeMatcher.range:type_name -> common.matchers.mesh.gloo.solo.io.StatusCodeMatcher.Range
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() {
	file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_init()
}
func file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_init() {
	if File_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeaderMatcher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusCodeMatcher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusCodeMatcher_Range); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*StatusCodeMatcher_Exact)(nil),
		(*StatusCodeMatcher_Range_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_depIdxs,
		MessageInfos:      file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto = out.File
	file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_rawDesc = nil
	file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_goTypes = nil
	file_github_com_solo_io_gloo_mesh_api_common_matchers_v1alpha1_request_matchers_proto_depIdxs = nil
}
