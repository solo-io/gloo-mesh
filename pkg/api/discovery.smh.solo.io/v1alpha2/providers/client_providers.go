// Code generated by skv2. DO NOT EDIT.

package v1alpha2

import (
	discovery_smh_solo_io_v1alpha2 "github.com/solo-io/service-mesh-hub/pkg/api/discovery.smh.solo.io/v1alpha2"

	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for TrafficTargetClient from Clientset
func TrafficTargetClientFromClientsetProvider(clients discovery_smh_solo_io_v1alpha2.Clientset) discovery_smh_solo_io_v1alpha2.TrafficTargetClient {
	return clients.TrafficTargets()
}

// Provider for TrafficTarget Client from Client
func TrafficTargetClientProvider(client client.Client) discovery_smh_solo_io_v1alpha2.TrafficTargetClient {
	return discovery_smh_solo_io_v1alpha2.NewTrafficTargetClient(client)
}

type TrafficTargetClientFactory func(client client.Client) discovery_smh_solo_io_v1alpha2.TrafficTargetClient

func TrafficTargetClientFactoryProvider() TrafficTargetClientFactory {
	return TrafficTargetClientProvider
}

type TrafficTargetClientFromConfigFactory func(cfg *rest.Config) (discovery_smh_solo_io_v1alpha2.TrafficTargetClient, error)

func TrafficTargetClientFromConfigFactoryProvider() TrafficTargetClientFromConfigFactory {
	return func(cfg *rest.Config) (discovery_smh_solo_io_v1alpha2.TrafficTargetClient, error) {
		clients, err := discovery_smh_solo_io_v1alpha2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.TrafficTargets(), nil
	}
}

// Provider for MeshWorkloadClient from Clientset
func MeshWorkloadClientFromClientsetProvider(clients discovery_smh_solo_io_v1alpha2.Clientset) discovery_smh_solo_io_v1alpha2.MeshWorkloadClient {
	return clients.MeshWorkloads()
}

// Provider for MeshWorkload Client from Client
func MeshWorkloadClientProvider(client client.Client) discovery_smh_solo_io_v1alpha2.MeshWorkloadClient {
	return discovery_smh_solo_io_v1alpha2.NewMeshWorkloadClient(client)
}

type MeshWorkloadClientFactory func(client client.Client) discovery_smh_solo_io_v1alpha2.MeshWorkloadClient

func MeshWorkloadClientFactoryProvider() MeshWorkloadClientFactory {
	return MeshWorkloadClientProvider
}

type MeshWorkloadClientFromConfigFactory func(cfg *rest.Config) (discovery_smh_solo_io_v1alpha2.MeshWorkloadClient, error)

func MeshWorkloadClientFromConfigFactoryProvider() MeshWorkloadClientFromConfigFactory {
	return func(cfg *rest.Config) (discovery_smh_solo_io_v1alpha2.MeshWorkloadClient, error) {
		clients, err := discovery_smh_solo_io_v1alpha2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.MeshWorkloads(), nil
	}
}

// Provider for MeshClient from Clientset
func MeshClientFromClientsetProvider(clients discovery_smh_solo_io_v1alpha2.Clientset) discovery_smh_solo_io_v1alpha2.MeshClient {
	return clients.Meshes()
}

// Provider for Mesh Client from Client
func MeshClientProvider(client client.Client) discovery_smh_solo_io_v1alpha2.MeshClient {
	return discovery_smh_solo_io_v1alpha2.NewMeshClient(client)
}

type MeshClientFactory func(client client.Client) discovery_smh_solo_io_v1alpha2.MeshClient

func MeshClientFactoryProvider() MeshClientFactory {
	return MeshClientProvider
}

type MeshClientFromConfigFactory func(cfg *rest.Config) (discovery_smh_solo_io_v1alpha2.MeshClient, error)

func MeshClientFromConfigFactoryProvider() MeshClientFromConfigFactory {
	return func(cfg *rest.Config) (discovery_smh_solo_io_v1alpha2.MeshClient, error) {
		clients, err := discovery_smh_solo_io_v1alpha2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.Meshes(), nil
	}
}
