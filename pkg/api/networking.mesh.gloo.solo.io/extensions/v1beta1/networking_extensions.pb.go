// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: github.com/solo-io/gloo-mesh/api/networking/extensions/v1beta1/networking_extensions.proto

package v1beta1

import (
	context "context"
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	v1 "github.com/solo-io/gloo-mesh/pkg/api/discovery.mesh.gloo.solo.io/v1"
	v1beta1 "github.com/solo-io/gloo-mesh/pkg/api/xds.agent.enterprise.mesh.gloo.solo.io/v1beta1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	v1alpha3 "istio.io/api/networking/v1alpha3"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// the parameters provided to the Extensions server when requesting patches
type ExtensionPatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the set of discovery objects provided as inputs for the Gloo Mesh translation
	Inputs *DiscoverySnapshot `protobuf:"bytes,1,opt,name=inputs,proto3" json:"inputs,omitempty"`
	// the base set of output objects translated by Gloo Mesh.
	// these may have been operated upon by a previous Extension server if multiple servers
	// have been configured.
	Outputs []*GeneratedObject `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`
}

func (x *ExtensionPatchRequest) Reset() {
	*x = ExtensionPatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtensionPatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensionPatchRequest) ProtoMessage() {}

func (x *ExtensionPatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensionPatchRequest.ProtoReflect.Descriptor instead.
func (*ExtensionPatchRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDescGZIP(), []int{0}
}

func (x *ExtensionPatchRequest) GetInputs() *DiscoverySnapshot {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *ExtensionPatchRequest) GetOutputs() []*GeneratedObject {
	if x != nil {
		return x.Outputs
	}
	return nil
}

// the set of patches the server wishes to apply to the Gloo Mesh Networking outputs.
// Any objects provided here will be inserted into the final Gloo Mesh snapshot.
// If an object already exists in the snapshot, it will be overridden by the version provided here.
// If multiple extensions servers are configured, this response may be
// operated upon by Extension patches provided by subsequent servers.
type ExtensionPatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the set of modified/added output objects desired by the Extension server.
	PatchedOutputs []*GeneratedObject `protobuf:"bytes,1,rep,name=patched_outputs,json=patchedOutputs,proto3" json:"patched_outputs,omitempty"`
}

func (x *ExtensionPatchResponse) Reset() {
	*x = ExtensionPatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtensionPatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensionPatchResponse) ProtoMessage() {}

func (x *ExtensionPatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensionPatchResponse.ProtoReflect.Descriptor instead.
func (*ExtensionPatchResponse) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDescGZIP(), []int{1}
}

func (x *ExtensionPatchResponse) GetPatchedOutputs() []*GeneratedObject {
	if x != nil {
		return x.PatchedOutputs
	}
	return nil
}

// a Protobuf representation of the set of Discovery objects used to produce the Networking outputs.
type DiscoverySnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// all meshes in the discovery snapshot
	Meshes []*MeshObject `protobuf:"bytes,1,rep,name=meshes,proto3" json:"meshes,omitempty"`
	// all Destinations in the discovery snapshot
	Destinations []*DestinationObject `protobuf:"bytes,2,rep,name=destinations,proto3" json:"destinations,omitempty"`
	// all workloads in the discovery snapshot
	Workloads []*WorkloadObject `protobuf:"bytes,3,rep,name=workloads,proto3" json:"workloads,omitempty"`
}

func (x *DiscoverySnapshot) Reset() {
	*x = DiscoverySnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoverySnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverySnapshot) ProtoMessage() {}

func (x *DiscoverySnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverySnapshot.ProtoReflect.Descriptor instead.
func (*DiscoverySnapshot) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDescGZIP(), []int{2}
}

func (x *DiscoverySnapshot) GetMeshes() []*MeshObject {
	if x != nil {
		return x.Meshes
	}
	return nil
}

func (x *DiscoverySnapshot) GetDestinations() []*DestinationObject {
	if x != nil {
		return x.Destinations
	}
	return nil
}

func (x *DiscoverySnapshot) GetWorkloads() []*WorkloadObject {
	if x != nil {
		return x.Workloads
	}
	return nil
}

// a proto-serializable representation of a Destination object
type DestinationObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// metadata of the object
	Metadata *ObjectMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// the spec of the object
	Spec *v1.DestinationSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	// the status of the object
	Status *v1.DestinationStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *DestinationObject) Reset() {
	*x = DestinationObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestinationObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestinationObject) ProtoMessage() {}

func (x *DestinationObject) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestinationObject.ProtoReflect.Descriptor instead.
func (*DestinationObject) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDescGZIP(), []int{3}
}

func (x *DestinationObject) GetMetadata() *ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *DestinationObject) GetSpec() *v1.DestinationSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *DestinationObject) GetStatus() *v1.DestinationStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// a proto-serializable representation of a Workload object
type WorkloadObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// metadata of the object
	Metadata *ObjectMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// the spec of the object
	Spec *v1.WorkloadSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	// the status of the object
	Status *v1.WorkloadStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *WorkloadObject) Reset() {
	*x = WorkloadObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkloadObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkloadObject) ProtoMessage() {}

func (x *WorkloadObject) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkloadObject.ProtoReflect.Descriptor instead.
func (*WorkloadObject) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDescGZIP(), []int{4}
}

func (x *WorkloadObject) GetMetadata() *ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *WorkloadObject) GetSpec() *v1.WorkloadSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *WorkloadObject) GetStatus() *v1.WorkloadStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// a proto-serializable representation of a Mesh object
type MeshObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// metadata of the object
	Metadata *ObjectMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// the spec of the object
	Spec *v1.MeshSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	// the status of the object
	Status *v1.MeshStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *MeshObject) Reset() {
	*x = MeshObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeshObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeshObject) ProtoMessage() {}

func (x *MeshObject) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeshObject.ProtoReflect.Descriptor instead.
func (*MeshObject) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDescGZIP(), []int{5}
}

func (x *MeshObject) GetMetadata() *ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MeshObject) GetSpec() *v1.MeshSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *MeshObject) GetStatus() *v1.MeshStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// a generated object can be of any output type supported by Gloo Mesh.
// the content of the type field should be used to determine
// the type of the output object.
// TODO(ilackarms): consider parameterizing Gloo Mesh to allow excluding GeneratedObjects from patch requests in the case where an implementer only performs additions (no updates required).
type GeneratedObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// metadata of the object
	Metadata *ObjectMeta `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// type of the object.
	//
	// Types that are assignable to Type:
	//	*GeneratedObject_DestinationRule
	//	*GeneratedObject_EnvoyFilter
	//	*GeneratedObject_ServiceEntry
	//	*GeneratedObject_VirtualService
	//	*GeneratedObject_ConfigMap_
	//	*GeneratedObject_XdsConfig
	Type isGeneratedObject_Type `protobuf_oneof:"type"`
}

func (x *GeneratedObject) Reset() {
	*x = GeneratedObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneratedObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratedObject) ProtoMessage() {}

func (x *GeneratedObject) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratedObject.ProtoReflect.Descriptor instead.
func (*GeneratedObject) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDescGZIP(), []int{6}
}

func (x *GeneratedObject) GetMetadata() *ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (m *GeneratedObject) GetType() isGeneratedObject_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *GeneratedObject) GetDestinationRule() *v1alpha3.DestinationRule {
	if x, ok := x.GetType().(*GeneratedObject_DestinationRule); ok {
		return x.DestinationRule
	}
	return nil
}

func (x *GeneratedObject) GetEnvoyFilter() *v1alpha3.EnvoyFilter {
	if x, ok := x.GetType().(*GeneratedObject_EnvoyFilter); ok {
		return x.EnvoyFilter
	}
	return nil
}

func (x *GeneratedObject) GetServiceEntry() *v1alpha3.ServiceEntry {
	if x, ok := x.GetType().(*GeneratedObject_ServiceEntry); ok {
		return x.ServiceEntry
	}
	return nil
}

func (x *GeneratedObject) GetVirtualService() *v1alpha3.VirtualService {
	if x, ok := x.GetType().(*GeneratedObject_VirtualService); ok {
		return x.VirtualService
	}
	return nil
}

func (x *GeneratedObject) GetConfigMap() *GeneratedObject_ConfigMap {
	if x, ok := x.GetType().(*GeneratedObject_ConfigMap_); ok {
		return x.ConfigMap
	}
	return nil
}

func (x *GeneratedObject) GetXdsConfig() *v1beta1.XdsConfigSpec {
	if x, ok := x.GetType().(*GeneratedObject_XdsConfig); ok {
		return x.XdsConfig
	}
	return nil
}

type isGeneratedObject_Type interface {
	isGeneratedObject_Type()
}

type GeneratedObject_DestinationRule struct {
	DestinationRule *v1alpha3.DestinationRule `protobuf:"bytes,2,opt,name=destination_rule,json=destinationRule,proto3,oneof"`
}

type GeneratedObject_EnvoyFilter struct {
	EnvoyFilter *v1alpha3.EnvoyFilter `protobuf:"bytes,3,opt,name=envoy_filter,json=envoyFilter,proto3,oneof"`
}

type GeneratedObject_ServiceEntry struct {
	ServiceEntry *v1alpha3.ServiceEntry `protobuf:"bytes,4,opt,name=service_entry,json=serviceEntry,proto3,oneof"`
}

type GeneratedObject_VirtualService struct {
	VirtualService *v1alpha3.VirtualService `protobuf:"bytes,5,opt,name=virtual_service,json=virtualService,proto3,oneof"`
}

type GeneratedObject_ConfigMap_ struct {
	ConfigMap *GeneratedObject_ConfigMap `protobuf:"bytes,6,opt,name=config_map,json=configMap,proto3,oneof"`
}

type GeneratedObject_XdsConfig struct {
	XdsConfig *v1beta1.XdsConfigSpec `protobuf:"bytes,7,opt,name=xds_config,json=xdsConfig,proto3,oneof"`
}

func (*GeneratedObject_DestinationRule) isGeneratedObject_Type() {}

func (*GeneratedObject_EnvoyFilter) isGeneratedObject_Type() {}

func (*GeneratedObject_ServiceEntry) isGeneratedObject_Type() {}

func (*GeneratedObject_VirtualService) isGeneratedObject_Type() {}

func (*GeneratedObject_ConfigMap_) isGeneratedObject_Type() {}

func (*GeneratedObject_XdsConfig) isGeneratedObject_Type() {}

// ObjectMeta is a simplified clone of the Kubernetes ObjectMeta used to represent object metadata
// for Kubernetes objects passed as messages in the NetworkingExtensions API.
type ObjectMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the Kubernetes name of the object
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// the Kubernetes namespace of the object
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// the Kubernetes clusterName of the object (used internally by Gloo Mesh)
	ClusterName string `protobuf:"bytes,3,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	// the Kubernetes labels on the object
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// the Kubernetes annotations on the object
	Annotations map[string]string `protobuf:"bytes,5,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ObjectMeta) Reset() {
	*x = ObjectMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectMeta) ProtoMessage() {}

func (x *ObjectMeta) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectMeta.ProtoReflect.Descriptor instead.
func (*ObjectMeta) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDescGZIP(), []int{7}
}

func (x *ObjectMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ObjectMeta) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ObjectMeta) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *ObjectMeta) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ObjectMeta) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

// request to initiate push notifications
type WatchPushNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WatchPushNotificationsRequest) Reset() {
	*x = WatchPushNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchPushNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchPushNotificationsRequest) ProtoMessage() {}

func (x *WatchPushNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchPushNotificationsRequest.ProtoReflect.Descriptor instead.
func (*WatchPushNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDescGZIP(), []int{8}
}

// triggers a resync of Gloo Mesh objects
type PushNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushNotification) Reset() {
	*x = PushNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushNotification) ProtoMessage() {}

func (x *PushNotification) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushNotification.ProtoReflect.Descriptor instead.
func (*PushNotification) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDescGZIP(), []int{9}
}

type GeneratedObject_ConfigMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data map[string]string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GeneratedObject_ConfigMap) Reset() {
	*x = GeneratedObject_ConfigMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneratedObject_ConfigMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneratedObject_ConfigMap) ProtoMessage() {}

func (x *GeneratedObject_ConfigMap) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneratedObject_ConfigMap.ProtoReflect.Descriptor instead.
func (*GeneratedObject_ConfigMap) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDescGZIP(), []int{6, 0}
}

func (x *GeneratedObject_ConfigMap) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto protoreflect.FileDescriptor

var file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDesc = []byte{
	0x0a, 0x5a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x27, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x1a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d,
	0x65, 0x73, 0x68, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f,
	0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2f, 0x76, 0x31, 0x2f,
	0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x43,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d,
	0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x78, 0x64, 0x73, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2f, 0x78, 0x64, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x33, 0x2f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x26, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x33, 0x2f, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x33, 0x2f, 0x67, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x27, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x33, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x33, 0x2f, 0x73, 0x69, 0x64, 0x65, 0x63, 0x61, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x33, 0x2f, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x28, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x33, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbf, 0x01, 0x0a, 0x15,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65,
	0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x52, 0x0a, 0x07, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x22, 0x7b, 0x0a,
	0x16, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x0f, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x65, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x38, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0e, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x64, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x22, 0x97, 0x02, 0x0a, 0x11, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x12, 0x4b, 0x0a, 0x06, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x68, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x73, 0x12, 0x5e, 0x0a,
	0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x44, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x55, 0x0a,
	0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x37, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x22, 0xee, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x4f, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e,
	0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x46, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xe5, 0x01, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x4f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x04, 0x73, 0x70, 0x65,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x43, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xd9, 0x01,
	0x0a, 0x0a, 0x4d, 0x65, 0x73, 0x68, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x4f, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a,
	0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f,
	0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x68, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4d, 0x65, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9c, 0x06, 0x0a, 0x0f, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x4f, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f,
	0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x57,
	0x0a, 0x10, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x75,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x73, 0x74, 0x69, 0x6f,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x33, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x4b, 0x0a, 0x0c, 0x65, 0x6e, 0x76, 0x6f, 0x79,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x69, 0x73, 0x74, 0x69, 0x6f, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x33, 0x2e, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x4e, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x73,
	0x74, 0x69, 0x6f, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x33, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x54, 0x0a, 0x0f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x69, 0x73, 0x74, 0x69, 0x6f, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x33, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x76, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x63, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d,
	0x61, 0x70, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x12,
	0x56, 0x0a, 0x0a, 0x78, 0x64, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x78, 0x64, 0x73, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x58, 0x64, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x70, 0x65, 0x63, 0x48, 0x00, 0x52, 0x09, 0x78, 0x64,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0xa6, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4d, 0x61, 0x70, 0x12, 0x60, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x70, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x9d, 0x03, 0x0a, 0x0a, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x57, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x66, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c,
	0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x2e,
	0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x39, 0x0a,
	0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x1f, 0x0a, 0x1d, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x50, 0x75, 0x73,
	0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xd3, 0x02,
	0x0a, 0x14, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x98, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x3e,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x9f, 0x01, 0x0a, 0x16, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x75, 0x73, 0x68, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x46, 0x2e, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x75, 0x73, 0x68,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x73,
	0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x50,
	0x75, 0x73, 0x68, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x00, 0x30, 0x01, 0x42, 0x56, 0x5a, 0x54, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d,
	0x65, 0x73, 0x68, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDescOnce sync.Once
	file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDescData = file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDesc
)

func file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDescData)
	})
	return file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDescData
}

var file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_goTypes = []interface{}{
	(*ExtensionPatchRequest)(nil),         // 0: extensions.networking.mesh.gloo.solo.io.ExtensionPatchRequest
	(*ExtensionPatchResponse)(nil),        // 1: extensions.networking.mesh.gloo.solo.io.ExtensionPatchResponse
	(*DiscoverySnapshot)(nil),             // 2: extensions.networking.mesh.gloo.solo.io.DiscoverySnapshot
	(*DestinationObject)(nil),             // 3: extensions.networking.mesh.gloo.solo.io.DestinationObject
	(*WorkloadObject)(nil),                // 4: extensions.networking.mesh.gloo.solo.io.WorkloadObject
	(*MeshObject)(nil),                    // 5: extensions.networking.mesh.gloo.solo.io.MeshObject
	(*GeneratedObject)(nil),               // 6: extensions.networking.mesh.gloo.solo.io.GeneratedObject
	(*ObjectMeta)(nil),                    // 7: extensions.networking.mesh.gloo.solo.io.ObjectMeta
	(*WatchPushNotificationsRequest)(nil), // 8: extensions.networking.mesh.gloo.solo.io.WatchPushNotificationsRequest
	(*PushNotification)(nil),              // 9: extensions.networking.mesh.gloo.solo.io.PushNotification
	(*GeneratedObject_ConfigMap)(nil),     // 10: extensions.networking.mesh.gloo.solo.io.GeneratedObject.ConfigMap
	nil,                                   // 11: extensions.networking.mesh.gloo.solo.io.GeneratedObject.ConfigMap.DataEntry
	nil,                                   // 12: extensions.networking.mesh.gloo.solo.io.ObjectMeta.LabelsEntry
	nil,                                   // 13: extensions.networking.mesh.gloo.solo.io.ObjectMeta.AnnotationsEntry
	(*v1.DestinationSpec)(nil),            // 14: discovery.mesh.gloo.solo.io.DestinationSpec
	(*v1.DestinationStatus)(nil),          // 15: discovery.mesh.gloo.solo.io.DestinationStatus
	(*v1.WorkloadSpec)(nil),               // 16: discovery.mesh.gloo.solo.io.WorkloadSpec
	(*v1.WorkloadStatus)(nil),             // 17: discovery.mesh.gloo.solo.io.WorkloadStatus
	(*v1.MeshSpec)(nil),                   // 18: discovery.mesh.gloo.solo.io.MeshSpec
	(*v1.MeshStatus)(nil),                 // 19: discovery.mesh.gloo.solo.io.MeshStatus
	(*v1alpha3.DestinationRule)(nil),      // 20: istio.networking.v1alpha3.DestinationRule
	(*v1alpha3.EnvoyFilter)(nil),          // 21: istio.networking.v1alpha3.EnvoyFilter
	(*v1alpha3.ServiceEntry)(nil),         // 22: istio.networking.v1alpha3.ServiceEntry
	(*v1alpha3.VirtualService)(nil),       // 23: istio.networking.v1alpha3.VirtualService
	(*v1beta1.XdsConfigSpec)(nil),         // 24: xds.agent.enterprise.mesh.gloo.solo.io.XdsConfigSpec
}
var file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_depIdxs = []int32{
	2,  // 0: extensions.networking.mesh.gloo.solo.io.ExtensionPatchRequest.inputs:type_name -> extensions.networking.mesh.gloo.solo.io.DiscoverySnapshot
	6,  // 1: extensions.networking.mesh.gloo.solo.io.ExtensionPatchRequest.outputs:type_name -> extensions.networking.mesh.gloo.solo.io.GeneratedObject
	6,  // 2: extensions.networking.mesh.gloo.solo.io.ExtensionPatchResponse.patched_outputs:type_name -> extensions.networking.mesh.gloo.solo.io.GeneratedObject
	5,  // 3: extensions.networking.mesh.gloo.solo.io.DiscoverySnapshot.meshes:type_name -> extensions.networking.mesh.gloo.solo.io.MeshObject
	3,  // 4: extensions.networking.mesh.gloo.solo.io.DiscoverySnapshot.destinations:type_name -> extensions.networking.mesh.gloo.solo.io.DestinationObject
	4,  // 5: extensions.networking.mesh.gloo.solo.io.DiscoverySnapshot.workloads:type_name -> extensions.networking.mesh.gloo.solo.io.WorkloadObject
	7,  // 6: extensions.networking.mesh.gloo.solo.io.DestinationObject.metadata:type_name -> extensions.networking.mesh.gloo.solo.io.ObjectMeta
	14, // 7: extensions.networking.mesh.gloo.solo.io.DestinationObject.spec:type_name -> discovery.mesh.gloo.solo.io.DestinationSpec
	15, // 8: extensions.networking.mesh.gloo.solo.io.DestinationObject.status:type_name -> discovery.mesh.gloo.solo.io.DestinationStatus
	7,  // 9: extensions.networking.mesh.gloo.solo.io.WorkloadObject.metadata:type_name -> extensions.networking.mesh.gloo.solo.io.ObjectMeta
	16, // 10: extensions.networking.mesh.gloo.solo.io.WorkloadObject.spec:type_name -> discovery.mesh.gloo.solo.io.WorkloadSpec
	17, // 11: extensions.networking.mesh.gloo.solo.io.WorkloadObject.status:type_name -> discovery.mesh.gloo.solo.io.WorkloadStatus
	7,  // 12: extensions.networking.mesh.gloo.solo.io.MeshObject.metadata:type_name -> extensions.networking.mesh.gloo.solo.io.ObjectMeta
	18, // 13: extensions.networking.mesh.gloo.solo.io.MeshObject.spec:type_name -> discovery.mesh.gloo.solo.io.MeshSpec
	19, // 14: extensions.networking.mesh.gloo.solo.io.MeshObject.status:type_name -> discovery.mesh.gloo.solo.io.MeshStatus
	7,  // 15: extensions.networking.mesh.gloo.solo.io.GeneratedObject.metadata:type_name -> extensions.networking.mesh.gloo.solo.io.ObjectMeta
	20, // 16: extensions.networking.mesh.gloo.solo.io.GeneratedObject.destination_rule:type_name -> istio.networking.v1alpha3.DestinationRule
	21, // 17: extensions.networking.mesh.gloo.solo.io.GeneratedObject.envoy_filter:type_name -> istio.networking.v1alpha3.EnvoyFilter
	22, // 18: extensions.networking.mesh.gloo.solo.io.GeneratedObject.service_entry:type_name -> istio.networking.v1alpha3.ServiceEntry
	23, // 19: extensions.networking.mesh.gloo.solo.io.GeneratedObject.virtual_service:type_name -> istio.networking.v1alpha3.VirtualService
	10, // 20: extensions.networking.mesh.gloo.solo.io.GeneratedObject.config_map:type_name -> extensions.networking.mesh.gloo.solo.io.GeneratedObject.ConfigMap
	24, // 21: extensions.networking.mesh.gloo.solo.io.GeneratedObject.xds_config:type_name -> xds.agent.enterprise.mesh.gloo.solo.io.XdsConfigSpec
	12, // 22: extensions.networking.mesh.gloo.solo.io.ObjectMeta.labels:type_name -> extensions.networking.mesh.gloo.solo.io.ObjectMeta.LabelsEntry
	13, // 23: extensions.networking.mesh.gloo.solo.io.ObjectMeta.annotations:type_name -> extensions.networking.mesh.gloo.solo.io.ObjectMeta.AnnotationsEntry
	11, // 24: extensions.networking.mesh.gloo.solo.io.GeneratedObject.ConfigMap.data:type_name -> extensions.networking.mesh.gloo.solo.io.GeneratedObject.ConfigMap.DataEntry
	0,  // 25: extensions.networking.mesh.gloo.solo.io.NetworkingExtensions.GetExtensionPatches:input_type -> extensions.networking.mesh.gloo.solo.io.ExtensionPatchRequest
	8,  // 26: extensions.networking.mesh.gloo.solo.io.NetworkingExtensions.WatchPushNotifications:input_type -> extensions.networking.mesh.gloo.solo.io.WatchPushNotificationsRequest
	1,  // 27: extensions.networking.mesh.gloo.solo.io.NetworkingExtensions.GetExtensionPatches:output_type -> extensions.networking.mesh.gloo.solo.io.ExtensionPatchResponse
	9,  // 28: extensions.networking.mesh.gloo.solo.io.NetworkingExtensions.WatchPushNotifications:output_type -> extensions.networking.mesh.gloo.solo.io.PushNotification
	27, // [27:29] is the sub-list for method output_type
	25, // [25:27] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() {
	file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_init()
}
func file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_init() {
	if File_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtensionPatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtensionPatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoverySnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestinationObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkloadObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeshObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneratedObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ObjectMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchPushNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneratedObject_ConfigMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*GeneratedObject_DestinationRule)(nil),
		(*GeneratedObject_EnvoyFilter)(nil),
		(*GeneratedObject_ServiceEntry)(nil),
		(*GeneratedObject_VirtualService)(nil),
		(*GeneratedObject_ConfigMap_)(nil),
		(*GeneratedObject_XdsConfig)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_depIdxs,
		MessageInfos:      file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto = out.File
	file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_rawDesc = nil
	file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_goTypes = nil
	file_github_com_solo_io_gloo_mesh_api_networking_extensions_v1beta1_networking_extensions_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NetworkingExtensionsClient is the client API for NetworkingExtensions service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NetworkingExtensionsClient interface {
	// GetExtensionPatches fetches a set of patches to the output configuration from the Extensions server.
	// The current discovery snapshot and translated outputs are provided in the ExtensionPatchRequest
	GetExtensionPatches(ctx context.Context, in *ExtensionPatchRequest, opts ...grpc.CallOption) (*ExtensionPatchResponse, error)
	// WatchPushNotifications initiates a streaming connection which allows the NetworkingExtensions server
	// to push notifications to Gloo Mesh telling it to resync its configuration.
	// This allows a NetworkingExtensions server to trigger Gloo Mesh to resync its state for
	// events triggered by objects not watched by Gloo Mesh.
	WatchPushNotifications(ctx context.Context, in *WatchPushNotificationsRequest, opts ...grpc.CallOption) (NetworkingExtensions_WatchPushNotificationsClient, error)
}

type networkingExtensionsClient struct {
	cc grpc.ClientConnInterface
}

func NewNetworkingExtensionsClient(cc grpc.ClientConnInterface) NetworkingExtensionsClient {
	return &networkingExtensionsClient{cc}
}

func (c *networkingExtensionsClient) GetExtensionPatches(ctx context.Context, in *ExtensionPatchRequest, opts ...grpc.CallOption) (*ExtensionPatchResponse, error) {
	out := new(ExtensionPatchResponse)
	err := c.cc.Invoke(ctx, "/extensions.networking.mesh.gloo.solo.io.NetworkingExtensions/GetExtensionPatches", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *networkingExtensionsClient) WatchPushNotifications(ctx context.Context, in *WatchPushNotificationsRequest, opts ...grpc.CallOption) (NetworkingExtensions_WatchPushNotificationsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NetworkingExtensions_serviceDesc.Streams[0], "/extensions.networking.mesh.gloo.solo.io.NetworkingExtensions/WatchPushNotifications", opts...)
	if err != nil {
		return nil, err
	}
	x := &networkingExtensionsWatchPushNotificationsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NetworkingExtensions_WatchPushNotificationsClient interface {
	Recv() (*PushNotification, error)
	grpc.ClientStream
}

type networkingExtensionsWatchPushNotificationsClient struct {
	grpc.ClientStream
}

func (x *networkingExtensionsWatchPushNotificationsClient) Recv() (*PushNotification, error) {
	m := new(PushNotification)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NetworkingExtensionsServer is the server API for NetworkingExtensions service.
type NetworkingExtensionsServer interface {
	// GetExtensionPatches fetches a set of patches to the output configuration from the Extensions server.
	// The current discovery snapshot and translated outputs are provided in the ExtensionPatchRequest
	GetExtensionPatches(context.Context, *ExtensionPatchRequest) (*ExtensionPatchResponse, error)
	// WatchPushNotifications initiates a streaming connection which allows the NetworkingExtensions server
	// to push notifications to Gloo Mesh telling it to resync its configuration.
	// This allows a NetworkingExtensions server to trigger Gloo Mesh to resync its state for
	// events triggered by objects not watched by Gloo Mesh.
	WatchPushNotifications(*WatchPushNotificationsRequest, NetworkingExtensions_WatchPushNotificationsServer) error
}

// UnimplementedNetworkingExtensionsServer can be embedded to have forward compatible implementations.
type UnimplementedNetworkingExtensionsServer struct {
}

func (*UnimplementedNetworkingExtensionsServer) GetExtensionPatches(context.Context, *ExtensionPatchRequest) (*ExtensionPatchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetExtensionPatches not implemented")
}
func (*UnimplementedNetworkingExtensionsServer) WatchPushNotifications(*WatchPushNotificationsRequest, NetworkingExtensions_WatchPushNotificationsServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchPushNotifications not implemented")
}

func RegisterNetworkingExtensionsServer(s *grpc.Server, srv NetworkingExtensionsServer) {
	s.RegisterService(&_NetworkingExtensions_serviceDesc, srv)
}

func _NetworkingExtensions_GetExtensionPatches_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExtensionPatchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetworkingExtensionsServer).GetExtensionPatches(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/extensions.networking.mesh.gloo.solo.io.NetworkingExtensions/GetExtensionPatches",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetworkingExtensionsServer).GetExtensionPatches(ctx, req.(*ExtensionPatchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NetworkingExtensions_WatchPushNotifications_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchPushNotificationsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NetworkingExtensionsServer).WatchPushNotifications(m, &networkingExtensionsWatchPushNotificationsServer{stream})
}

type NetworkingExtensions_WatchPushNotificationsServer interface {
	Send(*PushNotification) error
	grpc.ServerStream
}

type networkingExtensionsWatchPushNotificationsServer struct {
	grpc.ServerStream
}

func (x *networkingExtensionsWatchPushNotificationsServer) Send(m *PushNotification) error {
	return x.ServerStream.SendMsg(m)
}

var _NetworkingExtensions_serviceDesc = grpc.ServiceDesc{
	ServiceName: "extensions.networking.mesh.gloo.solo.io.NetworkingExtensions",
	HandlerType: (*NetworkingExtensionsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetExtensionPatches",
			Handler:    _NetworkingExtensions_GetExtensionPatches_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchPushNotifications",
			Handler:       _NetworkingExtensions_WatchPushNotifications_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "github.com/solo-io/gloo-mesh/api/networking/extensions/v1beta1/networking_extensions.proto",
}
