// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/solo-io/gloo-mesh/api/networking/v1alpha2/validation_state.proto

package v1alpha2

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "github.com/solo-io/protoc-gen-ext/extproto"
	_ "github.com/solo-io/skv2/pkg/api/core.skv2.solo.io/v1"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// State of a Policy resource reflected in the status by Gloo Mesh while processing a resource.
type ApprovalState int32

const (
	// Resources are in a Pending state before they have been processed by Gloo Mesh.
	ApprovalState_PENDING ApprovalState = 0
	// Resources are in a Accepted state when they are valid and have been applied successfully to
	// the Gloo Mesh configuration.
	ApprovalState_ACCEPTED ApprovalState = 1
	// Resources are in an Invalid state when they contain incorrect configuration parameters,
	// such as missing required values or invalid resource references.
	// An invalid state can also result when a resource's configuration is valid
	// but conflicts with another resource which was accepted in an earlier point in time.
	ApprovalState_INVALID ApprovalState = 2
	// Resources are in a Failed state when they contain correct configuration parameters,
	// but the server encountered an error trying to synchronize the system to
	// the desired state.
	ApprovalState_FAILED ApprovalState = 3
)

var ApprovalState_name = map[int32]string{
	0: "PENDING",
	1: "ACCEPTED",
	2: "INVALID",
	3: "FAILED",
}

var ApprovalState_value = map[string]int32{
	"PENDING":  0,
	"ACCEPTED": 1,
	"INVALID":  2,
	"FAILED":   3,
}

func (x ApprovalState) String() string {
	return proto.EnumName(ApprovalState_name, int32(x))
}

func (ApprovalState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a12a8e2f43a030bc, []int{0}
}

// The approval status of a policy that has been applied to a discovery resource.
type ApprovalStatus struct {
	// AcceptanceOrder represents the order in which the Policy
	// was accepted and applied to a discovery resource. The first accepted policy
	// will have an acceptance_order of 0, the second 1, etc.
	// When conflicts are detected in the system,
	// the Policy with the lowest acceptance_order
	// will be chosen (and all other conflicting policies will be rejected).
	AcceptanceOrder uint32 `protobuf:"varint,1,opt,name=acceptance_order,json=acceptanceOrder,proto3" json:"acceptance_order,omitempty"`
	// The result of attempting to apply the policy to the discovery resource,
	// reported by the Policy controller (mesh-networking).
	State ApprovalState `protobuf:"varint,2,opt,name=state,proto3,enum=networking.mesh.gloo.solo.io.ApprovalState" json:"state,omitempty"`
	// Any errors observed which prevented the resource from being Accepted.
	Errors               []string `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApprovalStatus) Reset()         { *m = ApprovalStatus{} }
func (m *ApprovalStatus) String() string { return proto.CompactTextString(m) }
func (*ApprovalStatus) ProtoMessage()    {}
func (*ApprovalStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_a12a8e2f43a030bc, []int{0}
}

func (m *ApprovalStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApprovalStatus.Unmarshal(m, b)
}
func (m *ApprovalStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApprovalStatus.Marshal(b, m, deterministic)
}
func (m *ApprovalStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApprovalStatus.Merge(m, src)
}
func (m *ApprovalStatus) XXX_Size() int {
	return xxx_messageInfo_ApprovalStatus.Size(m)
}
func (m *ApprovalStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ApprovalStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ApprovalStatus proto.InternalMessageInfo

func (m *ApprovalStatus) GetAcceptanceOrder() uint32 {
	if m != nil {
		return m.AcceptanceOrder
	}
	return 0
}

func (m *ApprovalStatus) GetState() ApprovalState {
	if m != nil {
		return m.State
	}
	return ApprovalState_PENDING
}

func (m *ApprovalStatus) GetErrors() []string {
	if m != nil {
		return m.Errors
	}
	return nil
}

func init() {
	proto.RegisterEnum("networking.mesh.gloo.solo.io.ApprovalState", ApprovalState_name, ApprovalState_value)
	proto.RegisterType((*ApprovalStatus)(nil), "networking.mesh.gloo.solo.io.ApprovalStatus")
}

func init() {
	proto.RegisterFile("github.com/solo-io/gloo-mesh/api/networking/v1alpha2/validation_state.proto", fileDescriptor_a12a8e2f43a030bc)
}

var fileDescriptor_a12a8e2f43a030bc = []byte{
	// 318 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0x4d, 0x4f, 0xc2, 0x30,
	0x18, 0xb6, 0xa0, 0xa8, 0x55, 0x70, 0xe9, 0xc1, 0x10, 0xe2, 0x81, 0x78, 0x42, 0x0d, 0x6d, 0xc0,
	0x5f, 0x30, 0xd9, 0x34, 0x53, 0x82, 0x04, 0x8d, 0x07, 0x2f, 0xa4, 0x8c, 0x66, 0x34, 0x8c, 0xbd,
	0x4d, 0x5b, 0x26, 0xbf, 0xc4, 0xdf, 0xe3, 0x9f, 0xf2, 0x6e, 0xb6, 0x19, 0xf1, 0x2b, 0x9c, 0xda,
	0x3e, 0x7d, 0x9f, 0x8f, 0xbc, 0x0f, 0xbe, 0x8b, 0xa4, 0x9d, 0x2d, 0x27, 0x34, 0x84, 0x05, 0x33,
	0x10, 0x43, 0x5b, 0x02, 0x8b, 0x62, 0x80, 0xf6, 0x42, 0x98, 0x19, 0xe3, 0x4a, 0xb2, 0x44, 0xd8,
	0x17, 0xd0, 0x73, 0x99, 0x44, 0x2c, 0xed, 0xf0, 0x58, 0xcd, 0x78, 0x97, 0xa5, 0x3c, 0x96, 0x53,
	0x6e, 0x25, 0x24, 0x63, 0x63, 0xb9, 0x15, 0x54, 0x69, 0xb0, 0x40, 0x4e, 0xd6, 0xb3, 0x34, 0xe3,
	0xd3, 0x4c, 0x89, 0x66, 0xb2, 0x54, 0x42, 0x83, 0xfe, 0x63, 0x65, 0xe6, 0x69, 0x37, 0x77, 0x09,
	0x41, 0x0b, 0x96, 0x76, 0xf2, 0xb3, 0x50, 0x6b, 0x10, 0xb1, 0xb2, 0xf9, 0x8d, 0x89, 0x95, 0x2d,
	0xb0, 0xd3, 0x57, 0x84, 0x6b, 0xae, 0x52, 0x1a, 0x52, 0x1e, 0x3f, 0x58, 0x6e, 0x97, 0x86, 0x9c,
	0x61, 0x87, 0x87, 0xa1, 0x50, 0x96, 0x27, 0xa1, 0x18, 0x83, 0x9e, 0x0a, 0x5d, 0x47, 0x4d, 0xd4,
	0xaa, 0x8e, 0x8e, 0xd6, 0xf8, 0x7d, 0x06, 0x13, 0x17, 0xef, 0xe4, 0x71, 0xeb, 0xa5, 0x26, 0x6a,
	0xd5, 0xba, 0x17, 0x74, 0x53, 0x5e, 0xfa, 0xdd, 0x47, 0x8c, 0x0a, 0x26, 0x39, 0xc6, 0x15, 0xa1,
	0x35, 0x68, 0x53, 0x2f, 0x37, 0xcb, 0xad, 0xfd, 0xd1, 0xe7, 0xeb, 0xbc, 0x87, 0xab, 0x3f, 0xe6,
	0xc9, 0x01, 0xde, 0x1d, 0xfa, 0x03, 0x2f, 0x18, 0xdc, 0x38, 0x5b, 0xe4, 0x10, 0xef, 0xb9, 0xbd,
	0x9e, 0x3f, 0x7c, 0xf4, 0x3d, 0x07, 0x65, 0x5f, 0xc1, 0xe0, 0xc9, 0xed, 0x07, 0x9e, 0x53, 0x22,
	0x18, 0x57, 0xae, 0xdd, 0xa0, 0xef, 0x7b, 0x4e, 0xf9, 0x6a, 0xf8, 0xf6, 0xbe, 0x8d, 0x9e, 0x6f,
	0x37, 0x56, 0xa2, 0xe6, 0xd1, 0xaf, 0x5a, 0xfe, 0x46, 0xff, 0x2a, 0x6a, 0x52, 0xc9, 0xd7, 0x76,
	0xf9, 0x11, 0x00, 0x00, 0xff, 0xff, 0x50, 0x0f, 0xb3, 0x25, 0xe7, 0x01, 0x00, 0x00,
}
