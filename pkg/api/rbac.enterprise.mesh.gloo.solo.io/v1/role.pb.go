// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: github.com/solo-io/gloo-mesh/api/enterprise/rbac/v1/role.proto

package v1

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	v11 "github.com/solo-io/gloo-mesh/pkg/api/common.mesh.gloo.solo.io/v1"
	v1beta1 "github.com/solo-io/gloo-mesh/pkg/api/networking.enterprise.mesh.gloo.solo.io/v1beta1"
	v1 "github.com/solo-io/skv2/pkg/api/core.skv2.solo.io/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Enums representing fields on the TrafficPolicy CRD.
type RoleSpec_TrafficPolicyScope_TrafficPolicyActions int32

const (
	RoleSpec_TrafficPolicyScope_UNKNOWN_TRAFFIC_POLICY_ACTION RoleSpec_TrafficPolicyScope_TrafficPolicyActions = 0
	RoleSpec_TrafficPolicyScope_ALL                           RoleSpec_TrafficPolicyScope_TrafficPolicyActions = 1
	RoleSpec_TrafficPolicyScope_TRAFFIC_SHIFT                 RoleSpec_TrafficPolicyScope_TrafficPolicyActions = 2
	RoleSpec_TrafficPolicyScope_FAULT_INJECTION               RoleSpec_TrafficPolicyScope_TrafficPolicyActions = 3
	RoleSpec_TrafficPolicyScope_REQUEST_TIMEOUT               RoleSpec_TrafficPolicyScope_TrafficPolicyActions = 4
	RoleSpec_TrafficPolicyScope_RETRIES                       RoleSpec_TrafficPolicyScope_TrafficPolicyActions = 5
	RoleSpec_TrafficPolicyScope_CORS_POLICY                   RoleSpec_TrafficPolicyScope_TrafficPolicyActions = 6
	RoleSpec_TrafficPolicyScope_MIRROR                        RoleSpec_TrafficPolicyScope_TrafficPolicyActions = 7
	RoleSpec_TrafficPolicyScope_HEADER_MANIPULATION           RoleSpec_TrafficPolicyScope_TrafficPolicyActions = 8
	RoleSpec_TrafficPolicyScope_OUTLIER_DETECTION             RoleSpec_TrafficPolicyScope_TrafficPolicyActions = 9
	RoleSpec_TrafficPolicyScope_MTLS_CONFIG                   RoleSpec_TrafficPolicyScope_TrafficPolicyActions = 10
)

// Enum value maps for RoleSpec_TrafficPolicyScope_TrafficPolicyActions.
var (
	RoleSpec_TrafficPolicyScope_TrafficPolicyActions_name = map[int32]string{
		0:  "UNKNOWN_TRAFFIC_POLICY_ACTION",
		1:  "ALL",
		2:  "TRAFFIC_SHIFT",
		3:  "FAULT_INJECTION",
		4:  "REQUEST_TIMEOUT",
		5:  "RETRIES",
		6:  "CORS_POLICY",
		7:  "MIRROR",
		8:  "HEADER_MANIPULATION",
		9:  "OUTLIER_DETECTION",
		10: "MTLS_CONFIG",
	}
	RoleSpec_TrafficPolicyScope_TrafficPolicyActions_value = map[string]int32{
		"UNKNOWN_TRAFFIC_POLICY_ACTION": 0,
		"ALL":                           1,
		"TRAFFIC_SHIFT":                 2,
		"FAULT_INJECTION":               3,
		"REQUEST_TIMEOUT":               4,
		"RETRIES":                       5,
		"CORS_POLICY":                   6,
		"MIRROR":                        7,
		"HEADER_MANIPULATION":           8,
		"OUTLIER_DETECTION":             9,
		"MTLS_CONFIG":                   10,
	}
)

func (x RoleSpec_TrafficPolicyScope_TrafficPolicyActions) Enum() *RoleSpec_TrafficPolicyScope_TrafficPolicyActions {
	p := new(RoleSpec_TrafficPolicyScope_TrafficPolicyActions)
	*p = x
	return p
}

func (x RoleSpec_TrafficPolicyScope_TrafficPolicyActions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoleSpec_TrafficPolicyScope_TrafficPolicyActions) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_enumTypes[0].Descriptor()
}

func (RoleSpec_TrafficPolicyScope_TrafficPolicyActions) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_enumTypes[0]
}

func (x RoleSpec_TrafficPolicyScope_TrafficPolicyActions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoleSpec_TrafficPolicyScope_TrafficPolicyActions.Descriptor instead.
func (RoleSpec_TrafficPolicyScope_TrafficPolicyActions) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDescGZIP(), []int{0, 0, 0}
}

// Enums representing fields on the VirtualMesh CRD.
type RoleSpec_VirtualMeshScope_VirtualMeshActions int32

const (
	RoleSpec_VirtualMeshScope_UNKNOWN_VIRTUAL_MESH_ACTION RoleSpec_VirtualMeshScope_VirtualMeshActions = 0
	RoleSpec_VirtualMeshScope_ALL                         RoleSpec_VirtualMeshScope_VirtualMeshActions = 1
	RoleSpec_VirtualMeshScope_MTLS_CONFIG                 RoleSpec_VirtualMeshScope_VirtualMeshActions = 2
	RoleSpec_VirtualMeshScope_FEDERATION                  RoleSpec_VirtualMeshScope_VirtualMeshActions = 3
	RoleSpec_VirtualMeshScope_GLOBAL_ACCESS_POLICY        RoleSpec_VirtualMeshScope_VirtualMeshActions = 4
)

// Enum value maps for RoleSpec_VirtualMeshScope_VirtualMeshActions.
var (
	RoleSpec_VirtualMeshScope_VirtualMeshActions_name = map[int32]string{
		0: "UNKNOWN_VIRTUAL_MESH_ACTION",
		1: "ALL",
		2: "MTLS_CONFIG",
		3: "FEDERATION",
		4: "GLOBAL_ACCESS_POLICY",
	}
	RoleSpec_VirtualMeshScope_VirtualMeshActions_value = map[string]int32{
		"UNKNOWN_VIRTUAL_MESH_ACTION": 0,
		"ALL":                         1,
		"MTLS_CONFIG":                 2,
		"FEDERATION":                  3,
		"GLOBAL_ACCESS_POLICY":        4,
	}
)

func (x RoleSpec_VirtualMeshScope_VirtualMeshActions) Enum() *RoleSpec_VirtualMeshScope_VirtualMeshActions {
	p := new(RoleSpec_VirtualMeshScope_VirtualMeshActions)
	*p = x
	return p
}

func (x RoleSpec_VirtualMeshScope_VirtualMeshActions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoleSpec_VirtualMeshScope_VirtualMeshActions) Descriptor() protoreflect.EnumDescriptor {
	return file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_enumTypes[1].Descriptor()
}

func (RoleSpec_VirtualMeshScope_VirtualMeshActions) Type() protoreflect.EnumType {
	return &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_enumTypes[1]
}

func (x RoleSpec_VirtualMeshScope_VirtualMeshActions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoleSpec_VirtualMeshScope_VirtualMeshActions.Descriptor instead.
func (RoleSpec_VirtualMeshScope_VirtualMeshActions) EnumDescriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDescGZIP(), []int{0, 1, 0}
}

//
//A role represents a set of permissions for creating, updating, and deleting Gloo Mesh configuration objects.
//A role consists of a set of scopes for each policy type. Depending on the policy type,
//the permission granularity is defined at the field level or at the object level.
type RoleSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A set of TrafficPolicy configuration permissions. Permission granularity is defined at the field level.
	TrafficPolicyScopes []*RoleSpec_TrafficPolicyScope `protobuf:"bytes,1,rep,name=traffic_policy_scopes,json=trafficPolicyScopes,proto3" json:"traffic_policy_scopes,omitempty"`
	// A set of VirtualMesh configuration permissions. Permission granularity is defined at the field level.
	VirtualMeshScopes []*RoleSpec_VirtualMeshScope `protobuf:"bytes,2,rep,name=virtual_mesh_scopes,json=virtualMeshScopes,proto3" json:"virtual_mesh_scopes,omitempty"`
	// A set of AccessPolicy configuration permissions. Permission granularity is defined at the object level.
	AccessPolicyScopes []*RoleSpec_AccessPolicyScope `protobuf:"bytes,3,rep,name=access_policy_scopes,json=accessPolicyScopes,proto3" json:"access_policy_scopes,omitempty"`
	// A set of VirtualDestination configuration permissions. Permission granularity is defined at the object level.
	VirtualDestinationScopes []*RoleSpec_VirtualDestinationScope `protobuf:"bytes,4,rep,name=virtual_destination_scopes,json=virtualDestinationScopes,proto3" json:"virtual_destination_scopes,omitempty"`
	// A set of WasmDeployment configuration permissions. Permission granularity is defined at the object level.
	WasmDeploymentScopes []*RoleSpec_WasmDeploymentScope `protobuf:"bytes,5,rep,name=wasm_deployment_scopes,json=wasmDeploymentScopes,proto3" json:"wasm_deployment_scopes,omitempty"`
	// A set of AccessLogRecord configuration permissions. Permission granularity is defined at the object level.
	AccessLogRecordScopes []*RoleSpec_AccessLogRecordScope `protobuf:"bytes,6,rep,name=access_log_record_scopes,json=accessLogRecordScopes,proto3" json:"access_log_record_scopes,omitempty"`
}

func (x *RoleSpec) Reset() {
	*x = RoleSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleSpec) ProtoMessage() {}

func (x *RoleSpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleSpec.ProtoReflect.Descriptor instead.
func (*RoleSpec) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDescGZIP(), []int{0}
}

func (x *RoleSpec) GetTrafficPolicyScopes() []*RoleSpec_TrafficPolicyScope {
	if x != nil {
		return x.TrafficPolicyScopes
	}
	return nil
}

func (x *RoleSpec) GetVirtualMeshScopes() []*RoleSpec_VirtualMeshScope {
	if x != nil {
		return x.VirtualMeshScopes
	}
	return nil
}

func (x *RoleSpec) GetAccessPolicyScopes() []*RoleSpec_AccessPolicyScope {
	if x != nil {
		return x.AccessPolicyScopes
	}
	return nil
}

func (x *RoleSpec) GetVirtualDestinationScopes() []*RoleSpec_VirtualDestinationScope {
	if x != nil {
		return x.VirtualDestinationScopes
	}
	return nil
}

func (x *RoleSpec) GetWasmDeploymentScopes() []*RoleSpec_WasmDeploymentScope {
	if x != nil {
		return x.WasmDeploymentScopes
	}
	return nil
}

func (x *RoleSpec) GetAccessLogRecordScopes() []*RoleSpec_AccessLogRecordScope {
	if x != nil {
		return x.AccessLogRecordScopes
	}
	return nil
}

type RoleStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The observed generation of the Role.
	// When this matches the Role's `metadata.generation` it indicates that Gloo Mesh
	// has processed the latest version of the Role.
	ObservedGeneration int64 `protobuf:"varint,1,opt,name=observed_generation,json=observedGeneration,proto3" json:"observed_generation,omitempty"`
}

func (x *RoleStatus) Reset() {
	*x = RoleStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleStatus) ProtoMessage() {}

func (x *RoleStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleStatus.ProtoReflect.Descriptor instead.
func (*RoleStatus) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDescGZIP(), []int{1}
}

func (x *RoleStatus) GetObservedGeneration() int64 {
	if x != nil {
		return x.ObservedGeneration
	}
	return 0
}

type RoleBindingSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specify by reference the Kubernetes Users or Groups the Role should apply to.
	Subjects []*v1.TypedObjectRef `protobuf:"bytes,1,rep,name=subjects,proto3" json:"subjects,omitempty"`
	// Specify by reference the Gloo Mesh Role to bind.
	RoleRef *v1.ObjectRef `protobuf:"bytes,2,opt,name=role_ref,json=roleRef,proto3" json:"role_ref,omitempty"`
}

func (x *RoleBindingSpec) Reset() {
	*x = RoleBindingSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleBindingSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleBindingSpec) ProtoMessage() {}

func (x *RoleBindingSpec) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleBindingSpec.ProtoReflect.Descriptor instead.
func (*RoleBindingSpec) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDescGZIP(), []int{2}
}

func (x *RoleBindingSpec) GetSubjects() []*v1.TypedObjectRef {
	if x != nil {
		return x.Subjects
	}
	return nil
}

func (x *RoleBindingSpec) GetRoleRef() *v1.ObjectRef {
	if x != nil {
		return x.RoleRef
	}
	return nil
}

type RoleBindingStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RoleBindingStatus) Reset() {
	*x = RoleBindingStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleBindingStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleBindingStatus) ProtoMessage() {}

func (x *RoleBindingStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleBindingStatus.ProtoReflect.Descriptor instead.
func (*RoleBindingStatus) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDescGZIP(), []int{3}
}

// Represents permissions for configuring TrafficPolicies.
type RoleSpec_TrafficPolicyScope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of permitted TrafficPolicy configuration actions.
	TrafficPolicyActions []RoleSpec_TrafficPolicyScope_TrafficPolicyActions `protobuf:"varint,1,rep,packed,name=traffic_policy_actions,json=trafficPolicyActions,proto3,enum=rbac.enterprise.mesh.gloo.solo.io.RoleSpec_TrafficPolicyScope_TrafficPolicyActions" json:"traffic_policy_actions,omitempty"`
	// A list of permitted Destination selectors.
	DestinationSelectors []*v11.DestinationSelector `protobuf:"bytes,2,rep,name=destination_selectors,json=destinationSelectors,proto3" json:"destination_selectors,omitempty"`
	// A list of permitted Workload selectors.
	WorkloadSelectors []*v11.WorkloadSelector `protobuf:"bytes,3,rep,name=workload_selectors,json=workloadSelectors,proto3" json:"workload_selectors,omitempty"`
}

func (x *RoleSpec_TrafficPolicyScope) Reset() {
	*x = RoleSpec_TrafficPolicyScope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleSpec_TrafficPolicyScope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleSpec_TrafficPolicyScope) ProtoMessage() {}

func (x *RoleSpec_TrafficPolicyScope) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleSpec_TrafficPolicyScope.ProtoReflect.Descriptor instead.
func (*RoleSpec_TrafficPolicyScope) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDescGZIP(), []int{0, 0}
}

func (x *RoleSpec_TrafficPolicyScope) GetTrafficPolicyActions() []RoleSpec_TrafficPolicyScope_TrafficPolicyActions {
	if x != nil {
		return x.TrafficPolicyActions
	}
	return nil
}

func (x *RoleSpec_TrafficPolicyScope) GetDestinationSelectors() []*v11.DestinationSelector {
	if x != nil {
		return x.DestinationSelectors
	}
	return nil
}

func (x *RoleSpec_TrafficPolicyScope) GetWorkloadSelectors() []*v11.WorkloadSelector {
	if x != nil {
		return x.WorkloadSelectors
	}
	return nil
}

// Represents permissions for configuring VirtualMeshes.
type RoleSpec_VirtualMeshScope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of permitted VirtualMesh configuration actions.
	VirtualMeshActions []RoleSpec_VirtualMeshScope_VirtualMeshActions `protobuf:"varint,1,rep,packed,name=virtual_mesh_actions,json=virtualMeshActions,proto3,enum=rbac.enterprise.mesh.gloo.solo.io.RoleSpec_VirtualMeshScope_VirtualMeshActions" json:"virtual_mesh_actions,omitempty"`
	// A list of permitted mesh references.
	MeshRefs []*v1.ObjectRef `protobuf:"bytes,2,rep,name=mesh_refs,json=meshRefs,proto3" json:"mesh_refs,omitempty"`
}

func (x *RoleSpec_VirtualMeshScope) Reset() {
	*x = RoleSpec_VirtualMeshScope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleSpec_VirtualMeshScope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleSpec_VirtualMeshScope) ProtoMessage() {}

func (x *RoleSpec_VirtualMeshScope) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleSpec_VirtualMeshScope.ProtoReflect.Descriptor instead.
func (*RoleSpec_VirtualMeshScope) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDescGZIP(), []int{0, 1}
}

func (x *RoleSpec_VirtualMeshScope) GetVirtualMeshActions() []RoleSpec_VirtualMeshScope_VirtualMeshActions {
	if x != nil {
		return x.VirtualMeshActions
	}
	return nil
}

func (x *RoleSpec_VirtualMeshScope) GetMeshRefs() []*v1.ObjectRef {
	if x != nil {
		return x.MeshRefs
	}
	return nil
}

// Represents permissions for configuring AccessPolicies.
type RoleSpec_AccessPolicyScope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of permitted identity selectors.
	IdentitySelectors []*v11.IdentitySelector `protobuf:"bytes,1,rep,name=identity_selectors,json=identitySelectors,proto3" json:"identity_selectors,omitempty"`
	// A list of permitted Destination selectors.
	DestinationSelectors []*v11.DestinationSelector `protobuf:"bytes,2,rep,name=destination_selectors,json=destinationSelectors,proto3" json:"destination_selectors,omitempty"`
}

func (x *RoleSpec_AccessPolicyScope) Reset() {
	*x = RoleSpec_AccessPolicyScope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleSpec_AccessPolicyScope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleSpec_AccessPolicyScope) ProtoMessage() {}

func (x *RoleSpec_AccessPolicyScope) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleSpec_AccessPolicyScope.ProtoReflect.Descriptor instead.
func (*RoleSpec_AccessPolicyScope) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDescGZIP(), []int{0, 2}
}

func (x *RoleSpec_AccessPolicyScope) GetIdentitySelectors() []*v11.IdentitySelector {
	if x != nil {
		return x.IdentitySelectors
	}
	return nil
}

func (x *RoleSpec_AccessPolicyScope) GetDestinationSelectors() []*v11.DestinationSelector {
	if x != nil {
		return x.DestinationSelectors
	}
	return nil
}

// Represents permissions for configuring VirtualDestinations.
type RoleSpec_VirtualDestinationScope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of permitted virtual mesh references.
	VirtualMeshRefs []*v1.ObjectRef `protobuf:"bytes,1,rep,name=virtual_mesh_refs,json=virtualMeshRefs,proto3" json:"virtual_mesh_refs,omitempty"`
	// A list of permitted mesh references.
	MeshRefs []*v1.ObjectRef `protobuf:"bytes,2,rep,name=mesh_refs,json=meshRefs,proto3" json:"mesh_refs,omitempty"`
	// A list of permitted backing service selectors.
	DestinationSelectors []*v11.DestinationSelector `protobuf:"bytes,3,rep,name=destination_selectors,json=destinationSelectors,proto3" json:"destination_selectors,omitempty"`
	// A list of permitted backing Destinations.
	Destinations []*v1beta1.BackingDestination `protobuf:"bytes,4,rep,name=destinations,proto3" json:"destinations,omitempty"`
}

func (x *RoleSpec_VirtualDestinationScope) Reset() {
	*x = RoleSpec_VirtualDestinationScope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleSpec_VirtualDestinationScope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleSpec_VirtualDestinationScope) ProtoMessage() {}

func (x *RoleSpec_VirtualDestinationScope) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleSpec_VirtualDestinationScope.ProtoReflect.Descriptor instead.
func (*RoleSpec_VirtualDestinationScope) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDescGZIP(), []int{0, 3}
}

func (x *RoleSpec_VirtualDestinationScope) GetVirtualMeshRefs() []*v1.ObjectRef {
	if x != nil {
		return x.VirtualMeshRefs
	}
	return nil
}

func (x *RoleSpec_VirtualDestinationScope) GetMeshRefs() []*v1.ObjectRef {
	if x != nil {
		return x.MeshRefs
	}
	return nil
}

func (x *RoleSpec_VirtualDestinationScope) GetDestinationSelectors() []*v11.DestinationSelector {
	if x != nil {
		return x.DestinationSelectors
	}
	return nil
}

func (x *RoleSpec_VirtualDestinationScope) GetDestinations() []*v1beta1.BackingDestination {
	if x != nil {
		return x.Destinations
	}
	return nil
}

// Represents permissions for configuring WasmDeployments.
type RoleSpec_WasmDeploymentScope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of permitted Workload selectors.
	WorkloadSelectors []*v11.WorkloadSelector `protobuf:"bytes,1,rep,name=workload_selectors,json=workloadSelectors,proto3" json:"workload_selectors,omitempty"`
}

func (x *RoleSpec_WasmDeploymentScope) Reset() {
	*x = RoleSpec_WasmDeploymentScope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleSpec_WasmDeploymentScope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleSpec_WasmDeploymentScope) ProtoMessage() {}

func (x *RoleSpec_WasmDeploymentScope) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleSpec_WasmDeploymentScope.ProtoReflect.Descriptor instead.
func (*RoleSpec_WasmDeploymentScope) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDescGZIP(), []int{0, 4}
}

func (x *RoleSpec_WasmDeploymentScope) GetWorkloadSelectors() []*v11.WorkloadSelector {
	if x != nil {
		return x.WorkloadSelectors
	}
	return nil
}

// Represents permissions for configuring AccessLogRecords.
type RoleSpec_AccessLogRecordScope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of permitted Workload selectors.
	WorkloadSelectors []*v11.WorkloadSelector `protobuf:"bytes,1,rep,name=workload_selectors,json=workloadSelectors,proto3" json:"workload_selectors,omitempty"`
}

func (x *RoleSpec_AccessLogRecordScope) Reset() {
	*x = RoleSpec_AccessLogRecordScope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleSpec_AccessLogRecordScope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleSpec_AccessLogRecordScope) ProtoMessage() {}

func (x *RoleSpec_AccessLogRecordScope) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleSpec_AccessLogRecordScope.ProtoReflect.Descriptor instead.
func (*RoleSpec_AccessLogRecordScope) Descriptor() ([]byte, []int) {
	return file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDescGZIP(), []int{0, 5}
}

func (x *RoleSpec_AccessLogRecordScope) GetWorkloadSelectors() []*v11.WorkloadSelector {
	if x != nil {
		return x.WorkloadSelectors
	}
	return nil
}

var File_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto protoreflect.FileDescriptor

var file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDesc = []byte{
	0x0a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c,
	0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2f, 0x72, 0x62,
	0x61, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x21, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f,
	0x2e, 0x69, 0x6f, 0x1a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x73, 0x6b, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x73, 0x6f, 0x6c, 0x6f, 0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d, 0x65, 0x73,
	0x68, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x58, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f,
	0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x91, 0x13, 0x0a, 0x08, 0x52, 0x6f,
	0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x72, 0x0a, 0x15, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f,
	0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x13, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x6c, 0x0a, 0x13, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x68, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x68,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x11, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x65,
	0x73, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x6f, 0x0a, 0x14, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x12, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x1a, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43,
	0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65,
	0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e,
	0x69, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x52, 0x18, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x75, 0x0a,
	0x16, 0x77, 0x61, 0x73, 0x6d, 0x5f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e,
	0x72, 0x62, 0x61, 0x63, 0x2e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e,
	0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69,
	0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x57, 0x61, 0x73, 0x6d, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x14,
	0x77, 0x61, 0x73, 0x6d, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x73, 0x12, 0x79, 0x0a, 0x18, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6c,
	0x6f, 0x67, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x15, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x1a,
	0xcc, 0x04, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x16, 0x74, 0x72, 0x61, 0x66, 0x66,
	0x69, 0x63, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x53, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67,
	0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x53, 0x70, 0x65, 0x63, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x14, 0x74, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x62, 0x0a, 0x15, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e,
	0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x44, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x52, 0x14, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x59, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x11,
	0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x22, 0xea, 0x01, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x1d, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x54, 0x52, 0x41, 0x46, 0x46, 0x49, 0x43, 0x5f, 0x50, 0x4f,
	0x4c, 0x49, 0x43, 0x59, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x52, 0x41, 0x46, 0x46, 0x49,
	0x43, 0x5f, 0x53, 0x48, 0x49, 0x46, 0x54, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x46, 0x41, 0x55,
	0x4c, 0x54, 0x5f, 0x49, 0x4e, 0x4a, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x13,
	0x0a, 0x0f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55,
	0x54, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x54, 0x52, 0x49, 0x45, 0x53, 0x10, 0x05,
	0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x52, 0x53, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x10,
	0x06, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x49, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x07, 0x12, 0x17, 0x0a,
	0x13, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x4e, 0x49, 0x50, 0x55, 0x4c, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x08, 0x12, 0x15, 0x0a, 0x11, 0x4f, 0x55, 0x54, 0x4c, 0x49, 0x45,
	0x52, 0x5f, 0x44, 0x45, 0x54, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x09, 0x12, 0x0f, 0x0a,
	0x0b, 0x4d, 0x54, 0x4c, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x0a, 0x1a, 0xcc,
	0x02, 0x0a, 0x10, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x68, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x12, 0x81, 0x01, 0x0a, 0x14, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f,
	0x6d, 0x65, 0x73, 0x68, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x4f, 0x2e, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x68, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x68, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x12, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x65, 0x73, 0x68,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x68, 0x5f,
	0x72, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x68, 0x52, 0x65,
	0x66, 0x73, 0x22, 0x79, 0x0a, 0x12, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x65, 0x73,
	0x68, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x5f, 0x56, 0x49, 0x52, 0x54, 0x55, 0x41, 0x4c, 0x5f, 0x4d, 0x45, 0x53, 0x48,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c,
	0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x54, 0x4c, 0x53, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49,
	0x47, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x45, 0x44, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c, 0x5f, 0x41, 0x43,
	0x43, 0x45, 0x53, 0x53, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x43, 0x59, 0x10, 0x04, 0x1a, 0xd2, 0x01,
	0x0a, 0x11, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x63,
	0x6f, 0x70, 0x65, 0x12, 0x59, 0x0a, 0x12, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c,
	0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x11, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x62,
	0x0a, 0x15, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f,
	0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x14, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x73, 0x1a, 0xe3, 0x02, 0x0a, 0x17, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x48,
	0x0a, 0x11, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6d, 0x65, 0x73, 0x68, 0x5f, 0x72,
	0x65, 0x66, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x0f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x4d, 0x65, 0x73, 0x68, 0x52, 0x65, 0x66, 0x73, 0x12, 0x39, 0x0a, 0x09, 0x6d, 0x65, 0x73, 0x68,
	0x5f, 0x72, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x68, 0x52,
	0x65, 0x66, 0x73, 0x12, 0x62, 0x0a, 0x15, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x73, 0x68,
	0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x44, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x14, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x5f, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e,
	0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x70, 0x0a, 0x13, 0x57, 0x61, 0x73, 0x6d,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12,
	0x59, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61,
	0x64, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x71, 0x0a, 0x14, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x59, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f,
	0x6f, 0x2e, 0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x11, 0x77, 0x6f, 0x72, 0x6b,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x3d, 0x0a,
	0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x6f,
	0x62, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x64, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x89, 0x01, 0x0a,
	0x0f, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x70, 0x65, 0x63,
	0x12, 0x3d, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73,
	0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x66, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12,
	0x37, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x73, 0x6b, 0x76, 0x32, 0x2e, 0x73, 0x6f,
	0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x66, 0x52,
	0x07, 0x72, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x66, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x6f, 0x6c, 0x65,
	0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x4b, 0x5a,
	0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6f, 0x6c, 0x6f,
	0x2d, 0x69, 0x6f, 0x2f, 0x67, 0x6c, 0x6f, 0x6f, 0x2d, 0x6d, 0x65, 0x73, 0x68, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x70, 0x72, 0x69, 0x73, 0x65, 0x2e, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x67, 0x6c, 0x6f, 0x6f, 0x2e,
	0x73, 0x6f, 0x6c, 0x6f, 0x2e, 0x69, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDescOnce sync.Once
	file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDescData = file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDesc
)

func file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDescGZIP() []byte {
	file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDescOnce.Do(func() {
		file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDescData)
	})
	return file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDescData
}

var file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_goTypes = []interface{}{
	(RoleSpec_TrafficPolicyScope_TrafficPolicyActions)(0), // 0: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.TrafficPolicyScope.TrafficPolicyActions
	(RoleSpec_VirtualMeshScope_VirtualMeshActions)(0),     // 1: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.VirtualMeshScope.VirtualMeshActions
	(*RoleSpec)(nil),                         // 2: rbac.enterprise.mesh.gloo.solo.io.RoleSpec
	(*RoleStatus)(nil),                       // 3: rbac.enterprise.mesh.gloo.solo.io.RoleStatus
	(*RoleBindingSpec)(nil),                  // 4: rbac.enterprise.mesh.gloo.solo.io.RoleBindingSpec
	(*RoleBindingStatus)(nil),                // 5: rbac.enterprise.mesh.gloo.solo.io.RoleBindingStatus
	(*RoleSpec_TrafficPolicyScope)(nil),      // 6: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.TrafficPolicyScope
	(*RoleSpec_VirtualMeshScope)(nil),        // 7: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.VirtualMeshScope
	(*RoleSpec_AccessPolicyScope)(nil),       // 8: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.AccessPolicyScope
	(*RoleSpec_VirtualDestinationScope)(nil), // 9: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.VirtualDestinationScope
	(*RoleSpec_WasmDeploymentScope)(nil),     // 10: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.WasmDeploymentScope
	(*RoleSpec_AccessLogRecordScope)(nil),    // 11: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.AccessLogRecordScope
	(*v1.TypedObjectRef)(nil),                // 12: core.skv2.solo.io.TypedObjectRef
	(*v1.ObjectRef)(nil),                     // 13: core.skv2.solo.io.ObjectRef
	(*v11.DestinationSelector)(nil),          // 14: common.mesh.gloo.solo.io.DestinationSelector
	(*v11.WorkloadSelector)(nil),             // 15: common.mesh.gloo.solo.io.WorkloadSelector
	(*v11.IdentitySelector)(nil),             // 16: common.mesh.gloo.solo.io.IdentitySelector
	(*v1beta1.BackingDestination)(nil),       // 17: networking.enterprise.mesh.gloo.solo.io.BackingDestination
}
var file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_depIdxs = []int32{
	6,  // 0: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.traffic_policy_scopes:type_name -> rbac.enterprise.mesh.gloo.solo.io.RoleSpec.TrafficPolicyScope
	7,  // 1: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.virtual_mesh_scopes:type_name -> rbac.enterprise.mesh.gloo.solo.io.RoleSpec.VirtualMeshScope
	8,  // 2: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.access_policy_scopes:type_name -> rbac.enterprise.mesh.gloo.solo.io.RoleSpec.AccessPolicyScope
	9,  // 3: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.virtual_destination_scopes:type_name -> rbac.enterprise.mesh.gloo.solo.io.RoleSpec.VirtualDestinationScope
	10, // 4: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.wasm_deployment_scopes:type_name -> rbac.enterprise.mesh.gloo.solo.io.RoleSpec.WasmDeploymentScope
	11, // 5: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.access_log_record_scopes:type_name -> rbac.enterprise.mesh.gloo.solo.io.RoleSpec.AccessLogRecordScope
	12, // 6: rbac.enterprise.mesh.gloo.solo.io.RoleBindingSpec.subjects:type_name -> core.skv2.solo.io.TypedObjectRef
	13, // 7: rbac.enterprise.mesh.gloo.solo.io.RoleBindingSpec.role_ref:type_name -> core.skv2.solo.io.ObjectRef
	0,  // 8: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.TrafficPolicyScope.traffic_policy_actions:type_name -> rbac.enterprise.mesh.gloo.solo.io.RoleSpec.TrafficPolicyScope.TrafficPolicyActions
	14, // 9: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.TrafficPolicyScope.destination_selectors:type_name -> common.mesh.gloo.solo.io.DestinationSelector
	15, // 10: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.TrafficPolicyScope.workload_selectors:type_name -> common.mesh.gloo.solo.io.WorkloadSelector
	1,  // 11: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.VirtualMeshScope.virtual_mesh_actions:type_name -> rbac.enterprise.mesh.gloo.solo.io.RoleSpec.VirtualMeshScope.VirtualMeshActions
	13, // 12: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.VirtualMeshScope.mesh_refs:type_name -> core.skv2.solo.io.ObjectRef
	16, // 13: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.AccessPolicyScope.identity_selectors:type_name -> common.mesh.gloo.solo.io.IdentitySelector
	14, // 14: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.AccessPolicyScope.destination_selectors:type_name -> common.mesh.gloo.solo.io.DestinationSelector
	13, // 15: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.VirtualDestinationScope.virtual_mesh_refs:type_name -> core.skv2.solo.io.ObjectRef
	13, // 16: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.VirtualDestinationScope.mesh_refs:type_name -> core.skv2.solo.io.ObjectRef
	14, // 17: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.VirtualDestinationScope.destination_selectors:type_name -> common.mesh.gloo.solo.io.DestinationSelector
	17, // 18: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.VirtualDestinationScope.destinations:type_name -> networking.enterprise.mesh.gloo.solo.io.BackingDestination
	15, // 19: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.WasmDeploymentScope.workload_selectors:type_name -> common.mesh.gloo.solo.io.WorkloadSelector
	15, // 20: rbac.enterprise.mesh.gloo.solo.io.RoleSpec.AccessLogRecordScope.workload_selectors:type_name -> common.mesh.gloo.solo.io.WorkloadSelector
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_init() }
func file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_init() {
	if File_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleBindingSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleBindingStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleSpec_TrafficPolicyScope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleSpec_VirtualMeshScope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleSpec_AccessPolicyScope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleSpec_VirtualDestinationScope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleSpec_WasmDeploymentScope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleSpec_AccessLogRecordScope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_goTypes,
		DependencyIndexes: file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_depIdxs,
		EnumInfos:         file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_enumTypes,
		MessageInfos:      file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_msgTypes,
	}.Build()
	File_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto = out.File
	file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_rawDesc = nil
	file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_goTypes = nil
	file_github_com_solo_io_gloo_mesh_api_enterprise_rbac_v1_role_proto_depIdxs = nil
}
