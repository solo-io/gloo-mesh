// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/service-mesh-hub/api/networking/v1alpha2/validation_state.proto

package v1alpha2

import (
	bytes "bytes"
	fmt "fmt"
	math "math"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/solo-io/skv2/pkg/api/core.skv2.solo.io/v1"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// State of a Policy resource reflected in the status by Service Mesh Hub while processing a resource.
type ValidationState int32

const (
	// Resources are in a Pending state before they have been processed by Service Mesh Hub
	ValidationState_PENDING ValidationState = 0
	// Resources are in a Accepted state when they are valid and have been applied successfully to
	// the Service Mesh Hub configuration.
	ValidationState_ACCEPTED ValidationState = 1
	// Resources are in an Invalid state when they contain incorrect configuration parameters,
	// such as missing required values or invalid resource references.
	// An invalid state can also result when a resource's configuration is valid
	// but conflicts with another resource which was accepted in an earlier point in time.
	ValidationState_INVALID ValidationState = 2
	// Resources are in a Failed state when they contain correct configuration parameters,
	// but the server encountered an error trying to synchronize the system to
	// the desired state.
	ValidationState_FAILED ValidationState = 3
)

var ValidationState_name = map[int32]string{
	0: "PENDING",
	1: "ACCEPTED",
	2: "INVALID",
	3: "FAILED",
}

var ValidationState_value = map[string]int32{
	"PENDING":  0,
	"ACCEPTED": 1,
	"INVALID":  2,
	"FAILED":   3,
}

func (x ValidationState) String() string {
	return proto.EnumName(ValidationState_name, int32(x))
}

func (ValidationState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3950dd7df1e96ad2, []int{0}
}

// the status of a policy that has been applied to a MeshService
type ValidationStatus struct {
	// acceptanceOrder represents the order in which the Policy
	// was accepted and applied to a MeshService. The first accepted policy
	// will have an acceptance_order of zero, the second 1, etc.
	// when conflicts are detected in the system,
	// the Policy with the lowest acceptance_order
	// will be chosen (and all other conflicting policies will be rejected).
	AcceptanceOrder uint32 `protobuf:"varint,1,opt,name=acceptance_order,json=acceptanceOrder,proto3" json:"acceptance_order,omitempty"`
	// The result of attempting to apply the policy to the MeshService,
	// reported by the Policy controller (mesh-networking).
	State ValidationState `protobuf:"varint,2,opt,name=state,proto3,enum=networking.smh.solo.io.ValidationState" json:"state,omitempty"`
	// any errors observed which prevented the resource from being Accepted.
	Errors               []string `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidationStatus) Reset()         { *m = ValidationStatus{} }
func (m *ValidationStatus) String() string { return proto.CompactTextString(m) }
func (*ValidationStatus) ProtoMessage()    {}
func (*ValidationStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_3950dd7df1e96ad2, []int{0}
}
func (m *ValidationStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidationStatus.Unmarshal(m, b)
}
func (m *ValidationStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidationStatus.Marshal(b, m, deterministic)
}
func (m *ValidationStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidationStatus.Merge(m, src)
}
func (m *ValidationStatus) XXX_Size() int {
	return xxx_messageInfo_ValidationStatus.Size(m)
}
func (m *ValidationStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidationStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ValidationStatus proto.InternalMessageInfo

func (m *ValidationStatus) GetAcceptanceOrder() uint32 {
	if m != nil {
		return m.AcceptanceOrder
	}
	return 0
}

func (m *ValidationStatus) GetState() ValidationState {
	if m != nil {
		return m.State
	}
	return ValidationState_PENDING
}

func (m *ValidationStatus) GetErrors() []string {
	if m != nil {
		return m.Errors
	}
	return nil
}

func init() {
	proto.RegisterEnum("networking.smh.solo.io.ValidationState", ValidationState_name, ValidationState_value)
	proto.RegisterType((*ValidationStatus)(nil), "networking.smh.solo.io.ValidationStatus")
}

func init() {
	proto.RegisterFile("github.com/solo-io/service-mesh-hub/api/networking/v1alpha2/validation_state.proto", fileDescriptor_3950dd7df1e96ad2)
}

var fileDescriptor_3950dd7df1e96ad2 = []byte{
	// 322 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x51, 0xcd, 0x4e, 0x32, 0x31,
	0x14, 0xfd, 0x06, 0xf2, 0xa1, 0xd6, 0x1f, 0x9a, 0xc6, 0x10, 0xc2, 0xc2, 0x10, 0x37, 0xa2, 0x09,
	0x6d, 0xc0, 0xb5, 0x0b, 0x64, 0x46, 0x33, 0x91, 0x20, 0x8e, 0x86, 0x85, 0x1b, 0x52, 0x4a, 0x33,
	0xd3, 0x00, 0x73, 0x27, 0x6d, 0x19, 0x5f, 0xc4, 0x87, 0xf0, 0xb9, 0x7c, 0x12, 0x33, 0x33, 0x06,
	0x94, 0xb0, 0x70, 0xd5, 0xdb, 0xd3, 0x9e, 0x9f, 0xdc, 0x83, 0x82, 0x50, 0xd9, 0x68, 0x35, 0xa5,
	0x02, 0x96, 0xcc, 0xc0, 0x02, 0xda, 0x0a, 0x98, 0x91, 0x3a, 0x55, 0x42, 0xb6, 0x97, 0xd2, 0x44,
	0xed, 0x68, 0x35, 0x65, 0x3c, 0x51, 0x2c, 0x96, 0xf6, 0x0d, 0xf4, 0x5c, 0xc5, 0x21, 0x4b, 0x3b,
	0x7c, 0x91, 0x44, 0xbc, 0xcb, 0x52, 0xbe, 0x50, 0x33, 0x6e, 0x15, 0xc4, 0x13, 0x63, 0xb9, 0x95,
	0x34, 0xd1, 0x60, 0x81, 0xd4, 0x36, 0x7f, 0xa9, 0x59, 0x46, 0x34, 0xd3, 0xa5, 0x0a, 0x1a, 0x74,
	0x97, 0xd7, 0x3c, 0xed, 0xe6, 0xfa, 0x02, 0xb4, 0x64, 0x69, 0x27, 0x3f, 0x0b, 0x9d, 0xc6, 0x69,
	0x08, 0x21, 0xe4, 0x23, 0xcb, 0xa6, 0x02, 0x3d, 0x7f, 0x77, 0x10, 0x1e, 0xaf, 0x8d, 0x9f, 0x2d,
	0xb7, 0x2b, 0x43, 0x2e, 0x11, 0xe6, 0x42, 0xc8, 0xc4, 0xf2, 0x58, 0xc8, 0x09, 0xe8, 0x99, 0xd4,
	0x75, 0xa7, 0xe9, 0xb4, 0x8e, 0x83, 0xea, 0x06, 0x7f, 0xcc, 0x60, 0x72, 0x83, 0xfe, 0xe7, 0x61,
	0xeb, 0xa5, 0xa6, 0xd3, 0x3a, 0xe9, 0x5e, 0xd0, 0xdd, 0x69, 0xe9, 0x6f, 0x0f, 0x19, 0x14, 0x2c,
	0x52, 0x43, 0x15, 0xa9, 0x35, 0x68, 0x53, 0x2f, 0x37, 0xcb, 0xad, 0x83, 0xe0, 0xfb, 0x76, 0xe5,
	0xa1, 0xea, 0x16, 0x83, 0x1c, 0xa2, 0xbd, 0x91, 0x37, 0x74, 0xfd, 0xe1, 0x3d, 0xfe, 0x47, 0x8e,
	0xd0, 0x7e, 0xaf, 0xdf, 0xf7, 0x46, 0x2f, 0x9e, 0x8b, 0x9d, 0xec, 0xc9, 0x1f, 0x8e, 0x7b, 0x03,
	0xdf, 0xc5, 0x25, 0x82, 0x50, 0xe5, 0xae, 0xe7, 0x0f, 0x3c, 0x17, 0x97, 0x6f, 0x9f, 0x3e, 0x3e,
	0xcf, 0x9c, 0xd7, 0x87, 0xbf, 0xb4, 0x92, 0xcc, 0xc3, 0xad, 0x66, 0x7e, 0xe6, 0x5f, 0xb7, 0x34,
	0xad, 0xe4, 0x7b, 0xbb, 0xfe, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x5a, 0xfc, 0xc8, 0x7c, 0xeb, 0x01,
	0x00, 0x00,
}

func (this *ValidationStatus) Equal(that interface{}) bool {
	if that == nil {
		return this == nil
	}

	that1, ok := that.(*ValidationStatus)
	if !ok {
		that2, ok := that.(ValidationStatus)
		if ok {
			that1 = &that2
		} else {
			return false
		}
	}
	if that1 == nil {
		return this == nil
	} else if this == nil {
		return false
	}
	if this.AcceptanceOrder != that1.AcceptanceOrder {
		return false
	}
	if this.State != that1.State {
		return false
	}
	if len(this.Errors) != len(that1.Errors) {
		return false
	}
	for i := range this.Errors {
		if this.Errors[i] != that1.Errors[i] {
			return false
		}
	}
	if !bytes.Equal(this.XXX_unrecognized, that1.XXX_unrecognized) {
		return false
	}
	return true
}
