// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/solo-io/service-mesh-hub/api/networking/v1alpha1/failover_service.proto

package types

import (
	fmt "fmt"
	math "math"

	proto "github.com/gogo/protobuf/proto"
	types "github.com/solo-io/service-mesh-hub/pkg/api/core.smh.solo.io/v1alpha1/types"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//A FailoverService creates a new hostname to which services can send requests.
//Requests will be routed based on a list of backing services ordered by
//decreasing priority. When outlier detection detects that a service in the list is
//in an unhealthy state, requests sent to the FailoverService will be routed
//to the next healthy service in the list. For each service referenced in the
//failover services list, outlier detection must be configured using a TrafficPolicy.
//
//Currently this feature only supports Services backed by Istio.
type FailoverServiceSpec struct {
	//
	//The DNS name of the failover service. Must be unique within the service mesh instance
	//since it is used as the hostname with which clients communicate.
	Hostname string `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// The namespace to locate the translated service.
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The ports from which to expose this service.
	Port *FailoverServiceSpec_Port `protobuf:"bytes,3,opt,name=port,proto3" json:"port,omitempty"`
	// The cluster that the failover service resides (the cluster name registered with Service Mesh Hub).
	Cluster string `protobuf:"bytes,4,opt,name=cluster,proto3" json:"cluster,omitempty"`
	//
	//A list of services ordered by decreasing priority for failover.
	//All services must be backed by either the same service mesh instance or
	//backed by service meshes that are grouped under a common VirtualMesh.
	FailoverServices     []*types.ResourceRef `protobuf:"bytes,5,rep,name=failover_services,json=failoverServices,proto3" json:"failover_services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FailoverServiceSpec) Reset()         { *m = FailoverServiceSpec{} }
func (m *FailoverServiceSpec) String() string { return proto.CompactTextString(m) }
func (*FailoverServiceSpec) ProtoMessage()    {}
func (*FailoverServiceSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_05f0dd5940b7bfb1, []int{0}
}
func (m *FailoverServiceSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailoverServiceSpec.Unmarshal(m, b)
}
func (m *FailoverServiceSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailoverServiceSpec.Marshal(b, m, deterministic)
}
func (m *FailoverServiceSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailoverServiceSpec.Merge(m, src)
}
func (m *FailoverServiceSpec) XXX_Size() int {
	return xxx_messageInfo_FailoverServiceSpec.Size(m)
}
func (m *FailoverServiceSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_FailoverServiceSpec.DiscardUnknown(m)
}

var xxx_messageInfo_FailoverServiceSpec proto.InternalMessageInfo

func (m *FailoverServiceSpec) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *FailoverServiceSpec) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *FailoverServiceSpec) GetPort() *FailoverServiceSpec_Port {
	if m != nil {
		return m.Port
	}
	return nil
}

func (m *FailoverServiceSpec) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *FailoverServiceSpec) GetFailoverServices() []*types.ResourceRef {
	if m != nil {
		return m.FailoverServices
	}
	return nil
}

// The port from which to expose the failover service.
type FailoverServiceSpec_Port struct {
	// Port number.
	Port uint32 `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	// Label for the port.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Protocol.
	Protocol             string   `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FailoverServiceSpec_Port) Reset()         { *m = FailoverServiceSpec_Port{} }
func (m *FailoverServiceSpec_Port) String() string { return proto.CompactTextString(m) }
func (*FailoverServiceSpec_Port) ProtoMessage()    {}
func (*FailoverServiceSpec_Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_05f0dd5940b7bfb1, []int{0, 0}
}
func (m *FailoverServiceSpec_Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailoverServiceSpec_Port.Unmarshal(m, b)
}
func (m *FailoverServiceSpec_Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailoverServiceSpec_Port.Marshal(b, m, deterministic)
}
func (m *FailoverServiceSpec_Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailoverServiceSpec_Port.Merge(m, src)
}
func (m *FailoverServiceSpec_Port) XXX_Size() int {
	return xxx_messageInfo_FailoverServiceSpec_Port.Size(m)
}
func (m *FailoverServiceSpec_Port) XXX_DiscardUnknown() {
	xxx_messageInfo_FailoverServiceSpec_Port.DiscardUnknown(m)
}

var xxx_messageInfo_FailoverServiceSpec_Port proto.InternalMessageInfo

func (m *FailoverServiceSpec_Port) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *FailoverServiceSpec_Port) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FailoverServiceSpec_Port) GetProtocol() string {
	if m != nil {
		return m.Protocol
	}
	return ""
}

type FailoverServiceStatus struct {
	// The generation the validation_status was observed on.
	ObservedGeneration int64 `protobuf:"varint,1,opt,name=observed_generation,json=observedGeneration,proto3" json:"observed_generation,omitempty"`
	// Whether or not the resource has been successfully translated into concrete, mesh-specific routing configuration.
	TranslationStatus *types.Status `protobuf:"bytes,2,opt,name=translation_status,json=translationStatus,proto3" json:"translation_status,omitempty"`
	// Provides details on any translation errors that occurred. If any errors exist, this FailoverService has not been translated into mesh-specific config.
	TranslatorErrors []*FailoverServiceStatus_TranslatorError `protobuf:"bytes,3,rep,name=translator_errors,json=translatorErrors,proto3" json:"translator_errors,omitempty"`
	// Whether or not this resource has passed validation. This is a required step before it can be translated into concrete, mesh-specific failover configuration.
	ValidationStatus     *types.Status `protobuf:"bytes,4,opt,name=validation_status,json=validationStatus,proto3" json:"validation_status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *FailoverServiceStatus) Reset()         { *m = FailoverServiceStatus{} }
func (m *FailoverServiceStatus) String() string { return proto.CompactTextString(m) }
func (*FailoverServiceStatus) ProtoMessage()    {}
func (*FailoverServiceStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_05f0dd5940b7bfb1, []int{1}
}
func (m *FailoverServiceStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailoverServiceStatus.Unmarshal(m, b)
}
func (m *FailoverServiceStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailoverServiceStatus.Marshal(b, m, deterministic)
}
func (m *FailoverServiceStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailoverServiceStatus.Merge(m, src)
}
func (m *FailoverServiceStatus) XXX_Size() int {
	return xxx_messageInfo_FailoverServiceStatus.Size(m)
}
func (m *FailoverServiceStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_FailoverServiceStatus.DiscardUnknown(m)
}

var xxx_messageInfo_FailoverServiceStatus proto.InternalMessageInfo

func (m *FailoverServiceStatus) GetObservedGeneration() int64 {
	if m != nil {
		return m.ObservedGeneration
	}
	return 0
}

func (m *FailoverServiceStatus) GetTranslationStatus() *types.Status {
	if m != nil {
		return m.TranslationStatus
	}
	return nil
}

func (m *FailoverServiceStatus) GetTranslatorErrors() []*FailoverServiceStatus_TranslatorError {
	if m != nil {
		return m.TranslatorErrors
	}
	return nil
}

func (m *FailoverServiceStatus) GetValidationStatus() *types.Status {
	if m != nil {
		return m.ValidationStatus
	}
	return nil
}

// An error pertaining to translation of the FailoverService to mesh-specific configuration.
type FailoverServiceStatus_TranslatorError struct {
	// ID representing a translator that translates FailoverService to Mesh-specific config.
	TranslatorId string `protobuf:"bytes,1,opt,name=translator_id,json=translatorId,proto3" json:"translator_id,omitempty"`
	// Message describing the error(s).
	ErrorMessage         string   `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FailoverServiceStatus_TranslatorError) Reset()         { *m = FailoverServiceStatus_TranslatorError{} }
func (m *FailoverServiceStatus_TranslatorError) String() string { return proto.CompactTextString(m) }
func (*FailoverServiceStatus_TranslatorError) ProtoMessage()    {}
func (*FailoverServiceStatus_TranslatorError) Descriptor() ([]byte, []int) {
	return fileDescriptor_05f0dd5940b7bfb1, []int{1, 0}
}
func (m *FailoverServiceStatus_TranslatorError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailoverServiceStatus_TranslatorError.Unmarshal(m, b)
}
func (m *FailoverServiceStatus_TranslatorError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailoverServiceStatus_TranslatorError.Marshal(b, m, deterministic)
}
func (m *FailoverServiceStatus_TranslatorError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailoverServiceStatus_TranslatorError.Merge(m, src)
}
func (m *FailoverServiceStatus_TranslatorError) XXX_Size() int {
	return xxx_messageInfo_FailoverServiceStatus_TranslatorError.Size(m)
}
func (m *FailoverServiceStatus_TranslatorError) XXX_DiscardUnknown() {
	xxx_messageInfo_FailoverServiceStatus_TranslatorError.DiscardUnknown(m)
}

var xxx_messageInfo_FailoverServiceStatus_TranslatorError proto.InternalMessageInfo

func (m *FailoverServiceStatus_TranslatorError) GetTranslatorId() string {
	if m != nil {
		return m.TranslatorId
	}
	return ""
}

func (m *FailoverServiceStatus_TranslatorError) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*FailoverServiceSpec)(nil), "networking.smh.solo.io.FailoverServiceSpec")
	proto.RegisterType((*FailoverServiceSpec_Port)(nil), "networking.smh.solo.io.FailoverServiceSpec.Port")
	proto.RegisterType((*FailoverServiceStatus)(nil), "networking.smh.solo.io.FailoverServiceStatus")
	proto.RegisterType((*FailoverServiceStatus_TranslatorError)(nil), "networking.smh.solo.io.FailoverServiceStatus.TranslatorError")
}

func init() {
	proto.RegisterFile("github.com/solo-io/service-mesh-hub/api/networking/v1alpha1/failover_service.proto", fileDescriptor_05f0dd5940b7bfb1)
}

var fileDescriptor_05f0dd5940b7bfb1 = []byte{
	// 477 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xcd, 0x8e, 0xd3, 0x30,
	0x10, 0x56, 0xb7, 0xe1, 0xa7, 0xee, 0xae, 0x68, 0xbd, 0x02, 0x45, 0x11, 0x48, 0xd5, 0x72, 0xe9,
	0x81, 0x26, 0x6c, 0x39, 0x73, 0x41, 0x2c, 0x2b, 0x56, 0x42, 0x02, 0x97, 0x13, 0x1c, 0x22, 0x37,
	0x9d, 0x26, 0x66, 0x93, 0x4c, 0xe4, 0x71, 0x8a, 0x78, 0x1c, 0x9e, 0x86, 0xd7, 0x42, 0x71, 0xd2,
	0xa4, 0x2d, 0x95, 0xe8, 0x29, 0x99, 0xcf, 0x9e, 0xef, 0x67, 0x6c, 0x33, 0x11, 0x2b, 0x93, 0x94,
	0x4b, 0x3f, 0xc2, 0x2c, 0x20, 0x4c, 0x71, 0xa6, 0x30, 0x20, 0xd0, 0x1b, 0x15, 0xc1, 0x2c, 0x03,
	0x4a, 0x66, 0x49, 0xb9, 0x0c, 0x64, 0xa1, 0x82, 0x1c, 0xcc, 0x4f, 0xd4, 0xf7, 0x2a, 0x8f, 0x83,
	0xcd, 0xb5, 0x4c, 0x8b, 0x44, 0x5e, 0x07, 0x6b, 0xa9, 0x52, 0xdc, 0x80, 0x0e, 0x9b, 0x0e, 0xbf,
	0xd0, 0x68, 0x90, 0x3f, 0xeb, 0xf6, 0xfa, 0x94, 0x25, 0x7e, 0xc5, 0xeb, 0x2b, 0xf4, 0x5e, 0x1d,
	0x25, 0x8e, 0x50, 0x43, 0x47, 0xa9, 0x61, 0x5d, 0xb3, 0x78, 0xc1, 0x09, 0xbb, 0xc9, 0x48, 0x53,
	0x52, 0xdd, 0x70, 0xf5, 0xe7, 0x8c, 0x5d, 0x7e, 0x68, 0x1c, 0x2d, 0xea, 0xde, 0x45, 0x01, 0x11,
	0xf7, 0xd8, 0xe3, 0x04, 0xc9, 0xe4, 0x32, 0x03, 0xb7, 0x37, 0xe9, 0x4d, 0x07, 0xa2, 0xad, 0xf9,
	0x73, 0x36, 0xa8, 0xbe, 0x54, 0xc8, 0x08, 0xdc, 0x33, 0xbb, 0xd8, 0x01, 0xfc, 0x3d, 0x73, 0x0a,
	0xd4, 0xc6, 0xed, 0x4f, 0x7a, 0xd3, 0xe1, 0xfc, 0xb5, 0x7f, 0x3c, 0x97, 0x7f, 0x44, 0xd4, 0xff,
	0x8c, 0xda, 0x08, 0xdb, 0xcd, 0x5d, 0xf6, 0x28, 0x4a, 0x4b, 0x32, 0xa0, 0x5d, 0xc7, 0x2a, 0x6c,
	0x4b, 0x7e, 0xc7, 0xc6, 0x87, 0x23, 0x24, 0xf7, 0xc1, 0xa4, 0x3f, 0x1d, 0xce, 0x5f, 0xf8, 0x55,
	0xd2, 0x3d, 0x19, 0x01, 0x84, 0xa5, 0x8e, 0x40, 0xc0, 0x5a, 0x8c, 0xd6, 0xfb, 0x9a, 0xe4, 0xdd,
	0x31, 0xa7, 0xd2, 0xe4, 0xbc, 0xf1, 0x5c, 0x25, 0xbd, 0x68, 0x1c, 0x70, 0xe6, 0xd8, 0xf4, 0x75,
	0x40, 0xfb, 0x5f, 0x4d, 0xc5, 0x8e, 0x2d, 0xc2, 0xd4, 0xe6, 0x1b, 0x88, 0xb6, 0xbe, 0xfa, 0xdd,
	0x67, 0x4f, 0x0f, 0x43, 0xd9, 0x49, 0xf3, 0x80, 0x5d, 0xe2, 0xb2, 0xb2, 0x0a, 0xab, 0x30, 0x86,
	0x1c, 0xb4, 0x34, 0x0a, 0x73, 0x2b, 0xd6, 0x17, 0x7c, 0xbb, 0x74, 0xdb, 0xae, 0xf0, 0x5b, 0xc6,
	0x8d, 0x96, 0x39, 0xa5, 0xb6, 0x0c, 0xeb, 0x03, 0xb3, 0x46, 0x86, 0x73, 0xf7, 0xdf, 0x8c, 0xb5,
	0x8c, 0x18, 0xef, 0xf4, 0x34, 0xca, 0x3f, 0x58, 0x0b, 0xa2, 0x0e, 0x41, 0x6b, 0xd4, 0xe4, 0xf6,
	0xed, 0xac, 0xde, 0x9e, 0x7a, 0x30, 0xf5, 0x6d, 0xf9, 0xda, 0xd2, 0xdc, 0x54, 0x2c, 0x62, 0x64,
	0xf6, 0x01, 0xe2, 0x37, 0x6c, 0xbc, 0x91, 0xa9, 0x5a, 0xed, 0x79, 0x76, 0xfe, 0xe3, 0x79, 0xd4,
	0xb5, 0xd4, 0x88, 0xf7, 0x9d, 0x3d, 0x39, 0xd0, 0xe2, 0x2f, 0xd9, 0xc5, 0x4e, 0x0a, 0xb5, 0x6a,
	0x2e, 0xe4, 0x79, 0x07, 0x7e, 0x5c, 0x55, 0x9b, 0x6c, 0xbe, 0x30, 0x03, 0x22, 0x19, 0x6f, 0xcf,
	0xed, 0xdc, 0x82, 0x9f, 0x6a, 0xec, 0xdd, 0xe2, 0xdb, 0x97, 0x53, 0x9e, 0x6e, 0x71, 0x1f, 0x1f,
	0x3c, 0xdf, 0x5d, 0xef, 0xdd, 0x4b, 0x32, 0xbf, 0x0a, 0xa0, 0xe5, 0x43, 0x7b, 0x05, 0xde, 0xfc,
	0x0d, 0x00, 0x00, 0xff, 0xff, 0x8c, 0x6e, 0x9f, 0x9d, 0x16, 0x04, 0x00, 0x00,
}
