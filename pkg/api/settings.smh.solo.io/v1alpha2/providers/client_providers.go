// Code generated by skv2. DO NOT EDIT.

package v1alpha2

import (
	settings_smh_solo_io_v1alpha2 "github.com/solo-io/service-mesh-hub/pkg/api/settings.smh.solo.io/v1alpha2"

	"k8s.io/client-go/rest"
	"sigs.k8s.io/controller-runtime/pkg/client"
)

/*
  The intention of these providers are to be used for Mocking.
  They expose the Clients as interfaces, as well as factories to provide mocked versions
  of the clients when they require building within a component.

  See package `github.com/solo-io/skv2/pkg/multicluster/register` for example
*/

// Provider for SettingsClient from Clientset
func SettingsClientFromClientsetProvider(clients settings_smh_solo_io_v1alpha2.Clientset) settings_smh_solo_io_v1alpha2.SettingsClient {
	return clients.Settings()
}

// Provider for Settings Client from Client
func SettingsClientProvider(client client.Client) settings_smh_solo_io_v1alpha2.SettingsClient {
	return settings_smh_solo_io_v1alpha2.NewSettingsClient(client)
}

type SettingsClientFactory func(client client.Client) settings_smh_solo_io_v1alpha2.SettingsClient

func SettingsClientFactoryProvider() SettingsClientFactory {
	return SettingsClientProvider
}

type SettingsClientFromConfigFactory func(cfg *rest.Config) (settings_smh_solo_io_v1alpha2.SettingsClient, error)

func SettingsClientFromConfigFactoryProvider() SettingsClientFromConfigFactory {
	return func(cfg *rest.Config) (settings_smh_solo_io_v1alpha2.SettingsClient, error) {
		clients, err := settings_smh_solo_io_v1alpha2.NewClientsetFromConfig(cfg)
		if err != nil {
			return nil, err
		}
		return clients.Settings(), nil
	}
}
