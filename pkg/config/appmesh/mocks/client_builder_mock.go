// Code generated by MockGen. DO NOT EDIT.
// Source: client_builder.go

// Package appmesh is a generated GoMock package.
package appmesh

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	core "github.com/solo-io/solo-kit/pkg/api/v1/resources/core"
	appmesh "github.com/solo-io/supergloo/pkg/config/appmesh"
)

// MockClientBuilder is a mock of ClientBuilder interface
type MockClientBuilder struct {
	ctrl     *gomock.Controller
	recorder *MockClientBuilderMockRecorder
}

// MockClientBuilderMockRecorder is the mock recorder for MockClientBuilder
type MockClientBuilderMockRecorder struct {
	mock *MockClientBuilder
}

// NewMockClientBuilder creates a new mock instance
func NewMockClientBuilder(ctrl *gomock.Controller) *MockClientBuilder {
	mock := &MockClientBuilder{ctrl: ctrl}
	mock.recorder = &MockClientBuilderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClientBuilder) EXPECT() *MockClientBuilderMockRecorder {
	return m.recorder
}

// GetClientInstance mocks base method
func (m *MockClientBuilder) GetClientInstance(secretRef *core.ResourceRef, region string) (appmesh.Client, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClientInstance", secretRef, region)
	ret0, _ := ret[0].(appmesh.Client)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClientInstance indicates an expected call of GetClientInstance
func (mr *MockClientBuilderMockRecorder) GetClientInstance(secretRef, region interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClientInstance", reflect.TypeOf((*MockClientBuilder)(nil).GetClientInstance), secretRef, region)
}
