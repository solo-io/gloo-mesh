// Code generated by MockGen. DO NOT EDIT.
// Source: ./interfaces.go

// Package mock_appmesh is a generated GoMock package.
package mock_appmesh

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1alpha1 "github.com/solo-io/service-mesh-hub/pkg/api/discovery.zephyr.solo.io/v1alpha1"
)

// MockAppmeshAccessControlDao is a mock of AppmeshAccessControlDao interface.
type MockAppmeshAccessControlDao struct {
	ctrl     *gomock.Controller
	recorder *MockAppmeshAccessControlDaoMockRecorder
}

// MockAppmeshAccessControlDaoMockRecorder is the mock recorder for MockAppmeshAccessControlDao.
type MockAppmeshAccessControlDaoMockRecorder struct {
	mock *MockAppmeshAccessControlDao
}

// NewMockAppmeshAccessControlDao creates a new mock instance.
func NewMockAppmeshAccessControlDao(ctrl *gomock.Controller) *MockAppmeshAccessControlDao {
	mock := &MockAppmeshAccessControlDao{ctrl: ctrl}
	mock.recorder = &MockAppmeshAccessControlDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAppmeshAccessControlDao) EXPECT() *MockAppmeshAccessControlDaoMockRecorder {
	return m.recorder
}

// ListMeshServicesForMesh mocks base method.
func (m *MockAppmeshAccessControlDao) ListMeshServices(ctx context.Context) ([]*v1alpha1.MeshService, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListMeshServicesForMesh", ctx)
	ret0, _ := ret[0].([]*v1alpha1.MeshService)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListMeshServicesForMesh indicates an expected call of ListMeshServicesForMesh.
func (mr *MockAppmeshAccessControlDaoMockRecorder) ListMeshServices(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListMeshServicesForMesh", reflect.TypeOf((*MockAppmeshAccessControlDao)(nil).ListMeshServices), ctx)
}
