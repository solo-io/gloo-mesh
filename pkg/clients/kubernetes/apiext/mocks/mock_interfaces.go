// Code generated by MockGen. DO NOT EDIT.
// Source: ./interfaces.go

// Package mock_kubernetes_apiext is a generated GoMock package.
package mock_kubernetes_apiext

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1beta1 "k8s.io/apiextensions-apiserver/pkg/apis/apiextensions/v1beta1"
	version "k8s.io/apimachinery/pkg/version"
)

// MockServerVersionClient is a mock of ServerVersionClient interface.
type MockServerVersionClient struct {
	ctrl     *gomock.Controller
	recorder *MockServerVersionClientMockRecorder
}

// MockServerVersionClientMockRecorder is the mock recorder for MockServerVersionClient.
type MockServerVersionClientMockRecorder struct {
	mock *MockServerVersionClient
}

// NewMockServerVersionClient creates a new mock instance.
func NewMockServerVersionClient(ctrl *gomock.Controller) *MockServerVersionClient {
	mock := &MockServerVersionClient{ctrl: ctrl}
	mock.recorder = &MockServerVersionClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServerVersionClient) EXPECT() *MockServerVersionClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockServerVersionClient) Get() (*version.Info, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(*version.Info)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockServerVersionClientMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockServerVersionClient)(nil).Get))
}

// MockCustomResourceDefinitionClient is a mock of CustomResourceDefinitionClient interface.
type MockCustomResourceDefinitionClient struct {
	ctrl     *gomock.Controller
	recorder *MockCustomResourceDefinitionClientMockRecorder
}

// MockCustomResourceDefinitionClientMockRecorder is the mock recorder for MockCustomResourceDefinitionClient.
type MockCustomResourceDefinitionClientMockRecorder struct {
	mock *MockCustomResourceDefinitionClient
}

// NewMockCustomResourceDefinitionClient creates a new mock instance.
func NewMockCustomResourceDefinitionClient(ctrl *gomock.Controller) *MockCustomResourceDefinitionClient {
	mock := &MockCustomResourceDefinitionClient{ctrl: ctrl}
	mock.recorder = &MockCustomResourceDefinitionClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCustomResourceDefinitionClient) EXPECT() *MockCustomResourceDefinitionClientMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockCustomResourceDefinitionClient) Get(ctx context.Context, name string) (*v1beta1.CustomResourceDefinition, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, name)
	ret0, _ := ret[0].(*v1beta1.CustomResourceDefinition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockCustomResourceDefinitionClientMockRecorder) Get(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockCustomResourceDefinitionClient)(nil).Get), ctx, name)
}

// List mocks base method.
func (m *MockCustomResourceDefinitionClient) List(ctx context.Context) (*v1beta1.CustomResourceDefinitionList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", ctx)
	ret0, _ := ret[0].(*v1beta1.CustomResourceDefinitionList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockCustomResourceDefinitionClientMockRecorder) List(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockCustomResourceDefinitionClient)(nil).List), ctx)
}

// Delete mocks base method.
func (m *MockCustomResourceDefinitionClient) Delete(ctx context.Context, crd *v1beta1.CustomResourceDefinition) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, crd)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockCustomResourceDefinitionClientMockRecorder) Delete(ctx, crd interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockCustomResourceDefinitionClient)(nil).Delete), ctx, crd)
}
