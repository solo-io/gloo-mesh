// Code generated by MockGen. DO NOT EDIT.
// Source: ./dependencies.go

// Package mock_internal is a generated GoMock package.
package mock_internal

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	traffictarget "github.com/solo-io/service-mesh-hub/pkg/mesh-networking/translation/smi/traffictarget"
)

// MockDependencyFactory is a mock of DependencyFactory interface
type MockDependencyFactory struct {
	ctrl     *gomock.Controller
	recorder *MockDependencyFactoryMockRecorder
}

// MockDependencyFactoryMockRecorder is the mock recorder for MockDependencyFactory
type MockDependencyFactoryMockRecorder struct {
	mock *MockDependencyFactory
}

// NewMockDependencyFactory creates a new mock instance
func NewMockDependencyFactory(ctrl *gomock.Controller) *MockDependencyFactory {
	mock := &MockDependencyFactory{ctrl: ctrl}
	mock.recorder = &MockDependencyFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDependencyFactory) EXPECT() *MockDependencyFactoryMockRecorder {
	return m.recorder
}

// MakeTrafficTargetTranslator mocks base method
func (m *MockDependencyFactory) MakeTrafficTargetTranslator() traffictarget.Translator {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MakeTrafficTargetTranslator")
	ret0, _ := ret[0].(traffictarget.Translator)
	return ret0
}

// MakeTrafficTargetTranslator indicates an expected call of MakeTrafficTargetTranslator
func (mr *MockDependencyFactoryMockRecorder) MakeTrafficTargetTranslator() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MakeTrafficTargetTranslator", reflect.TypeOf((*MockDependencyFactory)(nil).MakeTrafficTargetTranslator))
}
