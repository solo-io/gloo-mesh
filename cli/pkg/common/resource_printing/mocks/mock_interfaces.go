// Code generated by MockGen. DO NOT EDIT.
// Source: ./interfaces.go

// Package mock_resource_printing is a generated GoMock package.
package mock_resource_printing

import (
	io "io"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	resource_printing "github.com/solo-io/service-mesh-hub/cli/pkg/common/resource_printing"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// MockResourcePrinter is a mock of ResourcePrinter interface.
type MockResourcePrinter struct {
	ctrl     *gomock.Controller
	recorder *MockResourcePrinterMockRecorder
}

// MockResourcePrinterMockRecorder is the mock recorder for MockResourcePrinter.
type MockResourcePrinterMockRecorder struct {
	mock *MockResourcePrinter
}

// NewMockResourcePrinter creates a new mock instance.
func NewMockResourcePrinter(ctrl *gomock.Controller) *MockResourcePrinter {
	mock := &MockResourcePrinter{ctrl: ctrl}
	mock.recorder = &MockResourcePrinterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResourcePrinter) EXPECT() *MockResourcePrinterMockRecorder {
	return m.recorder
}

// Print mocks base method.
func (m *MockResourcePrinter) Print(out io.Writer, object runtime.Object, format resource_printing.OutputFormat) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Print", out, object, format)
	ret0, _ := ret[0].(error)
	return ret0
}

// Print indicates an expected call of Print.
func (mr *MockResourcePrinterMockRecorder) Print(out, object, format interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Print", reflect.TypeOf((*MockResourcePrinter)(nil).Print), out, object, format)
}
