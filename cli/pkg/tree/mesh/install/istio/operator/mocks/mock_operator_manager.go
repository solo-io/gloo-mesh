// Code generated by MockGen. DO NOT EDIT.
// Source: manager.go

// Package mock_operator is a generated GoMock package.
package mock_operator

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOperatorManager is a mock of OperatorManager interface.
type MockOperatorManager struct {
	ctrl     *gomock.Controller
	recorder *MockOperatorManagerMockRecorder
}

// MockOperatorManagerMockRecorder is the mock recorder for MockOperatorManager.
type MockOperatorManagerMockRecorder struct {
	mock *MockOperatorManager
}

// NewMockOperatorManager creates a new mock instance.
func NewMockOperatorManager(ctrl *gomock.Controller) *MockOperatorManager {
	mock := &MockOperatorManager{ctrl: ctrl}
	mock.recorder = &MockOperatorManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOperatorManager) EXPECT() *MockOperatorManagerMockRecorder {
	return m.recorder
}

// Install mocks base method.
func (m *MockOperatorManager) Install() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Install")
	ret0, _ := ret[0].(error)
	return ret0
}

// Install indicates an expected call of Install.
func (mr *MockOperatorManagerMockRecorder) Install() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Install", reflect.TypeOf((*MockOperatorManager)(nil).Install))
}

// ValidateOperatorNamespace mocks base method.
func (m *MockOperatorManager) ValidateOperatorNamespace(clusterName string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateOperatorNamespace", clusterName)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateOperatorNamespace indicates an expected call of ValidateOperatorNamespace.
func (mr *MockOperatorManagerMockRecorder) ValidateOperatorNamespace(clusterName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateOperatorNamespace", reflect.TypeOf((*MockOperatorManager)(nil).ValidateOperatorNamespace), clusterName)
}
